//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace DataPowerFileManager.com.prolifics.dpowerxi50 {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="xml-mgmt-soap", Namespace="http://www.datapower.com/schemas/management/wsdl")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyConfigBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigConfigBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(dmTraceEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(dmAgentConfigType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(dmAccessPolicyType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(dmDomainURLMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(dmWSSecureConversationState))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(dmQName))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(dmTAMActionResourceMap))]
    public partial class xmlmgmt : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback operationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public xmlmgmt() {
            this.Url = global::DataPowerFileManager.Properties.Settings.Default.DataPowerFileManager_com_prolifics_dpowerxi50_xml_mgmt;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event operationCompletedEventHandler operationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("response", Namespace="http://www.datapower.com/schemas/management")]
        public response operation([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/management")] request request) {
            object[] results = this.Invoke("operation", new object[] {
                        request});
            return ((response)(results[0]));
        }
        
        /// <remarks/>
        public void operationAsync(request request) {
            this.operationAsync(request, null);
        }
        
        /// <remarks/>
        public void operationAsync(request request, object userState) {
            if ((this.operationOperationCompleted == null)) {
                this.operationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnoperationOperationCompleted);
            }
            this.InvokeAsync("operation", new object[] {
                        request}, this.operationOperationCompleted, userState);
        }
        
        private void OnoperationOperationCompleted(object arg) {
            if ((this.operationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.operationCompleted(this, new operationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class request {
        
        private object itemField;
        
        private string domainField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("del-config", typeof(AnyDeleteElement))]
        [System.Xml.Serialization.XmlElementAttribute("do-action", typeof(AnyActionElement1))]
        [System.Xml.Serialization.XmlElementAttribute("do-backup", typeof(requestDobackup))]
        [System.Xml.Serialization.XmlElementAttribute("do-export", typeof(requestDoexport))]
        [System.Xml.Serialization.XmlElementAttribute("do-import", typeof(requestDoimport))]
        [System.Xml.Serialization.XmlElementAttribute("do-restore", typeof(requestDorestore))]
        [System.Xml.Serialization.XmlElementAttribute("get-config", typeof(requestGetconfig))]
        [System.Xml.Serialization.XmlElementAttribute("get-conformance-report", typeof(requestGetconformancereport))]
        [System.Xml.Serialization.XmlElementAttribute("get-diff", typeof(requestGetdiff))]
        [System.Xml.Serialization.XmlElementAttribute("get-file", typeof(requestGetfile))]
        [System.Xml.Serialization.XmlElementAttribute("get-filestore", typeof(requestGetfilestore))]
        [System.Xml.Serialization.XmlElementAttribute("get-log", typeof(requestGetlog))]
        [System.Xml.Serialization.XmlElementAttribute("get-samlart", typeof(requestGetsamlart))]
        [System.Xml.Serialization.XmlElementAttribute("get-status", typeof(requestGetstatus))]
        [System.Xml.Serialization.XmlElementAttribute("modify-config", typeof(AnyModifyElement))]
        [System.Xml.Serialization.XmlElementAttribute("set-config", typeof(AnyConfigElement))]
        [System.Xml.Serialization.XmlElementAttribute("set-file", typeof(requestSetfile))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class AnyDeleteElement {
        
        private dmDelConfig[] itemsField;
        
        private ItemsChoiceType77[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AAAPolicy", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AccessControlList", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AppSecurityPolicy", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CRLFetch", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CertMonitor", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CompileOptionsPolicy", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ConformancePolicy", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CountMonitor", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoCertificate", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoFWCred", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoIdentCred", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoKerberosKDC", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoKerberosKeytab", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoKey", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoProfile", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoSSKey", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoValCred", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DNSNameService", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DocumentCryptoMap", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Domain", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DurationMonitor", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorReportSettings", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EthernetInterface", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FTPFilePollerSourceProtocolHandler", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FTPQuoteCommands", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FTPServerSourceProtocolHandler", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FilterAction", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPInputConversionMap", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPSSourceProtocolHandler", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPService", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPSourceProtocolHandler", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPUserAgent", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HostAlias", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IMSConnect", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IMSConnectSourceProtocolHandler", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ImportPackage", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IncludeConfig", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoadBalancerGroup", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogLabel", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogTarget", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQGW", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQQM", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQQMGroup", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQSourceProtocolHandler", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQhost", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQproxy", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MTOMPolicy", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Matching", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MessageMatching", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MessageType", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MgmtInterface", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MultiProtocolGateway", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NFSClientSettings", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NFSDynamicMounts", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NFSFilePollerSourceProtocolHandler", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NFSStaticMount", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NTPService", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NameValueProfile", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NetworkSettings", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PeerGroup", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PolicyAttachments", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PolicyParameters", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProcessingMetadata", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RADIUSSettings", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RBMSettings", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMAction", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMCredClass", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMPolicy", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMRsrcClass", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMSchedule", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SNMPSettings", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SOAPHeaderDisposition", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SQLDataSource", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSHService", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxyProfile", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxyService", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SchemaExceptionMap", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ShellAlias", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SimpleCountMonitor", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StatelessTCPSourceProtocolHandler", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Statistics", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicy", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicyAction", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicyRule", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SystemSettings", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TAM", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TCPProxyService", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TFIMEndpoint", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TelnetService", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Throttler", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TibcoEMSServer", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TibcoEMSSourceProtocolHandler", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TimeSettings", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UDDIRegistry", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UDDISubscription", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLMap", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRefreshPolicy", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRewritePolicy", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("User", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserGroup", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("VLANInterface", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSEndpointRewritePolicy", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSGateway", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRRServer", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRRSubscription", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSStylePolicy", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSStylePolicyRule", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebAppErrorHandlingPolicy", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebAppFW", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebAppRequest", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebAppResponse", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebAppSessionPolicy", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebGUI", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebServiceMonitor", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebServicesAgent", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebSphereJMSServer", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebSphereJMSSourceProtocolHandler", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XACMLPDP", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLFirewallService", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XPathRoutingMap", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XSLCoprocService", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XSLProxyService", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XTCProtocolHandler", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xmltrace", typeof(dmDelConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public dmDelConfig[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType77[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmDelConfig {
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class file {
        
        private string nameField;
        
        private byte[] valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="base64Binary")]
        public byte[] Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="AnyActionElement", Namespace="http://www.datapower.com/schemas/management")]
    public partial class AnyActionElement1 {
        
        private object[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AddPasswordMap", typeof(ActionAddPasswordMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AddTrustedHost", typeof(ActionAddTrustedHost), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ApplyPatch", typeof(ActionApplyPatch), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackupConfig", typeof(ActionBackupConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BootDelete", typeof(ActionBootDelete), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BootSwitch", typeof(ActionBootSwitch), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BootUpdate", typeof(ActionBootUpdate), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CacheSchema", typeof(ActionCacheSchema), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CacheStylesheet", typeof(ActionCacheStylesheet), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CacheWSDL", typeof(ActionCacheWSDL), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ChangePassword", typeof(ActionChangePassword), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CreateDir", typeof(ActionCreateDir), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CreateTAMFiles", typeof(ActionCreateTAMFiles), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoExport", typeof(ActionCryptoExport), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoImport", typeof(ActionCryptoImport), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DeleteFile", typeof(ActionDeleteFile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DeleteHSMKey", typeof(ActionDeleteHSMKey), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DeleteTrustedHost", typeof(ActionDeleteTrustedHost), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DeviceCertificate", typeof(ActionDeviceCertificate), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Disconnect", typeof(ActionDisconnect), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorReport", typeof(ActionErrorReport), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ExecConfig", typeof(ActionExecConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FetchFile", typeof(ActionFetchFile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FileCapture", typeof(ActionFileCapture), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FlushAAACache", typeof(ActionFlushAAACache), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FlushArpCache", typeof(ActionFlushArpCache), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FlushDNSCache", typeof(ActionFlushDNSCache), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FlushDocumentCache", typeof(ActionFlushDocumentCache), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FlushPDPCache", typeof(ActionFlushPDPCache), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FlushRBMCache", typeof(ActionFlushRBMCache), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FlushStylesheetCache", typeof(ActionFlushStylesheetCache), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HSMCloneKWK", typeof(ActionHSMCloneKWK), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HSMReInit", typeof(ActionHSMReInit), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ImportExecute", typeof(ActionImportExecute), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Keygen", typeof(ActionKeygen), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MoveFile", typeof(ActionMoveFile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NoPasswordMap", typeof(ActionNoPasswordMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PacketCapture", typeof(ActionPacketCapture), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PacketCaptureDebug", typeof(ActionPacketCaptureDebug), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PasswordMap", typeof(ActionPasswordMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Ping", typeof(ActionPing), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RefreshDocument", typeof(ActionRefreshDocument), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RefreshStylesheet", typeof(ActionRefreshStylesheet), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoveCheckpoint", typeof(ActionRemoveCheckpoint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoveDir", typeof(ActionRemoveDir), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoveStylesheet", typeof(ActionRemoveStylesheet), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RestartDomain", typeof(ActionRestartDomain), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RestartThisDomain", typeof(ActionRestartThisDomain), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RollbackCheckpoint", typeof(ActionRollbackCheckpoint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLTrace", typeof(ActionSSLTrace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SaveCheckpoint", typeof(ActionSaveCheckpoint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SaveConfig", typeof(ActionSaveConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SaveInternalState", typeof(ActionSaveInternalState), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SelectConfig", typeof(ActionSelectConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SendErrorReport", typeof(ActionSendErrorReport), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SendFile", typeof(ActionSendFile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SendLogEvent", typeof(ActionSendLogEvent), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SetLogLevel", typeof(ActionSetLogLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SetRBMDebugLog", typeof(ActionSetRBMDebugLog), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SetSystemVar", typeof(ActionSetSystemVar), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SetTimeAndDate", typeof(ActionSetTimeAndDate), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Shutdown", typeof(ActionShutdown), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StopPacketCapture", typeof(ActionStopPacketCapture), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TCPConnectionTest", typeof(ActionTCPConnectionTest), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TestPasswordMap", typeof(ActionTestPasswordMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TestRadius", typeof(ActionTestRadius), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TestURLMap", typeof(ActionTestURLMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TestURLRefresh", typeof(ActionTestURLRefresh), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TestURLRewrite", typeof(ActionTestURLRewrite), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UndoConfig", typeof(ActionUndoConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UniversalPacketCaptureDebug", typeof(ActionUniversalPacketCaptureDebug), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UniversalStopPacketCapture", typeof(ActionUniversalStopPacketCapture), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UpgradeWatchdog", typeof(ActionUpgradeWatchdog), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserForcePasswordChange", typeof(ActionUserForcePasswordChange), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("VLANPacketCapture", typeof(ActionVLANPacketCapture), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("VLANStopPacketCapture", typeof(ActionVLANStopPacketCapture), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ValCredAddCertsFromDir", typeof(ActionValCredAddCertsFromDir), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WsrrSynchronize", typeof(ActionWsrrSynchronize), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionAddPasswordMap {
        
        private string aliasNameField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AliasName {
            get {
                return this.aliasNameField;
            }
            set {
                this.aliasNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionAddTrustedHost {
        
        private string hostField;
        
        private dmTrustedHostKeyType typeField;
        
        private string keyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmTrustedHostKeyType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmTrustedHostKeyType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ssh-rsa")]
        sshrsa,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionApplyPatch {
        
        private string fileField;
        
        private dmToggle reloadField;
        
        private bool reloadFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Reload {
            get {
                return this.reloadField;
            }
            set {
                this.reloadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReloadSpecified {
            get {
                return this.reloadFieldSpecified;
            }
            set {
                this.reloadFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmToggle {
        
        /// <remarks/>
        on,
        
        /// <remarks/>
        off,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionBackupConfig {
        
        private object fillerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object filler {
            get {
                return this.fillerField;
            }
            set {
                this.fillerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionBootDelete {
        
        private object fillerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object filler {
            get {
                return this.fillerField;
            }
            set {
                this.fillerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionBootSwitch {
        
        private object fillerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object filler {
            get {
                return this.fillerField;
            }
            set {
                this.fillerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionBootUpdate {
        
        private string optionField;
        
        private string fileField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string option {
            get {
                return this.optionField;
            }
            set {
                this.optionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionCacheSchema {
        
        private dmReference xMLManagerField;
        
        private string uRLField;
        
        private string modeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmReference {
        
        private string classField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionCacheStylesheet {
        
        private dmReference xMLManagerField;
        
        private string uRLField;
        
        private string modeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionCacheWSDL {
        
        private dmReference xMLManagerField;
        
        private string uRLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionChangePassword {
        
        private string oldPasswordField;
        
        private string passwordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OldPassword {
            get {
                return this.oldPasswordField;
            }
            set {
                this.oldPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionCreateDir {
        
        private string dirField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string Dir {
            get {
                return this.dirField;
            }
            set {
                this.dirField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionCreateTAMFiles {
        
        private dmToggle createCopyField;
        
        private bool createCopyFieldSpecified;
        
        private string outputConfigFileField;
        
        private string administratorField;
        
        private string passwordField;
        
        private string tAMDomainField;
        
        private string applicationField;
        
        private string hostField;
        
        private ushort portField;
        
        private ushort sSLKeyFileLifetimeField;
        
        private uint sSLTimeoutField;
        
        private string lDAPServerField;
        
        private ushort lDAPPortField;
        
        private string lDAPBindPasswordField;
        
        private uint lDAPAuthenticateTimeoutField;
        
        private uint lDAPSearchTimeoutField;
        
        private dmToggle lDAPCacheField;
        
        private bool lDAPCacheFieldSpecified;
        
        private ushort lDAPUserCacheSizeField;
        
        private bool lDAPUserCacheSizeFieldSpecified;
        
        private ushort lDAPPolicyCacheSizeField;
        
        private bool lDAPPolicyCacheSizeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle CreateCopy {
            get {
                return this.createCopyField;
            }
            set {
                this.createCopyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreateCopySpecified {
            get {
                return this.createCopyFieldSpecified;
            }
            set {
                this.createCopyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OutputConfigFile {
            get {
                return this.outputConfigFileField;
            }
            set {
                this.outputConfigFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Administrator {
            get {
                return this.administratorField;
            }
            set {
                this.administratorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TAMDomain {
            get {
                return this.tAMDomainField;
            }
            set {
                this.tAMDomainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Application {
            get {
                return this.applicationField;
            }
            set {
                this.applicationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort SSLKeyFileLifetime {
            get {
                return this.sSLKeyFileLifetimeField;
            }
            set {
                this.sSLKeyFileLifetimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint SSLTimeout {
            get {
                return this.sSLTimeoutField;
            }
            set {
                this.sSLTimeoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LDAPServer {
            get {
                return this.lDAPServerField;
            }
            set {
                this.lDAPServerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort LDAPPort {
            get {
                return this.lDAPPortField;
            }
            set {
                this.lDAPPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LDAPBindPassword {
            get {
                return this.lDAPBindPasswordField;
            }
            set {
                this.lDAPBindPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LDAPAuthenticateTimeout {
            get {
                return this.lDAPAuthenticateTimeoutField;
            }
            set {
                this.lDAPAuthenticateTimeoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LDAPSearchTimeout {
            get {
                return this.lDAPSearchTimeoutField;
            }
            set {
                this.lDAPSearchTimeoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle LDAPCache {
            get {
                return this.lDAPCacheField;
            }
            set {
                this.lDAPCacheField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LDAPCacheSpecified {
            get {
                return this.lDAPCacheFieldSpecified;
            }
            set {
                this.lDAPCacheFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort LDAPUserCacheSize {
            get {
                return this.lDAPUserCacheSizeField;
            }
            set {
                this.lDAPUserCacheSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LDAPUserCacheSizeSpecified {
            get {
                return this.lDAPUserCacheSizeFieldSpecified;
            }
            set {
                this.lDAPUserCacheSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort LDAPPolicyCacheSize {
            get {
                return this.lDAPPolicyCacheSizeField;
            }
            set {
                this.lDAPPolicyCacheSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LDAPPolicyCacheSizeSpecified {
            get {
                return this.lDAPPolicyCacheSizeFieldSpecified;
            }
            set {
                this.lDAPPolicyCacheSizeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionCryptoExport {
        
        private dmCryptoObjectType objectTypeField;
        
        private bool objectTypeFieldSpecified;
        
        private string objectNameField;
        
        private string outputFilenameField;
        
        private dmCryptoExportMechanism mechanismField;
        
        private bool mechanismFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmCryptoObjectType ObjectType {
            get {
                return this.objectTypeField;
            }
            set {
                this.objectTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ObjectTypeSpecified {
            get {
                return this.objectTypeFieldSpecified;
            }
            set {
                this.objectTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ObjectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OutputFilename {
            get {
                return this.outputFilenameField;
            }
            set {
                this.outputFilenameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmCryptoExportMechanism Mechanism {
            get {
                return this.mechanismField;
            }
            set {
                this.mechanismField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MechanismSpecified {
            get {
                return this.mechanismFieldSpecified;
            }
            set {
                this.mechanismFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCryptoObjectType {
        
        /// <remarks/>
        key,
        
        /// <remarks/>
        cert,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCryptoExportMechanism {
        
        /// <remarks/>
        hsmkwk,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionCryptoImport {
        
        private dmCryptoObjectType objectTypeField;
        
        private bool objectTypeFieldSpecified;
        
        private string objectNameField;
        
        private string inputFilenameField;
        
        private string importPasswordField;
        
        private string importPasswordAliasField;
        
        private dmToggle kwkExportableField;
        
        private bool kwkExportableFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmCryptoObjectType ObjectType {
            get {
                return this.objectTypeField;
            }
            set {
                this.objectTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ObjectTypeSpecified {
            get {
                return this.objectTypeFieldSpecified;
            }
            set {
                this.objectTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ObjectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string InputFilename {
            get {
                return this.inputFilenameField;
            }
            set {
                this.inputFilenameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ImportPassword {
            get {
                return this.importPasswordField;
            }
            set {
                this.importPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ImportPasswordAlias {
            get {
                return this.importPasswordAliasField;
            }
            set {
                this.importPasswordAliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle KwkExportable {
            get {
                return this.kwkExportableField;
            }
            set {
                this.kwkExportableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KwkExportableSpecified {
            get {
                return this.kwkExportableFieldSpecified;
            }
            set {
                this.kwkExportableFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionDeleteFile {
        
        private string fileField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionDeleteHSMKey {
        
        private string keyHandleField;
        
        private dmCryptoHSMKeyType keyTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string KeyHandle {
            get {
                return this.keyHandleField;
            }
            set {
                this.keyHandleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmCryptoHSMKeyType KeyType {
            get {
                return this.keyTypeField;
            }
            set {
                this.keyTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCryptoHSMKeyType {
        
        /// <remarks/>
        @private,
        
        /// <remarks/>
        @public,
        
        /// <remarks/>
        secret,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionDeleteTrustedHost {
        
        private string hostField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionDeviceCertificate {
        
        private string cnField;
        
        private dmToggle sSCertField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CN {
            get {
                return this.cnField;
            }
            set {
                this.cnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle SSCert {
            get {
                return this.sSCertField;
            }
            set {
                this.sSCertField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionDisconnect {
        
        private uint idField;
        
        private dmUserConnection connectionField;
        
        private bool connectionFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmUserConnection connection {
            get {
                return this.connectionField;
            }
            set {
                this.connectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectionSpecified {
            get {
                return this.connectionFieldSpecified;
            }
            set {
                this.connectionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmUserConnection {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("serial-port")]
        serialport,
        
        /// <remarks/>
        telnet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("secure-shell")]
        secureshell,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("web-gui")]
        webgui,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("saml-artifact")]
        samlartifact,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionErrorReport {
        
        private dmToggle internalStateField;
        
        private bool internalStateFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle InternalState {
            get {
                return this.internalStateField;
            }
            set {
                this.internalStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InternalStateSpecified {
            get {
                return this.internalStateFieldSpecified;
            }
            set {
                this.internalStateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionExecConfig {
        
        private string uRLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionFetchFile {
        
        private string uRLField;
        
        private string fileField;
        
        private dmToggle overwriteField;
        
        private bool overwriteFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Overwrite {
            get {
                return this.overwriteField;
            }
            set {
                this.overwriteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OverwriteSpecified {
            get {
                return this.overwriteFieldSpecified;
            }
            set {
                this.overwriteFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionFileCapture {
        
        private dmXMLTracingMode modeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmXMLTracingMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmXMLTracingMode {
        
        /// <remarks/>
        off,
        
        /// <remarks/>
        always,
        
        /// <remarks/>
        errors,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionFlushAAACache {
        
        private dmReference policyNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference PolicyName {
            get {
                return this.policyNameField;
            }
            set {
                this.policyNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionFlushArpCache {
        
        private object fillerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object filler {
            get {
                return this.fillerField;
            }
            set {
                this.fillerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionFlushDNSCache {
        
        private object fillerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object filler {
            get {
                return this.fillerField;
            }
            set {
                this.fillerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionFlushDocumentCache {
        
        private dmReference xMLManagerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionFlushPDPCache {
        
        private object fillerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object filler {
            get {
                return this.fillerField;
            }
            set {
                this.fillerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionFlushRBMCache {
        
        private object fillerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object filler {
            get {
                return this.fillerField;
            }
            set {
                this.fillerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionFlushStylesheetCache {
        
        private dmReference xMLManagerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionHSMCloneKWK {
        
        private string inputFilenameField;
        
        private string outputFilenameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string InputFilename {
            get {
                return this.inputFilenameField;
            }
            set {
                this.inputFilenameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OutputFilename {
            get {
                return this.outputFilenameField;
            }
            set {
                this.outputFilenameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionHSMReInit {
        
        private string fipslevelField;
        
        private string sopasswordField;
        
        private string userpasswordField;
        
        private string hsmdomainField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fips-level", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fipslevel {
            get {
                return this.fipslevelField;
            }
            set {
                this.fipslevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("so-password", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sopassword {
            get {
                return this.sopasswordField;
            }
            set {
                this.sopasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("user-password", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userpassword {
            get {
                return this.userpasswordField;
            }
            set {
                this.userpasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("hsm-domain", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hsmdomain {
            get {
                return this.hsmdomainField;
            }
            set {
                this.hsmdomainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionImportExecute {
        
        private string importPackageNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ImportPackageName {
            get {
                return this.importPackageNameField;
            }
            set {
                this.importPackageNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionKeygen {
        
        private dmToggle lDAPOrderField;
        
        private bool lDAPOrderFieldSpecified;
        
        private string cField;
        
        private string stField;
        
        private string lField;
        
        private string oField;
        
        private string ouField;
        
        private string oU1Field;
        
        private string oU2Field;
        
        private string oU3Field;
        
        private string cnField;
        
        private dmKeygenLength keyLengthField;
        
        private bool keyLengthFieldSpecified;
        
        private string fileNameField;
        
        private uint daysField;
        
        private bool daysFieldSpecified;
        
        private string passwordField;
        
        private string passwordAliasField;
        
        private dmToggle kwkExportableField;
        
        private bool kwkExportableFieldSpecified;
        
        private dmToggle exportKeyField;
        
        private bool exportKeyFieldSpecified;
        
        private dmToggle genSSCertField;
        
        private bool genSSCertFieldSpecified;
        
        private dmToggle exportSSCertField;
        
        private bool exportSSCertFieldSpecified;
        
        private dmToggle genObjectField;
        
        private bool genObjectFieldSpecified;
        
        private string objectNameField;
        
        private dmToggle hSMField;
        
        private bool hSMFieldSpecified;
        
        private string usingKeyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle LDAPOrder {
            get {
                return this.lDAPOrderField;
            }
            set {
                this.lDAPOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LDAPOrderSpecified {
            get {
                return this.lDAPOrderFieldSpecified;
            }
            set {
                this.lDAPOrderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string C {
            get {
                return this.cField;
            }
            set {
                this.cField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ST {
            get {
                return this.stField;
            }
            set {
                this.stField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string L {
            get {
                return this.lField;
            }
            set {
                this.lField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string O {
            get {
                return this.oField;
            }
            set {
                this.oField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OU {
            get {
                return this.ouField;
            }
            set {
                this.ouField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OU1 {
            get {
                return this.oU1Field;
            }
            set {
                this.oU1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OU2 {
            get {
                return this.oU2Field;
            }
            set {
                this.oU2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OU3 {
            get {
                return this.oU3Field;
            }
            set {
                this.oU3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CN {
            get {
                return this.cnField;
            }
            set {
                this.cnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmKeygenLength KeyLength {
            get {
                return this.keyLengthField;
            }
            set {
                this.keyLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeyLengthSpecified {
            get {
                return this.keyLengthFieldSpecified;
            }
            set {
                this.keyLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Days {
            get {
                return this.daysField;
            }
            set {
                this.daysField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DaysSpecified {
            get {
                return this.daysFieldSpecified;
            }
            set {
                this.daysFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PasswordAlias {
            get {
                return this.passwordAliasField;
            }
            set {
                this.passwordAliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle KwkExportable {
            get {
                return this.kwkExportableField;
            }
            set {
                this.kwkExportableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KwkExportableSpecified {
            get {
                return this.kwkExportableFieldSpecified;
            }
            set {
                this.kwkExportableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle ExportKey {
            get {
                return this.exportKeyField;
            }
            set {
                this.exportKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExportKeySpecified {
            get {
                return this.exportKeyFieldSpecified;
            }
            set {
                this.exportKeyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle GenSSCert {
            get {
                return this.genSSCertField;
            }
            set {
                this.genSSCertField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GenSSCertSpecified {
            get {
                return this.genSSCertFieldSpecified;
            }
            set {
                this.genSSCertFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle ExportSSCert {
            get {
                return this.exportSSCertField;
            }
            set {
                this.exportSSCertField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExportSSCertSpecified {
            get {
                return this.exportSSCertFieldSpecified;
            }
            set {
                this.exportSSCertFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle GenObject {
            get {
                return this.genObjectField;
            }
            set {
                this.genObjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GenObjectSpecified {
            get {
                return this.genObjectFieldSpecified;
            }
            set {
                this.genObjectFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ObjectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HSM {
            get {
                return this.hSMField;
            }
            set {
                this.hSMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HSMSpecified {
            get {
                return this.hSMFieldSpecified;
            }
            set {
                this.hSMFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UsingKey {
            get {
                return this.usingKeyField;
            }
            set {
                this.usingKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmKeygenLength {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1024")]
        Item1024,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2048")]
        Item2048,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4096")]
        Item4096,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionMoveFile {
        
        private string sURLField;
        
        private string dURLField;
        
        private dmToggle overwriteField;
        
        private bool overwriteFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string sURL {
            get {
                return this.sURLField;
            }
            set {
                this.sURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string dURL {
            get {
                return this.dURLField;
            }
            set {
                this.dURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Overwrite {
            get {
                return this.overwriteField;
            }
            set {
                this.overwriteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OverwriteSpecified {
            get {
                return this.overwriteFieldSpecified;
            }
            set {
                this.overwriteFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionNoPasswordMap {
        
        private object fillerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object filler {
            get {
                return this.fillerField;
            }
            set {
                this.fillerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionPacketCapture {
        
        private dmReference interfaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Interface {
            get {
                return this.interfaceField;
            }
            set {
                this.interfaceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionPacketCaptureDebug {
        
        private dmReference interfaceField;
        
        private dmPacketCaptureMode captureModeField;
        
        private uint maxTimeField;
        
        private uint maxSizeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Interface {
            get {
                return this.interfaceField;
            }
            set {
                this.interfaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmPacketCaptureMode CaptureMode {
            get {
                return this.captureModeField;
            }
            set {
                this.captureModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint MaxTime {
            get {
                return this.maxTimeField;
            }
            set {
                this.maxTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint MaxSize {
            get {
                return this.maxSizeField;
            }
            set {
                this.maxSizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmPacketCaptureMode {
        
        /// <remarks/>
        timed,
        
        /// <remarks/>
        continuous,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionPasswordMap {
        
        private object fillerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object filler {
            get {
                return this.fillerField;
            }
            set {
                this.fillerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionPing {
        
        private string remoteHostField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RemoteHost {
            get {
                return this.remoteHostField;
            }
            set {
                this.remoteHostField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionRefreshDocument {
        
        private dmReference xMLManagerField;
        
        private string documentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string Document {
            get {
                return this.documentField;
            }
            set {
                this.documentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionRefreshStylesheet {
        
        private dmReference xMLManagerField;
        
        private string stylesheetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string Stylesheet {
            get {
                return this.stylesheetField;
            }
            set {
                this.stylesheetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionRemoveCheckpoint {
        
        private string chkNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ChkName {
            get {
                return this.chkNameField;
            }
            set {
                this.chkNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionRemoveDir {
        
        private string dirField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Dir {
            get {
                return this.dirField;
            }
            set {
                this.dirField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionRemoveStylesheet {
        
        private dmReference xMLManagerField;
        
        private string matchPatternField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MatchPattern {
            get {
                return this.matchPatternField;
            }
            set {
                this.matchPatternField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionRestartDomain {
        
        private dmReference domainField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionRestartThisDomain {
        
        private object fillerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object filler {
            get {
                return this.fillerField;
            }
            set {
                this.fillerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionRollbackCheckpoint {
        
        private string chkNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ChkName {
            get {
                return this.chkNameField;
            }
            set {
                this.chkNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionSSLTrace {
        
        private string sSLProfileNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SSLProfileName {
            get {
                return this.sSLProfileNameField;
            }
            set {
                this.sSLProfileNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionSaveCheckpoint {
        
        private string chkNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ChkName {
            get {
                return this.chkNameField;
            }
            set {
                this.chkNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionSaveConfig {
        
        private object fillerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object filler {
            get {
                return this.fillerField;
            }
            set {
                this.fillerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionSaveInternalState {
        
        private object fillerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object filler {
            get {
                return this.fillerField;
            }
            set {
                this.fillerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionSelectConfig {
        
        private string fileField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionSendErrorReport {
        
        private string smtpServerField;
        
        private string locationIdentifierField;
        
        private string emailAddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SmtpServer {
            get {
                return this.smtpServerField;
            }
            set {
                this.smtpServerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LocationIdentifier {
            get {
                return this.locationIdentifierField;
            }
            set {
                this.locationIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionSendFile {
        
        private string locationIdentifierField;
        
        private string smtpServerField;
        
        private string emailAddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LocationIdentifier {
            get {
                return this.locationIdentifierField;
            }
            set {
                this.locationIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SmtpServer {
            get {
                return this.smtpServerField;
            }
            set {
                this.smtpServerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionSendLogEvent {
        
        private dmReference logTypeField;
        
        private dmLogLevel genLogLevelField;
        
        private string logEventField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference LogType {
            get {
                return this.logTypeField;
            }
            set {
                this.logTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmLogLevel GenLogLevel {
            get {
                return this.genLogLevelField;
            }
            set {
                this.genLogLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LogEvent {
            get {
                return this.logEventField;
            }
            set {
                this.logEventField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmLogLevel {
        
        /// <remarks/>
        emerg,
        
        /// <remarks/>
        alert,
        
        /// <remarks/>
        critic,
        
        /// <remarks/>
        error,
        
        /// <remarks/>
        warn,
        
        /// <remarks/>
        notice,
        
        /// <remarks/>
        info,
        
        /// <remarks/>
        debug,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionSetLogLevel {
        
        private dmLogLevel logLevelField;
        
        private dmToggle internalLogField;
        
        private bool internalLogFieldSpecified;
        
        private dmToggle rBMLogField;
        
        private bool rBMLogFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmLogLevel LogLevel {
            get {
                return this.logLevelField;
            }
            set {
                this.logLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle InternalLog {
            get {
                return this.internalLogField;
            }
            set {
                this.internalLogField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InternalLogSpecified {
            get {
                return this.internalLogFieldSpecified;
            }
            set {
                this.internalLogFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle RBMLog {
            get {
                return this.rBMLogField;
            }
            set {
                this.rBMLogField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RBMLogSpecified {
            get {
                return this.rBMLogFieldSpecified;
            }
            set {
                this.rBMLogFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionSetRBMDebugLog {
        
        private dmToggle rBMLogField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle RBMLog {
            get {
                return this.rBMLogField;
            }
            set {
                this.rBMLogField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionSetSystemVar {
        
        private dmSystemVar varField;
        
        private uint valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmSystemVar Var {
            get {
                return this.varField;
            }
            set {
                this.varField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSystemVar {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("var://system/map/debug")]
        varsystemmapdebug,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("var://system/tasktemplates/debug")]
        varsystemtasktemplatesdebug,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("var://system/webgui/debug")]
        varsystemwebguidebug,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("var://system/AAA/defaultexpiry")]
        varsystemAAAdefaultexpiry,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("var://system/xmlmgmt/config")]
        varsystemxmlmgmtconfig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("var://system/rbm/config")]
        varsystemrbmconfig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("var://system/slm/datashare-period")]
        varsystemslmdatashareperiod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("var://system/slm/datashare-counter")]
        varsystemslmdatasharecounter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("var://system/policy/debug")]
        varsystempolicydebug,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionSetTimeAndDate {
        
        private string dateField;
        
        private string timeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionShutdown {
        
        private dmShutdownMode modeField;
        
        private uint delayField;
        
        private bool delayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmShutdownMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Delay {
            get {
                return this.delayField;
            }
            set {
                this.delayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DelaySpecified {
            get {
                return this.delayFieldSpecified;
            }
            set {
                this.delayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmShutdownMode {
        
        /// <remarks/>
        reboot,
        
        /// <remarks/>
        reload,
        
        /// <remarks/>
        halt,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionStopPacketCapture {
        
        private dmReference interfaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Interface {
            get {
                return this.interfaceField;
            }
            set {
                this.interfaceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionTCPConnectionTest {
        
        private string remoteHostField;
        
        private ushort remotePortField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RemoteHost {
            get {
                return this.remoteHostField;
            }
            set {
                this.remoteHostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort RemotePort {
            get {
                return this.remotePortField;
            }
            set {
                this.remotePortField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionTestPasswordMap {
        
        private string aliasNameField;
        
        private string typeField;
        
        private string fileURLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AliasName {
            get {
                return this.aliasNameField;
            }
            set {
                this.aliasNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string FileURL {
            get {
                return this.fileURLField;
            }
            set {
                this.fileURLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionTestRadius {
        
        private string userField;
        
        private string passwordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionTestURLMap {
        
        private dmReference uRLMapField;
        
        private string uRLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference URLMap {
            get {
                return this.uRLMapField;
            }
            set {
                this.uRLMapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionTestURLRefresh {
        
        private dmReference uRLRefreshPolicyField;
        
        private string uRLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference URLRefreshPolicy {
            get {
                return this.uRLRefreshPolicyField;
            }
            set {
                this.uRLRefreshPolicyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionTestURLRewrite {
        
        private dmReference uRLRewritePolicyField;
        
        private string uRLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference URLRewritePolicy {
            get {
                return this.uRLRewritePolicyField;
            }
            set {
                this.uRLRewritePolicyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionUndoConfig {
        
        private string classField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionUniversalPacketCaptureDebug {
        
        private dmInterfaceType interfaceTypeField;
        
        private dmReference ethernetInterfaceField;
        
        private dmReference vLANInterfaceField;
        
        private dmPacketCaptureMode captureModeField;
        
        private uint maxTimeField;
        
        private uint maxSizeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmInterfaceType InterfaceType {
            get {
                return this.interfaceTypeField;
            }
            set {
                this.interfaceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference EthernetInterface {
            get {
                return this.ethernetInterfaceField;
            }
            set {
                this.ethernetInterfaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference VLANInterface {
            get {
                return this.vLANInterfaceField;
            }
            set {
                this.vLANInterfaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmPacketCaptureMode CaptureMode {
            get {
                return this.captureModeField;
            }
            set {
                this.captureModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint MaxTime {
            get {
                return this.maxTimeField;
            }
            set {
                this.maxTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint MaxSize {
            get {
                return this.maxSizeField;
            }
            set {
                this.maxSizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmInterfaceType {
        
        /// <remarks/>
        Ethernet,
        
        /// <remarks/>
        VLAN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionUniversalStopPacketCapture {
        
        private dmInterfaceType interfaceTypeField;
        
        private dmReference ethernetInterfaceField;
        
        private dmReference vLANInterfaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmInterfaceType InterfaceType {
            get {
                return this.interfaceTypeField;
            }
            set {
                this.interfaceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference EthernetInterface {
            get {
                return this.ethernetInterfaceField;
            }
            set {
                this.ethernetInterfaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference VLANInterface {
            get {
                return this.vLANInterfaceField;
            }
            set {
                this.vLANInterfaceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionUpgradeWatchdog {
        
        private string fileField;
        
        private dmToggle rebootField;
        
        private bool rebootFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Reboot {
            get {
                return this.rebootField;
            }
            set {
                this.rebootField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RebootSpecified {
            get {
                return this.rebootFieldSpecified;
            }
            set {
                this.rebootFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionUserForcePasswordChange {
        
        private string userField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionVLANPacketCapture {
        
        private dmReference interfaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Interface {
            get {
                return this.interfaceField;
            }
            set {
                this.interfaceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionVLANStopPacketCapture {
        
        private dmReference interfaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Interface {
            get {
                return this.interfaceField;
            }
            set {
                this.interfaceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionValCredAddCertsFromDir {
        
        private object fillerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object filler {
            get {
                return this.fillerField;
            }
            set {
                this.fillerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ActionWsrrSynchronize {
        
        private string wSRRSubscriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string WSRRSubscription {
            get {
                return this.wSRRSubscriptionField;
            }
            set {
                this.wSRRSubscriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="log-entry", Namespace="http://www.datapower.com/schemas/management")]
    public partial class logentry {
        
        private System.Xml.XmlElement[] anyField;
        
        private string serialField;
        
        private string domainField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string serial {
            get {
                return this.serialField;
            }
            set {
                this.serialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class AnyStatusElement {
        
        private object[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ARPStatus", typeof(StatusARPStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ActiveUsers", typeof(StatusActiveUsers), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CPUUsage", typeof(StatusCPUUsage), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ConnectionsAccepted", typeof(StatusConnectionsAccepted), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoEngineStatus", typeof(StatusCryptoEngineStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DNSCacheHostStatus", typeof(StatusDNSCacheHostStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DNSNameServerStatus", typeof(StatusDNSNameServerStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DNSSearchDomainStatus", typeof(StatusDNSSearchDomainStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DNSStaticHostStatus", typeof(StatusDNSStaticHostStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DateTimeStatus", typeof(StatusDateTimeStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DocumentCachingSummary", typeof(StatusDocumentCachingSummary), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DocumentStatus", typeof(StatusDocumentStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DocumentStatusSimpleIndex", typeof(StatusDocumentStatusSimpleIndex), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DomainCheckpointStatus", typeof(StatusDomainCheckpointStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DomainStatus", typeof(StatusDomainStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DynamicQueueManager", typeof(StatusDynamicQueueManager), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EnvironmentalFanSensors", typeof(StatusEnvironmentalFanSensors), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EnvironmentalSensors", typeof(StatusEnvironmentalSensors), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EthernetInterfaceStatus", typeof(StatusEthernetInterfaceStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FilePollerStatus", typeof(StatusFilePollerStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FilesystemStatus", typeof(StatusFilesystemStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FirmwareStatus", typeof(StatusFirmwareStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FirmwareVersion", typeof(StatusFirmwareVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HSMKeyStatus", typeof(StatusHSMKeyStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPConnections", typeof(StatusHTTPConnections), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPConnectionsCreated", typeof(StatusHTTPConnectionsCreated), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPConnectionsDestroyed", typeof(StatusHTTPConnectionsDestroyed), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPConnectionsOffered", typeof(StatusHTTPConnectionsOffered), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPConnectionsRequested", typeof(StatusHTTPConnectionsRequested), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPConnectionsReturned", typeof(StatusHTTPConnectionsReturned), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPConnectionsReused", typeof(StatusHTTPConnectionsReused), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPMeanTransactionTime", typeof(StatusHTTPMeanTransactionTime), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPTransactions", typeof(StatusHTTPTransactions), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IMSConnectstatus", typeof(StatusIMSConnectstatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LibraryVersion", typeof(StatusLibraryVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LicenseStatus", typeof(StatusLicenseStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoadBalancerStatus", typeof(StatusLoadBalancerStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogTargetStatus", typeof(StatusLogTargetStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQQMstatus", typeof(StatusMQQMstatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQStatus", typeof(StatusMQStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MemoryStatus", typeof(StatusMemoryStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MessageCountFilters", typeof(StatusMessageCountFilters), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MessageCounts", typeof(StatusMessageCounts), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MessageDurationFilters", typeof(StatusMessageDurationFilters), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MessageDurations", typeof(StatusMessageDurations), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MessageSources", typeof(StatusMessageSources), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NFSMountStatus", typeof(StatusNFSMountStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NTPRefreshStatus", typeof(StatusNTPRefreshStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NetworkInterfaceStatus", typeof(StatusNetworkInterfaceStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NetworkReceiveDataThroughput", typeof(StatusNetworkReceiveDataThroughput), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NetworkReceivePacketThroughput", typeof(StatusNetworkReceivePacketThroughput), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NetworkTransmitDataThroughput", typeof(StatusNetworkTransmitDataThroughput), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NetworkTransmitPacketThroughput", typeof(StatusNetworkTransmitPacketThroughput), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ObjectStatus", typeof(StatusObjectStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PortStatus", typeof(StatusPortStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReceiveKbpsThroughput", typeof(StatusReceiveKbpsThroughput), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReceivePacketThroughput", typeof(StatusReceivePacketThroughput), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RoutingStatus", typeof(StatusRoutingStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RoutingStatus2", typeof(StatusRoutingStatus2), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMPeeringStatus", typeof(StatusSLMPeeringStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMSummaryStatus", typeof(StatusSLMSummaryStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SNMPStatus", typeof(StatusSNMPStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SQLStatus", typeof(StatusSQLStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSHTrustedHostStatus", typeof(StatusSSHTrustedHostStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ServicesStatus", typeof(StatusServicesStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StandbyStatus", typeof(StatusStandbyStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetCachingSummary", typeof(StatusStylesheetCachingSummary), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetExecutions", typeof(StatusStylesheetExecutions), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetExecutionsSimpleIndex", typeof(StatusStylesheetExecutionsSimpleIndex), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetMeanExecutionTime", typeof(StatusStylesheetMeanExecutionTime), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetMeanExecutionTimeSimpleIndex", typeof(StatusStylesheetMeanExecutionTimeSimpleIndex), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetProfiles", typeof(StatusStylesheetProfiles), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetProfilesSimpleIndex", typeof(StatusStylesheetProfilesSimpleIndex), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetStatus", typeof(StatusStylesheetStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetStatusSimpleIndex", typeof(StatusStylesheetStatusSimpleIndex), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SystemUsage", typeof(StatusSystemUsage), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TCPSummary", typeof(StatusTCPSummary), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TCPTable", typeof(StatusTCPTable), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TibcoEMSStatus", typeof(StatusTibcoEMSStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TransmitKbpsThroughput", typeof(StatusTransmitKbpsThroughput), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TransmitPacketThroughput", typeof(StatusTransmitPacketThroughput), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UDDISubscriptionKeyStatusSimpleIndex", typeof(StatusUDDISubscriptionKeyStatusSimpleIndex), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UDDISubscriptionServiceStatusSimpleIndex", typeof(StatusUDDISubscriptionServiceStatusSimpleIndex), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UDDISubscriptionStatusSimpleIndex", typeof(StatusUDDISubscriptionStatusSimpleIndex), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Version", typeof(StatusVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("VlanInterfaceStatus", typeof(StatusVlanInterfaceStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSMAgentSpoolers", typeof(StatusWSMAgentSpoolers), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSMAgentStatus", typeof(StatusWSMAgentStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSOperationMetrics", typeof(StatusWSOperationMetrics), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSOperationMetricsSimpleIndex", typeof(StatusWSOperationMetricsSimpleIndex), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSOperationsStatus", typeof(StatusWSOperationsStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSOperationsStatusSimpleIndex", typeof(StatusWSOperationsStatusSimpleIndex), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRRSubscriptionServiceStatus", typeof(StatusWSRRSubscriptionServiceStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRRSubscriptionStatus", typeof(StatusWSRRSubscriptionStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSWSDLStatus", typeof(StatusWSWSDLStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSWSDLStatusSimpleIndex", typeof(StatusWSWSDLStatusSimpleIndex), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebAppFwAccepted", typeof(StatusWebAppFwAccepted), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebAppFwRejected", typeof(StatusWebAppFwRejected), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebSphereJMSStatus", typeof(StatusWebSphereJMSStatus), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusARPStatus {
        
        private string iPAddressField;
        
        private string hardwareAddressField;
        
        private dmPortName interfaceField;
        
        private bool interfaceFieldSpecified;
        
        private dmInterfaceType interfaceTypeField;
        
        private bool interfaceTypeFieldSpecified;
        
        private string vlanNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string HardwareAddress {
            get {
                return this.hardwareAddressField;
            }
            set {
                this.hardwareAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmPortName Interface {
            get {
                return this.interfaceField;
            }
            set {
                this.interfaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterfaceSpecified {
            get {
                return this.interfaceFieldSpecified;
            }
            set {
                this.interfaceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmInterfaceType InterfaceType {
            get {
                return this.interfaceTypeField;
            }
            set {
                this.interfaceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterfaceTypeSpecified {
            get {
                return this.interfaceTypeFieldSpecified;
            }
            set {
                this.interfaceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VlanName {
            get {
                return this.vlanNameField;
            }
            set {
                this.vlanNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmPortName {
        
        /// <remarks/>
        eth0,
        
        /// <remarks/>
        eth1,
        
        /// <remarks/>
        eth2,
        
        /// <remarks/>
        eth3,
        
        /// <remarks/>
        mgt0,
        
        /// <remarks/>
        eth4,
        
        /// <remarks/>
        loopback,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusActiveUsers {
        
        private uint sessionField;
        
        private bool sessionFieldSpecified;
        
        private string nameField;
        
        private dmUserConnection connectionField;
        
        private bool connectionFieldSpecified;
        
        private string addressField;
        
        private uint loginField;
        
        private bool loginFieldSpecified;
        
        private string domainField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint session {
            get {
                return this.sessionField;
            }
            set {
                this.sessionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sessionSpecified {
            get {
                return this.sessionFieldSpecified;
            }
            set {
                this.sessionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmUserConnection connection {
            get {
                return this.connectionField;
            }
            set {
                this.connectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectionSpecified {
            get {
                return this.connectionFieldSpecified;
            }
            set {
                this.connectionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool loginSpecified {
            get {
                return this.loginFieldSpecified;
            }
            set {
                this.loginFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusCPUUsage {
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusConnectionsAccepted {
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusCryptoEngineStatus {
        
        private dmCryptoEngineType engineTypeField;
        
        private bool engineTypeFieldSpecified;
        
        private string engineStatusField;
        
        private dmCryptoEngineFIPSLevel fIPSLevelField;
        
        private bool fIPSLevelFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmCryptoEngineType EngineType {
            get {
                return this.engineTypeField;
            }
            set {
                this.engineTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EngineTypeSpecified {
            get {
                return this.engineTypeFieldSpecified;
            }
            set {
                this.engineTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string EngineStatus {
            get {
                return this.engineStatusField;
            }
            set {
                this.engineStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmCryptoEngineFIPSLevel FIPSLevel {
            get {
                return this.fIPSLevelField;
            }
            set {
                this.fIPSLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FIPSLevelSpecified {
            get {
                return this.fIPSLevelFieldSpecified;
            }
            set {
                this.fIPSLevelFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCryptoEngineType {
        
        /// <remarks/>
        standard,
        
        /// <remarks/>
        hardware1,
        
        /// <remarks/>
        hardware2,
        
        /// <remarks/>
        hsm1,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCryptoEngineFIPSLevel {
        
        /// <remarks/>
        notApplicable,
        
        /// <remarks/>
        uninitialized,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusDNSCacheHostStatus {
        
        private string hostnameField;
        
        private string iPAddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Hostname {
            get {
                return this.hostnameField;
            }
            set {
                this.hostnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusDNSNameServerStatus {
        
        private string iPAddressField;
        
        private ushort uDPPortField;
        
        private bool uDPPortFieldSpecified;
        
        private ushort tCPPortField;
        
        private bool tCPPortFieldSpecified;
        
        private uint maxRetriesField;
        
        private bool maxRetriesFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort UDPPort {
            get {
                return this.uDPPortField;
            }
            set {
                this.uDPPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UDPPortSpecified {
            get {
                return this.uDPPortFieldSpecified;
            }
            set {
                this.uDPPortFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort TCPPort {
            get {
                return this.tCPPortField;
            }
            set {
                this.tCPPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TCPPortSpecified {
            get {
                return this.tCPPortFieldSpecified;
            }
            set {
                this.tCPPortFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint MaxRetries {
            get {
                return this.maxRetriesField;
            }
            set {
                this.maxRetriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxRetriesSpecified {
            get {
                return this.maxRetriesFieldSpecified;
            }
            set {
                this.maxRetriesFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusDNSSearchDomainStatus {
        
        private string searchDomainField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SearchDomain {
            get {
                return this.searchDomainField;
            }
            set {
                this.searchDomainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusDNSStaticHostStatus {
        
        private string hostnameField;
        
        private string iPAddressField;
        
        private dmStaticHostEntryType typeField;
        
        private bool typeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Hostname {
            get {
                return this.hostnameField;
            }
            set {
                this.hostnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmStaticHostEntryType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmStaticHostEntryType {
        
        /// <remarks/>
        @static,
        
        /// <remarks/>
        alias,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusDateTimeStatus {
        
        private uint timeField;
        
        private bool timeFieldSpecified;
        
        private uint uptimeField;
        
        private bool uptimeFieldSpecified;
        
        private string timezoneField;
        
        private string tzspecField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeSpecified {
            get {
                return this.timeFieldSpecified;
            }
            set {
                this.timeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint uptime {
            get {
                return this.uptimeField;
            }
            set {
                this.uptimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uptimeSpecified {
            get {
                return this.uptimeFieldSpecified;
            }
            set {
                this.uptimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string timezone {
            get {
                return this.timezoneField;
            }
            set {
                this.timezoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tzspec {
            get {
                return this.tzspecField;
            }
            set {
                this.tzspecField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusDocumentCachingSummary {
        
        private dmReference xMLManagerField;
        
        private uint cacheCountField;
        
        private bool cacheCountFieldSpecified;
        
        private uint docCountField;
        
        private bool docCountFieldSpecified;
        
        private uint cacheSizeField;
        
        private bool cacheSizeFieldSpecified;
        
        private uint byteCountField;
        
        private bool byteCountFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint CacheCount {
            get {
                return this.cacheCountField;
            }
            set {
                this.cacheCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CacheCountSpecified {
            get {
                return this.cacheCountFieldSpecified;
            }
            set {
                this.cacheCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint DocCount {
            get {
                return this.docCountField;
            }
            set {
                this.docCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocCountSpecified {
            get {
                return this.docCountFieldSpecified;
            }
            set {
                this.docCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint CacheSize {
            get {
                return this.cacheSizeField;
            }
            set {
                this.cacheSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CacheSizeSpecified {
            get {
                return this.cacheSizeFieldSpecified;
            }
            set {
                this.cacheSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ByteCount {
            get {
                return this.byteCountField;
            }
            set {
                this.byteCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ByteCountSpecified {
            get {
                return this.byteCountFieldSpecified;
            }
            set {
                this.byteCountFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusDocumentStatus {
        
        private dmReference xMLManagerField;
        
        private string uRLField;
        
        private string expiryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Expiry {
            get {
                return this.expiryField;
            }
            set {
                this.expiryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusDocumentStatusSimpleIndex {
        
        private dmReference xMLManagerField;
        
        private uint idField;
        
        private bool idFieldSpecified;
        
        private string uRLField;
        
        private string expiryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Expiry {
            get {
                return this.expiryField;
            }
            set {
                this.expiryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusDomainCheckpointStatus {
        
        private string dateField;
        
        private string timeField;
        
        private string chkNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ChkName {
            get {
                return this.chkNameField;
            }
            set {
                this.chkNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusDomainStatus {
        
        private string domainField;
        
        private dmToggle saveNeededField;
        
        private bool saveNeededFieldSpecified;
        
        private dmToggle traceEnabledField;
        
        private bool traceEnabledFieldSpecified;
        
        private dmToggle debugEnabledField;
        
        private bool debugEnabledFieldSpecified;
        
        private dmToggle probeEnabledField;
        
        private bool probeEnabledFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle SaveNeeded {
            get {
                return this.saveNeededField;
            }
            set {
                this.saveNeededField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SaveNeededSpecified {
            get {
                return this.saveNeededFieldSpecified;
            }
            set {
                this.saveNeededFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle TraceEnabled {
            get {
                return this.traceEnabledField;
            }
            set {
                this.traceEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TraceEnabledSpecified {
            get {
                return this.traceEnabledFieldSpecified;
            }
            set {
                this.traceEnabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle DebugEnabled {
            get {
                return this.debugEnabledField;
            }
            set {
                this.debugEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DebugEnabledSpecified {
            get {
                return this.debugEnabledFieldSpecified;
            }
            set {
                this.debugEnabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle ProbeEnabled {
            get {
                return this.probeEnabledField;
            }
            set {
                this.probeEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbeEnabledSpecified {
            get {
                return this.probeEnabledFieldSpecified;
            }
            set {
                this.probeEnabledFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusDynamicQueueManager {
        
        private dmReference queueManagerField;
        
        private uint connectionsField;
        
        private bool connectionsFieldSpecified;
        
        private uint receivedMessagesField;
        
        private bool receivedMessagesFieldSpecified;
        
        private uint sentMessagesField;
        
        private bool sentMessagesFieldSpecified;
        
        private uint receiveFaultsField;
        
        private bool receiveFaultsFieldSpecified;
        
        private uint sendFaultsField;
        
        private bool sendFaultsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference QueueManager {
            get {
                return this.queueManagerField;
            }
            set {
                this.queueManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Connections {
            get {
                return this.connectionsField;
            }
            set {
                this.connectionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConnectionsSpecified {
            get {
                return this.connectionsFieldSpecified;
            }
            set {
                this.connectionsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ReceivedMessages {
            get {
                return this.receivedMessagesField;
            }
            set {
                this.receivedMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReceivedMessagesSpecified {
            get {
                return this.receivedMessagesFieldSpecified;
            }
            set {
                this.receivedMessagesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint SentMessages {
            get {
                return this.sentMessagesField;
            }
            set {
                this.sentMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SentMessagesSpecified {
            get {
                return this.sentMessagesFieldSpecified;
            }
            set {
                this.sentMessagesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ReceiveFaults {
            get {
                return this.receiveFaultsField;
            }
            set {
                this.receiveFaultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReceiveFaultsSpecified {
            get {
                return this.receiveFaultsFieldSpecified;
            }
            set {
                this.receiveFaultsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint SendFaults {
            get {
                return this.sendFaultsField;
            }
            set {
                this.sendFaultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SendFaultsSpecified {
            get {
                return this.sendFaultsFieldSpecified;
            }
            set {
                this.sendFaultsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusEnvironmentalFanSensors {
        
        private dmChassisFanId fanIDField;
        
        private bool fanIDFieldSpecified;
        
        private ushort fanSpeedField;
        
        private bool fanSpeedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmChassisFanId FanID {
            get {
                return this.fanIDField;
            }
            set {
                this.fanIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FanIDSpecified {
            get {
                return this.fanIDFieldSpecified;
            }
            set {
                this.fanIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort FanSpeed {
            get {
                return this.fanSpeedField;
            }
            set {
                this.fanSpeedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FanSpeedSpecified {
            get {
                return this.fanSpeedFieldSpecified;
            }
            set {
                this.fanSpeedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmChassisFanId {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cpu-1")]
        cpu1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cpu-2")]
        cpu2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chassis-1")]
        chassis1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chassis-2")]
        chassis2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chassis-3")]
        chassis3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chassis-4")]
        chassis4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chassis-5")]
        chassis5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chassis-6")]
        chassis6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chassis-7")]
        chassis7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chassis-8")]
        chassis8,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusEnvironmentalSensors {
        
        private ushort systemTempField;
        
        private bool systemTempFieldSpecified;
        
        private ushort cpu1TempField;
        
        private bool cpu1TempFieldSpecified;
        
        private ushort cpu2TempField;
        
        private bool cpu2TempFieldSpecified;
        
        private ushort cpu1rpmField;
        
        private bool cpu1rpmFieldSpecified;
        
        private ushort cpu2rpmField;
        
        private bool cpu2rpmFieldSpecified;
        
        private ushort chassis1rpmField;
        
        private bool chassis1rpmFieldSpecified;
        
        private ushort chassis2rpmField;
        
        private bool chassis2rpmFieldSpecified;
        
        private ushort chassis3rpmField;
        
        private bool chassis3rpmFieldSpecified;
        
        private dmIntrusionDetected caseopenField;
        
        private bool caseopenFieldSpecified;
        
        private string volt33Field;
        
        private string volt5Field;
        
        private string volt12Field;
        
        private dmPowerSupplyStatus powersupplyField;
        
        private bool powersupplyFieldSpecified;
        
        private string batteryinstalldateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort systemTemp {
            get {
                return this.systemTempField;
            }
            set {
                this.systemTempField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool systemTempSpecified {
            get {
                return this.systemTempFieldSpecified;
            }
            set {
                this.systemTempFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort cpu1Temp {
            get {
                return this.cpu1TempField;
            }
            set {
                this.cpu1TempField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cpu1TempSpecified {
            get {
                return this.cpu1TempFieldSpecified;
            }
            set {
                this.cpu1TempFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort cpu2Temp {
            get {
                return this.cpu2TempField;
            }
            set {
                this.cpu2TempField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cpu2TempSpecified {
            get {
                return this.cpu2TempFieldSpecified;
            }
            set {
                this.cpu2TempFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort cpu1rpm {
            get {
                return this.cpu1rpmField;
            }
            set {
                this.cpu1rpmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cpu1rpmSpecified {
            get {
                return this.cpu1rpmFieldSpecified;
            }
            set {
                this.cpu1rpmFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort cpu2rpm {
            get {
                return this.cpu2rpmField;
            }
            set {
                this.cpu2rpmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cpu2rpmSpecified {
            get {
                return this.cpu2rpmFieldSpecified;
            }
            set {
                this.cpu2rpmFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort chassis1rpm {
            get {
                return this.chassis1rpmField;
            }
            set {
                this.chassis1rpmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool chassis1rpmSpecified {
            get {
                return this.chassis1rpmFieldSpecified;
            }
            set {
                this.chassis1rpmFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort chassis2rpm {
            get {
                return this.chassis2rpmField;
            }
            set {
                this.chassis2rpmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool chassis2rpmSpecified {
            get {
                return this.chassis2rpmFieldSpecified;
            }
            set {
                this.chassis2rpmFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort chassis3rpm {
            get {
                return this.chassis3rpmField;
            }
            set {
                this.chassis3rpmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool chassis3rpmSpecified {
            get {
                return this.chassis3rpmFieldSpecified;
            }
            set {
                this.chassis3rpmFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmIntrusionDetected caseopen {
            get {
                return this.caseopenField;
            }
            set {
                this.caseopenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool caseopenSpecified {
            get {
                return this.caseopenFieldSpecified;
            }
            set {
                this.caseopenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string volt33 {
            get {
                return this.volt33Field;
            }
            set {
                this.volt33Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string volt5 {
            get {
                return this.volt5Field;
            }
            set {
                this.volt5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string volt12 {
            get {
                return this.volt12Field;
            }
            set {
                this.volt12Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmPowerSupplyStatus powersupply {
            get {
                return this.powersupplyField;
            }
            set {
                this.powersupplyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool powersupplySpecified {
            get {
                return this.powersupplyFieldSpecified;
            }
            set {
                this.powersupplyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string batteryinstalldate {
            get {
                return this.batteryinstalldateField;
            }
            set {
                this.batteryinstalldateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmIntrusionDetected {
        
        /// <remarks/>
        yes,
        
        /// <remarks/>
        no,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmPowerSupplyStatus {
        
        /// <remarks/>
        ok,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("power-1-failure")]
        power1failure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("power-2-failure")]
        power2failure,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusEthernetInterfaceStatus {
        
        private dmPortName nameField;
        
        private bool nameFieldSpecified;
        
        private string ipField;
        
        private string mACAddressField;
        
        private dmLinkStatus statusField;
        
        private bool statusFieldSpecified;
        
        private dmNegotiateStatus negotiateField;
        
        private bool negotiateFieldSpecified;
        
        private dmEthernetMode modeField;
        
        private bool modeFieldSpecified;
        
        private uint mTUField;
        
        private bool mTUFieldSpecified;
        
        private uint rxKbytesField;
        
        private bool rxKbytesFieldSpecified;
        
        private uint rxPacketsField;
        
        private bool rxPacketsFieldSpecified;
        
        private uint rxErrorsField;
        
        private bool rxErrorsFieldSpecified;
        
        private uint rxDropsField;
        
        private bool rxDropsFieldSpecified;
        
        private uint txKbytesField;
        
        private bool txKbytesFieldSpecified;
        
        private uint txPacketsField;
        
        private bool txPacketsFieldSpecified;
        
        private uint txErrorsField;
        
        private bool txErrorsFieldSpecified;
        
        private uint txDropsField;
        
        private bool txDropsFieldSpecified;
        
        private uint collisionsField;
        
        private bool collisionsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmPortName Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameSpecified {
            get {
                return this.nameFieldSpecified;
            }
            set {
                this.nameFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IP {
            get {
                return this.ipField;
            }
            set {
                this.ipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MACAddress {
            get {
                return this.mACAddressField;
            }
            set {
                this.mACAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmLinkStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmNegotiateStatus Negotiate {
            get {
                return this.negotiateField;
            }
            set {
                this.negotiateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NegotiateSpecified {
            get {
                return this.negotiateFieldSpecified;
            }
            set {
                this.negotiateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmEthernetMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModeSpecified {
            get {
                return this.modeFieldSpecified;
            }
            set {
                this.modeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint MTU {
            get {
                return this.mTUField;
            }
            set {
                this.mTUField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MTUSpecified {
            get {
                return this.mTUFieldSpecified;
            }
            set {
                this.mTUFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RxKbytes {
            get {
                return this.rxKbytesField;
            }
            set {
                this.rxKbytesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RxKbytesSpecified {
            get {
                return this.rxKbytesFieldSpecified;
            }
            set {
                this.rxKbytesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RxPackets {
            get {
                return this.rxPacketsField;
            }
            set {
                this.rxPacketsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RxPacketsSpecified {
            get {
                return this.rxPacketsFieldSpecified;
            }
            set {
                this.rxPacketsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RxErrors {
            get {
                return this.rxErrorsField;
            }
            set {
                this.rxErrorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RxErrorsSpecified {
            get {
                return this.rxErrorsFieldSpecified;
            }
            set {
                this.rxErrorsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RxDrops {
            get {
                return this.rxDropsField;
            }
            set {
                this.rxDropsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RxDropsSpecified {
            get {
                return this.rxDropsFieldSpecified;
            }
            set {
                this.rxDropsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TxKbytes {
            get {
                return this.txKbytesField;
            }
            set {
                this.txKbytesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TxKbytesSpecified {
            get {
                return this.txKbytesFieldSpecified;
            }
            set {
                this.txKbytesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TxPackets {
            get {
                return this.txPacketsField;
            }
            set {
                this.txPacketsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TxPacketsSpecified {
            get {
                return this.txPacketsFieldSpecified;
            }
            set {
                this.txPacketsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TxErrors {
            get {
                return this.txErrorsField;
            }
            set {
                this.txErrorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TxErrorsSpecified {
            get {
                return this.txErrorsFieldSpecified;
            }
            set {
                this.txErrorsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TxDrops {
            get {
                return this.txDropsField;
            }
            set {
                this.txDropsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TxDropsSpecified {
            get {
                return this.txDropsFieldSpecified;
            }
            set {
                this.txDropsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Collisions {
            get {
                return this.collisionsField;
            }
            set {
                this.collisionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CollisionsSpecified {
            get {
                return this.collisionsFieldSpecified;
            }
            set {
                this.collisionsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmLinkStatus {
        
        /// <remarks/>
        ok,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("no-link")]
        nolink,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmNegotiateStatus {
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        auto,
        
        /// <remarks/>
        failed,
        
        /// <remarks/>
        restarted,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmEthernetMode {
        
        /// <remarks/>
        Auto,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000baseTx-FD")]
        Item1000baseTxFD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("100baseTx-FD")]
        Item100baseTxFD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("100baseTx-HD")]
        Item100baseTxHD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10baseT-FD")]
        Item10baseTFD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10baseT-HD")]
        Item10baseTHD,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusFilePollerStatus {
        
        private dmFilePollerType typeField;
        
        private bool typeFieldSpecified;
        
        private string nameField;
        
        private string targetField;
        
        private uint pollCountField;
        
        private bool pollCountFieldSpecified;
        
        private uint transactionsPerPollField;
        
        private bool transactionsPerPollFieldSpecified;
        
        private uint seizedFilesField;
        
        private bool seizedFilesFieldSpecified;
        
        private uint pollsWithOutTransactionsField;
        
        private bool pollsWithOutTransactionsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmFilePollerType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint PollCount {
            get {
                return this.pollCountField;
            }
            set {
                this.pollCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PollCountSpecified {
            get {
                return this.pollCountFieldSpecified;
            }
            set {
                this.pollCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TransactionsPerPoll {
            get {
                return this.transactionsPerPollField;
            }
            set {
                this.transactionsPerPollField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransactionsPerPollSpecified {
            get {
                return this.transactionsPerPollFieldSpecified;
            }
            set {
                this.transactionsPerPollFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint SeizedFiles {
            get {
                return this.seizedFilesField;
            }
            set {
                this.seizedFilesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeizedFilesSpecified {
            get {
                return this.seizedFilesFieldSpecified;
            }
            set {
                this.seizedFilesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint PollsWithOutTransactions {
            get {
                return this.pollsWithOutTransactionsField;
            }
            set {
                this.pollsWithOutTransactionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PollsWithOutTransactionsSpecified {
            get {
                return this.pollsWithOutTransactionsFieldSpecified;
            }
            set {
                this.pollsWithOutTransactionsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmFilePollerType {
        
        /// <remarks/>
        nfsFilePoller,
        
        /// <remarks/>
        ftpFilePoller,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusFilesystemStatus {
        
        private uint freeEncryptedField;
        
        private bool freeEncryptedFieldSpecified;
        
        private uint totalEncryptedField;
        
        private bool totalEncryptedFieldSpecified;
        
        private uint freeTemporaryField;
        
        private bool freeTemporaryFieldSpecified;
        
        private uint totalTemporaryField;
        
        private bool totalTemporaryFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint FreeEncrypted {
            get {
                return this.freeEncryptedField;
            }
            set {
                this.freeEncryptedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreeEncryptedSpecified {
            get {
                return this.freeEncryptedFieldSpecified;
            }
            set {
                this.freeEncryptedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TotalEncrypted {
            get {
                return this.totalEncryptedField;
            }
            set {
                this.totalEncryptedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalEncryptedSpecified {
            get {
                return this.totalEncryptedFieldSpecified;
            }
            set {
                this.totalEncryptedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint FreeTemporary {
            get {
                return this.freeTemporaryField;
            }
            set {
                this.freeTemporaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreeTemporarySpecified {
            get {
                return this.freeTemporaryFieldSpecified;
            }
            set {
                this.freeTemporaryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TotalTemporary {
            get {
                return this.totalTemporaryField;
            }
            set {
                this.totalTemporaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalTemporarySpecified {
            get {
                return this.totalTemporaryFieldSpecified;
            }
            set {
                this.totalTemporaryFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusFirmwareStatus {
        
        private dmFirmwareType typeField;
        
        private bool typeFieldSpecified;
        
        private string versionField;
        
        private string buildField;
        
        private string buildDateField;
        
        private string installDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmFirmwareType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Build {
            get {
                return this.buildField;
            }
            set {
                this.buildField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string BuildDate {
            get {
                return this.buildDateField;
            }
            set {
                this.buildDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InstallDate {
            get {
                return this.installDateField;
            }
            set {
                this.installDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmFirmwareType {
        
        /// <remarks/>
        primary,
        
        /// <remarks/>
        secondary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusFirmwareVersion {
        
        private string serialField;
        
        private string versionField;
        
        private string buildField;
        
        private string buildDateField;
        
        private string watchdogBuildField;
        
        private string installedDPOSField;
        
        private string runningDPOSField;
        
        private string xMLAcceleratorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Serial {
            get {
                return this.serialField;
            }
            set {
                this.serialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Build {
            get {
                return this.buildField;
            }
            set {
                this.buildField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string BuildDate {
            get {
                return this.buildDateField;
            }
            set {
                this.buildDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string WatchdogBuild {
            get {
                return this.watchdogBuildField;
            }
            set {
                this.watchdogBuildField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InstalledDPOS {
            get {
                return this.installedDPOSField;
            }
            set {
                this.installedDPOSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RunningDPOS {
            get {
                return this.runningDPOSField;
            }
            set {
                this.runningDPOSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string XMLAccelerator {
            get {
                return this.xMLAcceleratorField;
            }
            set {
                this.xMLAcceleratorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusHSMKeyStatus {
        
        private string keyHandleField;
        
        private dmCryptoHSMKeyType keyTypeField;
        
        private bool keyTypeFieldSpecified;
        
        private string keyLabelField;
        
        private uint bitLengthField;
        
        private bool bitLengthFieldSpecified;
        
        private dmToggle exportableField;
        
        private bool exportableFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string KeyHandle {
            get {
                return this.keyHandleField;
            }
            set {
                this.keyHandleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmCryptoHSMKeyType KeyType {
            get {
                return this.keyTypeField;
            }
            set {
                this.keyTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeyTypeSpecified {
            get {
                return this.keyTypeFieldSpecified;
            }
            set {
                this.keyTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string KeyLabel {
            get {
                return this.keyLabelField;
            }
            set {
                this.keyLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint BitLength {
            get {
                return this.bitLengthField;
            }
            set {
                this.bitLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BitLengthSpecified {
            get {
                return this.bitLengthFieldSpecified;
            }
            set {
                this.bitLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Exportable {
            get {
                return this.exportableField;
            }
            set {
                this.exportableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExportableSpecified {
            get {
                return this.exportableFieldSpecified;
            }
            set {
                this.exportableFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusHTTPConnections {
        
        private dmReference xMLManagerField;
        
        private uint reqTenSecField;
        
        private bool reqTenSecFieldSpecified;
        
        private uint reqOneMinField;
        
        private bool reqOneMinFieldSpecified;
        
        private uint reqTenMinField;
        
        private bool reqTenMinFieldSpecified;
        
        private uint reqOneHrField;
        
        private bool reqOneHrFieldSpecified;
        
        private uint reqOneDayField;
        
        private bool reqOneDayFieldSpecified;
        
        private uint reuseTenSecField;
        
        private bool reuseTenSecFieldSpecified;
        
        private uint reuseOneMinField;
        
        private bool reuseOneMinFieldSpecified;
        
        private uint reuseTenMinField;
        
        private bool reuseTenMinFieldSpecified;
        
        private uint reuseOneHrField;
        
        private bool reuseOneHrFieldSpecified;
        
        private uint reuseOneDayField;
        
        private bool reuseOneDayFieldSpecified;
        
        private uint createTenSecField;
        
        private bool createTenSecFieldSpecified;
        
        private uint createOneMinField;
        
        private bool createOneMinFieldSpecified;
        
        private uint createTenMinField;
        
        private bool createTenMinFieldSpecified;
        
        private uint createOneHrField;
        
        private bool createOneHrFieldSpecified;
        
        private uint createOneDayField;
        
        private bool createOneDayFieldSpecified;
        
        private uint returnTenSecField;
        
        private bool returnTenSecFieldSpecified;
        
        private uint returnOneMinField;
        
        private bool returnOneMinFieldSpecified;
        
        private uint returnTenMinField;
        
        private bool returnTenMinFieldSpecified;
        
        private uint returnOneHrField;
        
        private bool returnOneHrFieldSpecified;
        
        private uint returnOneDayField;
        
        private bool returnOneDayFieldSpecified;
        
        private uint offerTenSecField;
        
        private bool offerTenSecFieldSpecified;
        
        private uint offerOneMinField;
        
        private bool offerOneMinFieldSpecified;
        
        private uint offerTenMinField;
        
        private bool offerTenMinFieldSpecified;
        
        private uint offerOneHrField;
        
        private bool offerOneHrFieldSpecified;
        
        private uint offerOneDayField;
        
        private bool offerOneDayFieldSpecified;
        
        private uint destroyTenSecField;
        
        private bool destroyTenSecFieldSpecified;
        
        private uint destroyOneMinField;
        
        private bool destroyOneMinFieldSpecified;
        
        private uint destroyTenMinField;
        
        private bool destroyTenMinFieldSpecified;
        
        private uint destroyOneHrField;
        
        private bool destroyOneHrFieldSpecified;
        
        private uint destroyOneDayField;
        
        private bool destroyOneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint reqTenSec {
            get {
                return this.reqTenSecField;
            }
            set {
                this.reqTenSecField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reqTenSecSpecified {
            get {
                return this.reqTenSecFieldSpecified;
            }
            set {
                this.reqTenSecFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint reqOneMin {
            get {
                return this.reqOneMinField;
            }
            set {
                this.reqOneMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reqOneMinSpecified {
            get {
                return this.reqOneMinFieldSpecified;
            }
            set {
                this.reqOneMinFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint reqTenMin {
            get {
                return this.reqTenMinField;
            }
            set {
                this.reqTenMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reqTenMinSpecified {
            get {
                return this.reqTenMinFieldSpecified;
            }
            set {
                this.reqTenMinFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint reqOneHr {
            get {
                return this.reqOneHrField;
            }
            set {
                this.reqOneHrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reqOneHrSpecified {
            get {
                return this.reqOneHrFieldSpecified;
            }
            set {
                this.reqOneHrFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint reqOneDay {
            get {
                return this.reqOneDayField;
            }
            set {
                this.reqOneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reqOneDaySpecified {
            get {
                return this.reqOneDayFieldSpecified;
            }
            set {
                this.reqOneDayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint reuseTenSec {
            get {
                return this.reuseTenSecField;
            }
            set {
                this.reuseTenSecField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reuseTenSecSpecified {
            get {
                return this.reuseTenSecFieldSpecified;
            }
            set {
                this.reuseTenSecFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint reuseOneMin {
            get {
                return this.reuseOneMinField;
            }
            set {
                this.reuseOneMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reuseOneMinSpecified {
            get {
                return this.reuseOneMinFieldSpecified;
            }
            set {
                this.reuseOneMinFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint reuseTenMin {
            get {
                return this.reuseTenMinField;
            }
            set {
                this.reuseTenMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reuseTenMinSpecified {
            get {
                return this.reuseTenMinFieldSpecified;
            }
            set {
                this.reuseTenMinFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint reuseOneHr {
            get {
                return this.reuseOneHrField;
            }
            set {
                this.reuseOneHrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reuseOneHrSpecified {
            get {
                return this.reuseOneHrFieldSpecified;
            }
            set {
                this.reuseOneHrFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint reuseOneDay {
            get {
                return this.reuseOneDayField;
            }
            set {
                this.reuseOneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reuseOneDaySpecified {
            get {
                return this.reuseOneDayFieldSpecified;
            }
            set {
                this.reuseOneDayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint createTenSec {
            get {
                return this.createTenSecField;
            }
            set {
                this.createTenSecField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createTenSecSpecified {
            get {
                return this.createTenSecFieldSpecified;
            }
            set {
                this.createTenSecFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint createOneMin {
            get {
                return this.createOneMinField;
            }
            set {
                this.createOneMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createOneMinSpecified {
            get {
                return this.createOneMinFieldSpecified;
            }
            set {
                this.createOneMinFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint createTenMin {
            get {
                return this.createTenMinField;
            }
            set {
                this.createTenMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createTenMinSpecified {
            get {
                return this.createTenMinFieldSpecified;
            }
            set {
                this.createTenMinFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint createOneHr {
            get {
                return this.createOneHrField;
            }
            set {
                this.createOneHrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createOneHrSpecified {
            get {
                return this.createOneHrFieldSpecified;
            }
            set {
                this.createOneHrFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint createOneDay {
            get {
                return this.createOneDayField;
            }
            set {
                this.createOneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createOneDaySpecified {
            get {
                return this.createOneDayFieldSpecified;
            }
            set {
                this.createOneDayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint returnTenSec {
            get {
                return this.returnTenSecField;
            }
            set {
                this.returnTenSecField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnTenSecSpecified {
            get {
                return this.returnTenSecFieldSpecified;
            }
            set {
                this.returnTenSecFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint returnOneMin {
            get {
                return this.returnOneMinField;
            }
            set {
                this.returnOneMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnOneMinSpecified {
            get {
                return this.returnOneMinFieldSpecified;
            }
            set {
                this.returnOneMinFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint returnTenMin {
            get {
                return this.returnTenMinField;
            }
            set {
                this.returnTenMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnTenMinSpecified {
            get {
                return this.returnTenMinFieldSpecified;
            }
            set {
                this.returnTenMinFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint returnOneHr {
            get {
                return this.returnOneHrField;
            }
            set {
                this.returnOneHrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnOneHrSpecified {
            get {
                return this.returnOneHrFieldSpecified;
            }
            set {
                this.returnOneHrFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint returnOneDay {
            get {
                return this.returnOneDayField;
            }
            set {
                this.returnOneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnOneDaySpecified {
            get {
                return this.returnOneDayFieldSpecified;
            }
            set {
                this.returnOneDayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint offerTenSec {
            get {
                return this.offerTenSecField;
            }
            set {
                this.offerTenSecField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool offerTenSecSpecified {
            get {
                return this.offerTenSecFieldSpecified;
            }
            set {
                this.offerTenSecFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint offerOneMin {
            get {
                return this.offerOneMinField;
            }
            set {
                this.offerOneMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool offerOneMinSpecified {
            get {
                return this.offerOneMinFieldSpecified;
            }
            set {
                this.offerOneMinFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint offerTenMin {
            get {
                return this.offerTenMinField;
            }
            set {
                this.offerTenMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool offerTenMinSpecified {
            get {
                return this.offerTenMinFieldSpecified;
            }
            set {
                this.offerTenMinFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint offerOneHr {
            get {
                return this.offerOneHrField;
            }
            set {
                this.offerOneHrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool offerOneHrSpecified {
            get {
                return this.offerOneHrFieldSpecified;
            }
            set {
                this.offerOneHrFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint offerOneDay {
            get {
                return this.offerOneDayField;
            }
            set {
                this.offerOneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool offerOneDaySpecified {
            get {
                return this.offerOneDayFieldSpecified;
            }
            set {
                this.offerOneDayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint destroyTenSec {
            get {
                return this.destroyTenSecField;
            }
            set {
                this.destroyTenSecField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool destroyTenSecSpecified {
            get {
                return this.destroyTenSecFieldSpecified;
            }
            set {
                this.destroyTenSecFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint destroyOneMin {
            get {
                return this.destroyOneMinField;
            }
            set {
                this.destroyOneMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool destroyOneMinSpecified {
            get {
                return this.destroyOneMinFieldSpecified;
            }
            set {
                this.destroyOneMinFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint destroyTenMin {
            get {
                return this.destroyTenMinField;
            }
            set {
                this.destroyTenMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool destroyTenMinSpecified {
            get {
                return this.destroyTenMinFieldSpecified;
            }
            set {
                this.destroyTenMinFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint destroyOneHr {
            get {
                return this.destroyOneHrField;
            }
            set {
                this.destroyOneHrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool destroyOneHrSpecified {
            get {
                return this.destroyOneHrFieldSpecified;
            }
            set {
                this.destroyOneHrFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint destroyOneDay {
            get {
                return this.destroyOneDayField;
            }
            set {
                this.destroyOneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool destroyOneDaySpecified {
            get {
                return this.destroyOneDayFieldSpecified;
            }
            set {
                this.destroyOneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusHTTPConnectionsCreated {
        
        private uint dummyField;
        
        private bool dummyFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Dummy {
            get {
                return this.dummyField;
            }
            set {
                this.dummyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DummySpecified {
            get {
                return this.dummyFieldSpecified;
            }
            set {
                this.dummyFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusHTTPConnectionsDestroyed {
        
        private uint dummyField;
        
        private bool dummyFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Dummy {
            get {
                return this.dummyField;
            }
            set {
                this.dummyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DummySpecified {
            get {
                return this.dummyFieldSpecified;
            }
            set {
                this.dummyFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusHTTPConnectionsOffered {
        
        private uint dummyField;
        
        private bool dummyFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Dummy {
            get {
                return this.dummyField;
            }
            set {
                this.dummyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DummySpecified {
            get {
                return this.dummyFieldSpecified;
            }
            set {
                this.dummyFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusHTTPConnectionsRequested {
        
        private uint dummyField;
        
        private bool dummyFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Dummy {
            get {
                return this.dummyField;
            }
            set {
                this.dummyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DummySpecified {
            get {
                return this.dummyFieldSpecified;
            }
            set {
                this.dummyFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusHTTPConnectionsReturned {
        
        private uint dummyField;
        
        private bool dummyFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Dummy {
            get {
                return this.dummyField;
            }
            set {
                this.dummyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DummySpecified {
            get {
                return this.dummyFieldSpecified;
            }
            set {
                this.dummyFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusHTTPConnectionsReused {
        
        private uint dummyField;
        
        private bool dummyFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Dummy {
            get {
                return this.dummyField;
            }
            set {
                this.dummyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DummySpecified {
            get {
                return this.dummyFieldSpecified;
            }
            set {
                this.dummyFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusHTTPMeanTransactionTime {
        
        private string proxyField;
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string proxy {
            get {
                return this.proxyField;
            }
            set {
                this.proxyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusHTTPTransactions {
        
        private string proxyField;
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string proxy {
            get {
                return this.proxyField;
            }
            set {
                this.proxyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusIMSConnectstatus {
        
        private dmReference iMSConnectField;
        
        private uint requestsField;
        
        private bool requestsFieldSpecified;
        
        private uint responsesField;
        
        private bool responsesFieldSpecified;
        
        private uint requestErrorsField;
        
        private bool requestErrorsFieldSpecified;
        
        private uint responseErrorsField;
        
        private bool responseErrorsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference IMSConnect {
            get {
                return this.iMSConnectField;
            }
            set {
                this.iMSConnectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Requests {
            get {
                return this.requestsField;
            }
            set {
                this.requestsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequestsSpecified {
            get {
                return this.requestsFieldSpecified;
            }
            set {
                this.requestsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Responses {
            get {
                return this.responsesField;
            }
            set {
                this.responsesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResponsesSpecified {
            get {
                return this.responsesFieldSpecified;
            }
            set {
                this.responsesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RequestErrors {
            get {
                return this.requestErrorsField;
            }
            set {
                this.requestErrorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequestErrorsSpecified {
            get {
                return this.requestErrorsFieldSpecified;
            }
            set {
                this.requestErrorsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ResponseErrors {
            get {
                return this.responseErrorsField;
            }
            set {
                this.responseErrorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResponseErrorsSpecified {
            get {
                return this.responseErrorsFieldSpecified;
            }
            set {
                this.responseErrorsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusLibraryVersion {
        
        private string libraryField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Library {
            get {
                return this.libraryField;
            }
            set {
                this.libraryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusLicenseStatus {
        
        private dmLicensedFeature featureField;
        
        private bool featureFieldSpecified;
        
        private dmLicenseStatus enabledField;
        
        private bool enabledFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmLicensedFeature Feature {
            get {
                return this.featureField;
            }
            set {
                this.featureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FeatureSpecified {
            get {
                return this.featureFieldSpecified;
            }
            set {
                this.featureFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmLicenseStatus Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmLicensedFeature {
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        MQ,
        
        /// <remarks/>
        TAM,
        
        /// <remarks/>
        DataGlue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("JAXP-API")]
        JAXPAPI,
        
        /// <remarks/>
        HSM,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PKCS7-SMIME")]
        PKCS7SMIME,
        
        /// <remarks/>
        Reserved,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SQL-ODBC")]
        SQLODBC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Tibco-EMS")]
        TibcoEMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WebSphere-JMS")]
        WebSphereJMS,
        
        /// <remarks/>
        XG4,
        
        /// <remarks/>
        MAX,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmLicenseStatus {
        
        /// <remarks/>
        Yes,
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusLoadBalancerStatus {
        
        private dmReference groupField;
        
        private string serverField;
        
        private uint portField;
        
        private bool portFieldSpecified;
        
        private dmLoadBalancerMemberHealth healthField;
        
        private bool healthFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PortSpecified {
            get {
                return this.portFieldSpecified;
            }
            set {
                this.portFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmLoadBalancerMemberHealth Health {
            get {
                return this.healthField;
            }
            set {
                this.healthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HealthSpecified {
            get {
                return this.healthFieldSpecified;
            }
            set {
                this.healthFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmLoadBalancerMemberHealth {
        
        /// <remarks/>
        up,
        
        /// <remarks/>
        softdown,
        
        /// <remarks/>
        down,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusLogTargetStatus {
        
        private dmReference logTargetField;
        
        private dmLogStatus statusField;
        
        private bool statusFieldSpecified;
        
        private uint eventsProcessedField;
        
        private bool eventsProcessedFieldSpecified;
        
        private uint eventsDroppedField;
        
        private bool eventsDroppedFieldSpecified;
        
        private uint eventsPendingField;
        
        private bool eventsPendingFieldSpecified;
        
        private string errorInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference LogTarget {
            get {
                return this.logTargetField;
            }
            set {
                this.logTargetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmLogStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint EventsProcessed {
            get {
                return this.eventsProcessedField;
            }
            set {
                this.eventsProcessedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EventsProcessedSpecified {
            get {
                return this.eventsProcessedFieldSpecified;
            }
            set {
                this.eventsProcessedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint EventsDropped {
            get {
                return this.eventsDroppedField;
            }
            set {
                this.eventsDroppedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EventsDroppedSpecified {
            get {
                return this.eventsDroppedFieldSpecified;
            }
            set {
                this.eventsDroppedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint EventsPending {
            get {
                return this.eventsPendingField;
            }
            set {
                this.eventsPendingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EventsPendingSpecified {
            get {
                return this.eventsPendingFieldSpecified;
            }
            set {
                this.eventsPendingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorInfo {
            get {
                return this.errorInfoField;
            }
            set {
                this.errorInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmLogStatus {
        
        /// <remarks/>
        active,
        
        /// <remarks/>
        warning,
        
        /// <remarks/>
        failure,
        
        /// <remarks/>
        suspended,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusMQQMstatus {
        
        private dmReference queueManagerField;
        
        private uint receivedMessagesField;
        
        private bool receivedMessagesFieldSpecified;
        
        private uint sentMessagesField;
        
        private bool sentMessagesFieldSpecified;
        
        private uint receiveFaultsField;
        
        private bool receiveFaultsFieldSpecified;
        
        private uint sendFaultsField;
        
        private bool sendFaultsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference QueueManager {
            get {
                return this.queueManagerField;
            }
            set {
                this.queueManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ReceivedMessages {
            get {
                return this.receivedMessagesField;
            }
            set {
                this.receivedMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReceivedMessagesSpecified {
            get {
                return this.receivedMessagesFieldSpecified;
            }
            set {
                this.receivedMessagesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint SentMessages {
            get {
                return this.sentMessagesField;
            }
            set {
                this.sentMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SentMessagesSpecified {
            get {
                return this.sentMessagesFieldSpecified;
            }
            set {
                this.sentMessagesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ReceiveFaults {
            get {
                return this.receiveFaultsField;
            }
            set {
                this.receiveFaultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReceiveFaultsSpecified {
            get {
                return this.receiveFaultsFieldSpecified;
            }
            set {
                this.receiveFaultsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint SendFaults {
            get {
                return this.sendFaultsField;
            }
            set {
                this.sendFaultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SendFaultsSpecified {
            get {
                return this.sendFaultsFieldSpecified;
            }
            set {
                this.sendFaultsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusMQStatus {
        
        private dmMQServiceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        private string serviceNameField;
        
        private uint receivedMessagesField;
        
        private bool receivedMessagesFieldSpecified;
        
        private uint sentMessagesField;
        
        private bool sentMessagesFieldSpecified;
        
        private uint receiveFaultsField;
        
        private bool receiveFaultsFieldSpecified;
        
        private uint sendFaultsField;
        
        private bool sendFaultsFieldSpecified;
        
        private uint requestLatencyField;
        
        private bool requestLatencyFieldSpecified;
        
        private uint responseLatencyField;
        
        private bool responseLatencyFieldSpecified;
        
        private uint roundTripLatencyField;
        
        private bool roundTripLatencyFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmMQServiceType ServiceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServiceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ServiceName {
            get {
                return this.serviceNameField;
            }
            set {
                this.serviceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ReceivedMessages {
            get {
                return this.receivedMessagesField;
            }
            set {
                this.receivedMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReceivedMessagesSpecified {
            get {
                return this.receivedMessagesFieldSpecified;
            }
            set {
                this.receivedMessagesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint SentMessages {
            get {
                return this.sentMessagesField;
            }
            set {
                this.sentMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SentMessagesSpecified {
            get {
                return this.sentMessagesFieldSpecified;
            }
            set {
                this.sentMessagesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ReceiveFaults {
            get {
                return this.receiveFaultsField;
            }
            set {
                this.receiveFaultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReceiveFaultsSpecified {
            get {
                return this.receiveFaultsFieldSpecified;
            }
            set {
                this.receiveFaultsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint SendFaults {
            get {
                return this.sendFaultsField;
            }
            set {
                this.sendFaultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SendFaultsSpecified {
            get {
                return this.sendFaultsFieldSpecified;
            }
            set {
                this.sendFaultsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RequestLatency {
            get {
                return this.requestLatencyField;
            }
            set {
                this.requestLatencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequestLatencySpecified {
            get {
                return this.requestLatencyFieldSpecified;
            }
            set {
                this.requestLatencyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ResponseLatency {
            get {
                return this.responseLatencyField;
            }
            set {
                this.responseLatencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResponseLatencySpecified {
            get {
                return this.responseLatencyFieldSpecified;
            }
            set {
                this.responseLatencyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RoundTripLatency {
            get {
                return this.roundTripLatencyField;
            }
            set {
                this.roundTripLatencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RoundTripLatencySpecified {
            get {
                return this.roundTripLatencyFieldSpecified;
            }
            set {
                this.roundTripLatencyFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmMQServiceType {
        
        /// <remarks/>
        MQgateway,
        
        /// <remarks/>
        MQhost,
        
        /// <remarks/>
        MQproxy,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusMemoryStatus {
        
        private uint usageField;
        
        private bool usageFieldSpecified;
        
        private uint totalMemoryField;
        
        private bool totalMemoryFieldSpecified;
        
        private uint usedMemoryField;
        
        private bool usedMemoryFieldSpecified;
        
        private uint freeMemoryField;
        
        private bool freeMemoryFieldSpecified;
        
        private uint reqMemoryField;
        
        private bool reqMemoryFieldSpecified;
        
        private uint xG4UsageField;
        
        private bool xG4UsageFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Usage {
            get {
                return this.usageField;
            }
            set {
                this.usageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsageSpecified {
            get {
                return this.usageFieldSpecified;
            }
            set {
                this.usageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TotalMemory {
            get {
                return this.totalMemoryField;
            }
            set {
                this.totalMemoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalMemorySpecified {
            get {
                return this.totalMemoryFieldSpecified;
            }
            set {
                this.totalMemoryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint UsedMemory {
            get {
                return this.usedMemoryField;
            }
            set {
                this.usedMemoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsedMemorySpecified {
            get {
                return this.usedMemoryFieldSpecified;
            }
            set {
                this.usedMemoryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint FreeMemory {
            get {
                return this.freeMemoryField;
            }
            set {
                this.freeMemoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreeMemorySpecified {
            get {
                return this.freeMemoryFieldSpecified;
            }
            set {
                this.freeMemoryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ReqMemory {
            get {
                return this.reqMemoryField;
            }
            set {
                this.reqMemoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReqMemorySpecified {
            get {
                return this.reqMemoryFieldSpecified;
            }
            set {
                this.reqMemoryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint XG4Usage {
            get {
                return this.xG4UsageField;
            }
            set {
                this.xG4UsageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XG4UsageSpecified {
            get {
                return this.xG4UsageFieldSpecified;
            }
            set {
                this.xG4UsageFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusMessageCountFilters {
        
        private dmReference monitorField;
        
        private string sourceField;
        
        private string filterField;
        
        private uint totalField;
        
        private bool totalFieldSpecified;
        
        private uint hitsField;
        
        private bool hitsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Monitor {
            get {
                return this.monitorField;
            }
            set {
                this.monitorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalSpecified {
            get {
                return this.totalFieldSpecified;
            }
            set {
                this.totalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Hits {
            get {
                return this.hitsField;
            }
            set {
                this.hitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HitsSpecified {
            get {
                return this.hitsFieldSpecified;
            }
            set {
                this.hitsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusMessageCounts {
        
        private dmReference monitorField;
        
        private dmReference typeField;
        
        private dmCountMonitorType measureField;
        
        private bool measureFieldSpecified;
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        private uint totalField;
        
        private bool totalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Monitor {
            get {
                return this.monitorField;
            }
            set {
                this.monitorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmCountMonitorType Measure {
            get {
                return this.measureField;
            }
            set {
                this.measureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MeasureSpecified {
            get {
                return this.measureFieldSpecified;
            }
            set {
                this.measureFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalSpecified {
            get {
                return this.totalFieldSpecified;
            }
            set {
                this.totalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCountMonitorType {
        
        /// <remarks/>
        requests,
        
        /// <remarks/>
        responses,
        
        /// <remarks/>
        xpath,
        
        /// <remarks/>
        errors,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusMessageDurationFilters {
        
        private dmReference monitorField;
        
        private string filterField;
        
        private uint totalField;
        
        private bool totalFieldSpecified;
        
        private uint hitsField;
        
        private bool hitsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Monitor {
            get {
                return this.monitorField;
            }
            set {
                this.monitorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalSpecified {
            get {
                return this.totalFieldSpecified;
            }
            set {
                this.totalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Hits {
            get {
                return this.hitsField;
            }
            set {
                this.hitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HitsSpecified {
            get {
                return this.hitsFieldSpecified;
            }
            set {
                this.hitsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusMessageDurations {
        
        private dmReference monitorField;
        
        private dmReference typeField;
        
        private dmDurationMonitorType measureField;
        
        private bool measureFieldSpecified;
        
        private uint countField;
        
        private bool countFieldSpecified;
        
        private uint minimumField;
        
        private bool minimumFieldSpecified;
        
        private uint maximumField;
        
        private bool maximumFieldSpecified;
        
        private uint averageField;
        
        private bool averageFieldSpecified;
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Monitor {
            get {
                return this.monitorField;
            }
            set {
                this.monitorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmDurationMonitorType Measure {
            get {
                return this.measureField;
            }
            set {
                this.measureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MeasureSpecified {
            get {
                return this.measureFieldSpecified;
            }
            set {
                this.measureFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CountSpecified {
            get {
                return this.countFieldSpecified;
            }
            set {
                this.countFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Minimum {
            get {
                return this.minimumField;
            }
            set {
                this.minimumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumSpecified {
            get {
                return this.minimumFieldSpecified;
            }
            set {
                this.minimumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Maximum {
            get {
                return this.maximumField;
            }
            set {
                this.maximumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumSpecified {
            get {
                return this.maximumFieldSpecified;
            }
            set {
                this.maximumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Average {
            get {
                return this.averageField;
            }
            set {
                this.averageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AverageSpecified {
            get {
                return this.averageFieldSpecified;
            }
            set {
                this.averageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmDurationMonitorType {
        
        /// <remarks/>
        messages,
        
        /// <remarks/>
        requests,
        
        /// <remarks/>
        server,
        
        /// <remarks/>
        responses,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusMessageSources {
        
        private dmReference monitorField;
        
        private string sourceField;
        
        private uint totalField;
        
        private bool totalFieldSpecified;
        
        private uint lastField;
        
        private bool lastFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Monitor {
            get {
                return this.monitorField;
            }
            set {
                this.monitorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalSpecified {
            get {
                return this.totalFieldSpecified;
            }
            set {
                this.totalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Last {
            get {
                return this.lastField;
            }
            set {
                this.lastField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastSpecified {
            get {
                return this.lastFieldSpecified;
            }
            set {
                this.lastFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusNFSMountStatus {
        
        private dmNFSMountType typeField;
        
        private bool typeFieldSpecified;
        
        private string nameField;
        
        private string remoteField;
        
        private dmNFSMountState stateField;
        
        private bool stateFieldSpecified;
        
        private uint versionField;
        
        private bool versionFieldSpecified;
        
        private string addressField;
        
        private dmNFSTransportType transportField;
        
        private bool transportFieldSpecified;
        
        private uint portField;
        
        private bool portFieldSpecified;
        
        private uint filesReadField;
        
        private bool filesReadFieldSpecified;
        
        private uint filesWrittenField;
        
        private bool filesWrittenFieldSpecified;
        
        private uint filesOpenField;
        
        private bool filesOpenFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmNFSMountType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Remote {
            get {
                return this.remoteField;
            }
            set {
                this.remoteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmNFSMountState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StateSpecified {
            get {
                return this.stateFieldSpecified;
            }
            set {
                this.stateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionSpecified {
            get {
                return this.versionFieldSpecified;
            }
            set {
                this.versionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmNFSTransportType Transport {
            get {
                return this.transportField;
            }
            set {
                this.transportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransportSpecified {
            get {
                return this.transportFieldSpecified;
            }
            set {
                this.transportFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PortSpecified {
            get {
                return this.portFieldSpecified;
            }
            set {
                this.portFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint FilesRead {
            get {
                return this.filesReadField;
            }
            set {
                this.filesReadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FilesReadSpecified {
            get {
                return this.filesReadFieldSpecified;
            }
            set {
                this.filesReadFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint FilesWritten {
            get {
                return this.filesWrittenField;
            }
            set {
                this.filesWrittenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FilesWrittenSpecified {
            get {
                return this.filesWrittenFieldSpecified;
            }
            set {
                this.filesWrittenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint FilesOpen {
            get {
                return this.filesOpenField;
            }
            set {
                this.filesOpenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FilesOpenSpecified {
            get {
                return this.filesOpenFieldSpecified;
            }
            set {
                this.filesOpenFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmNFSMountType {
        
        /// <remarks/>
        staticURL,
        
        /// <remarks/>
        dynamicURL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmNFSMountState {
        
        /// <remarks/>
        @new,
        
        /// <remarks/>
        mounting,
        
        /// <remarks/>
        up,
        
        /// <remarks/>
        down,
        
        /// <remarks/>
        unmounting,
        
        /// <remarks/>
        unmountingForRemount,
        
        /// <remarks/>
        unmounted,
        
        /// <remarks/>
        defective,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmNFSTransportType {
        
        /// <remarks/>
        tcp,
        
        /// <remarks/>
        udp,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusNTPRefreshStatus {
        
        private string lastRefreshIndexField;
        
        private string lastRefreshResultField;
        
        private uint lastRefreshTimeField;
        
        private bool lastRefreshTimeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LastRefreshIndex {
            get {
                return this.lastRefreshIndexField;
            }
            set {
                this.lastRefreshIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LastRefreshResult {
            get {
                return this.lastRefreshResultField;
            }
            set {
                this.lastRefreshResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastRefreshTime {
            get {
                return this.lastRefreshTimeField;
            }
            set {
                this.lastRefreshTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefreshTimeSpecified {
            get {
                return this.lastRefreshTimeFieldSpecified;
            }
            set {
                this.lastRefreshTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusNetworkInterfaceStatus {
        
        private uint interfaceIndexField;
        
        private bool interfaceIndexFieldSpecified;
        
        private dmInterfaceType interfaceTypeField;
        
        private bool interfaceTypeFieldSpecified;
        
        private string nameField;
        
        private dmInterfaceAdminStatus adminStatusField;
        
        private bool adminStatusFieldSpecified;
        
        private dmInterfaceOperStatus operStatusField;
        
        private bool operStatusFieldSpecified;
        
        private string ipField;
        
        private string mACAddressField;
        
        private uint mTUField;
        
        private bool mTUFieldSpecified;
        
        private uint rxKbytesField;
        
        private bool rxKbytesFieldSpecified;
        
        private uint rxPacketsField;
        
        private bool rxPacketsFieldSpecified;
        
        private uint rxErrorsField;
        
        private bool rxErrorsFieldSpecified;
        
        private uint rxDropsField;
        
        private bool rxDropsFieldSpecified;
        
        private uint txKbytesField;
        
        private bool txKbytesFieldSpecified;
        
        private uint txPacketsField;
        
        private bool txPacketsFieldSpecified;
        
        private uint txErrorsField;
        
        private bool txErrorsFieldSpecified;
        
        private uint txDropsField;
        
        private bool txDropsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint InterfaceIndex {
            get {
                return this.interfaceIndexField;
            }
            set {
                this.interfaceIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterfaceIndexSpecified {
            get {
                return this.interfaceIndexFieldSpecified;
            }
            set {
                this.interfaceIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmInterfaceType InterfaceType {
            get {
                return this.interfaceTypeField;
            }
            set {
                this.interfaceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterfaceTypeSpecified {
            get {
                return this.interfaceTypeFieldSpecified;
            }
            set {
                this.interfaceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmInterfaceAdminStatus AdminStatus {
            get {
                return this.adminStatusField;
            }
            set {
                this.adminStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AdminStatusSpecified {
            get {
                return this.adminStatusFieldSpecified;
            }
            set {
                this.adminStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmInterfaceOperStatus OperStatus {
            get {
                return this.operStatusField;
            }
            set {
                this.operStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OperStatusSpecified {
            get {
                return this.operStatusFieldSpecified;
            }
            set {
                this.operStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IP {
            get {
                return this.ipField;
            }
            set {
                this.ipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MACAddress {
            get {
                return this.mACAddressField;
            }
            set {
                this.mACAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint MTU {
            get {
                return this.mTUField;
            }
            set {
                this.mTUField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MTUSpecified {
            get {
                return this.mTUFieldSpecified;
            }
            set {
                this.mTUFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RxKbytes {
            get {
                return this.rxKbytesField;
            }
            set {
                this.rxKbytesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RxKbytesSpecified {
            get {
                return this.rxKbytesFieldSpecified;
            }
            set {
                this.rxKbytesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RxPackets {
            get {
                return this.rxPacketsField;
            }
            set {
                this.rxPacketsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RxPacketsSpecified {
            get {
                return this.rxPacketsFieldSpecified;
            }
            set {
                this.rxPacketsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RxErrors {
            get {
                return this.rxErrorsField;
            }
            set {
                this.rxErrorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RxErrorsSpecified {
            get {
                return this.rxErrorsFieldSpecified;
            }
            set {
                this.rxErrorsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RxDrops {
            get {
                return this.rxDropsField;
            }
            set {
                this.rxDropsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RxDropsSpecified {
            get {
                return this.rxDropsFieldSpecified;
            }
            set {
                this.rxDropsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TxKbytes {
            get {
                return this.txKbytesField;
            }
            set {
                this.txKbytesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TxKbytesSpecified {
            get {
                return this.txKbytesFieldSpecified;
            }
            set {
                this.txKbytesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TxPackets {
            get {
                return this.txPacketsField;
            }
            set {
                this.txPacketsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TxPacketsSpecified {
            get {
                return this.txPacketsFieldSpecified;
            }
            set {
                this.txPacketsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TxErrors {
            get {
                return this.txErrorsField;
            }
            set {
                this.txErrorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TxErrorsSpecified {
            get {
                return this.txErrorsFieldSpecified;
            }
            set {
                this.txErrorsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TxDrops {
            get {
                return this.txDropsField;
            }
            set {
                this.txDropsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TxDropsSpecified {
            get {
                return this.txDropsFieldSpecified;
            }
            set {
                this.txDropsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmInterfaceAdminStatus {
        
        /// <remarks/>
        up,
        
        /// <remarks/>
        down,
        
        /// <remarks/>
        testing,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmInterfaceOperStatus {
        
        /// <remarks/>
        up,
        
        /// <remarks/>
        down,
        
        /// <remarks/>
        testing,
        
        /// <remarks/>
        unknown,
        
        /// <remarks/>
        dormant,
        
        /// <remarks/>
        notPresent,
        
        /// <remarks/>
        lowerLayerDown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusNetworkReceiveDataThroughput {
        
        private dmInterfaceType interfaceTypeField;
        
        private bool interfaceTypeFieldSpecified;
        
        private string interfaceNameField;
        
        private uint tenSecondsBitsField;
        
        private bool tenSecondsBitsFieldSpecified;
        
        private uint oneMinuteBitsField;
        
        private bool oneMinuteBitsFieldSpecified;
        
        private uint tenMinutesBitsField;
        
        private bool tenMinutesBitsFieldSpecified;
        
        private uint oneHourBitsField;
        
        private bool oneHourBitsFieldSpecified;
        
        private uint oneDayBitsField;
        
        private bool oneDayBitsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmInterfaceType InterfaceType {
            get {
                return this.interfaceTypeField;
            }
            set {
                this.interfaceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterfaceTypeSpecified {
            get {
                return this.interfaceTypeFieldSpecified;
            }
            set {
                this.interfaceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InterfaceName {
            get {
                return this.interfaceNameField;
            }
            set {
                this.interfaceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TenSecondsBits {
            get {
                return this.tenSecondsBitsField;
            }
            set {
                this.tenSecondsBitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TenSecondsBitsSpecified {
            get {
                return this.tenSecondsBitsFieldSpecified;
            }
            set {
                this.tenSecondsBitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint OneMinuteBits {
            get {
                return this.oneMinuteBitsField;
            }
            set {
                this.oneMinuteBitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OneMinuteBitsSpecified {
            get {
                return this.oneMinuteBitsFieldSpecified;
            }
            set {
                this.oneMinuteBitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TenMinutesBits {
            get {
                return this.tenMinutesBitsField;
            }
            set {
                this.tenMinutesBitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TenMinutesBitsSpecified {
            get {
                return this.tenMinutesBitsFieldSpecified;
            }
            set {
                this.tenMinutesBitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint OneHourBits {
            get {
                return this.oneHourBitsField;
            }
            set {
                this.oneHourBitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OneHourBitsSpecified {
            get {
                return this.oneHourBitsFieldSpecified;
            }
            set {
                this.oneHourBitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint OneDayBits {
            get {
                return this.oneDayBitsField;
            }
            set {
                this.oneDayBitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OneDayBitsSpecified {
            get {
                return this.oneDayBitsFieldSpecified;
            }
            set {
                this.oneDayBitsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusNetworkReceivePacketThroughput {
        
        private dmInterfaceType interfaceTypeField;
        
        private bool interfaceTypeFieldSpecified;
        
        private string interfaceNameField;
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmInterfaceType InterfaceType {
            get {
                return this.interfaceTypeField;
            }
            set {
                this.interfaceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterfaceTypeSpecified {
            get {
                return this.interfaceTypeFieldSpecified;
            }
            set {
                this.interfaceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InterfaceName {
            get {
                return this.interfaceNameField;
            }
            set {
                this.interfaceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusNetworkTransmitDataThroughput {
        
        private dmInterfaceType interfaceTypeField;
        
        private bool interfaceTypeFieldSpecified;
        
        private string interfaceNameField;
        
        private uint tenSecondsBitsField;
        
        private bool tenSecondsBitsFieldSpecified;
        
        private uint oneMinuteBitsField;
        
        private bool oneMinuteBitsFieldSpecified;
        
        private uint tenMinutesBitsField;
        
        private bool tenMinutesBitsFieldSpecified;
        
        private uint oneHourBitsField;
        
        private bool oneHourBitsFieldSpecified;
        
        private uint oneDayBitsField;
        
        private bool oneDayBitsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmInterfaceType InterfaceType {
            get {
                return this.interfaceTypeField;
            }
            set {
                this.interfaceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterfaceTypeSpecified {
            get {
                return this.interfaceTypeFieldSpecified;
            }
            set {
                this.interfaceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InterfaceName {
            get {
                return this.interfaceNameField;
            }
            set {
                this.interfaceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TenSecondsBits {
            get {
                return this.tenSecondsBitsField;
            }
            set {
                this.tenSecondsBitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TenSecondsBitsSpecified {
            get {
                return this.tenSecondsBitsFieldSpecified;
            }
            set {
                this.tenSecondsBitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint OneMinuteBits {
            get {
                return this.oneMinuteBitsField;
            }
            set {
                this.oneMinuteBitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OneMinuteBitsSpecified {
            get {
                return this.oneMinuteBitsFieldSpecified;
            }
            set {
                this.oneMinuteBitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TenMinutesBits {
            get {
                return this.tenMinutesBitsField;
            }
            set {
                this.tenMinutesBitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TenMinutesBitsSpecified {
            get {
                return this.tenMinutesBitsFieldSpecified;
            }
            set {
                this.tenMinutesBitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint OneHourBits {
            get {
                return this.oneHourBitsField;
            }
            set {
                this.oneHourBitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OneHourBitsSpecified {
            get {
                return this.oneHourBitsFieldSpecified;
            }
            set {
                this.oneHourBitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint OneDayBits {
            get {
                return this.oneDayBitsField;
            }
            set {
                this.oneDayBitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OneDayBitsSpecified {
            get {
                return this.oneDayBitsFieldSpecified;
            }
            set {
                this.oneDayBitsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusNetworkTransmitPacketThroughput {
        
        private dmInterfaceType interfaceTypeField;
        
        private bool interfaceTypeFieldSpecified;
        
        private string interfaceNameField;
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmInterfaceType InterfaceType {
            get {
                return this.interfaceTypeField;
            }
            set {
                this.interfaceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterfaceTypeSpecified {
            get {
                return this.interfaceTypeFieldSpecified;
            }
            set {
                this.interfaceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InterfaceName {
            get {
                return this.interfaceNameField;
            }
            set {
                this.interfaceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusObjectStatus {
        
        private string classField;
        
        private dmOpState opStateField;
        
        private bool opStateFieldSpecified;
        
        private dmAdminState adminStateField;
        
        private bool adminStateFieldSpecified;
        
        private string nameField;
        
        private string eventCodeField;
        
        private string errorCodeField;
        
        private dmConfigState configStateField;
        
        private bool configStateFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmOpState OpState {
            get {
                return this.opStateField;
            }
            set {
                this.opStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OpStateSpecified {
            get {
                return this.opStateFieldSpecified;
            }
            set {
                this.opStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmAdminState AdminState {
            get {
                return this.adminStateField;
            }
            set {
                this.adminStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AdminStateSpecified {
            get {
                return this.adminStateFieldSpecified;
            }
            set {
                this.adminStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string EventCode {
            get {
                return this.eventCodeField;
            }
            set {
                this.eventCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmConfigState ConfigState {
            get {
                return this.configStateField;
            }
            set {
                this.configStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConfigStateSpecified {
            get {
                return this.configStateFieldSpecified;
            }
            set {
                this.configStateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmOpState {
        
        /// <remarks/>
        up,
        
        /// <remarks/>
        down,
        
        /// <remarks/>
        PendingUp,
        
        /// <remarks/>
        PendingDown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmAdminState {
        
        /// <remarks/>
        enabled,
        
        /// <remarks/>
        disabled,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmConfigState {
        
        /// <remarks/>
        invalid,
        
        /// <remarks/>
        saved,
        
        /// <remarks/>
        @new,
        
        /// <remarks/>
        modified,
        
        /// <remarks/>
        deleted,
        
        /// <remarks/>
        external,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusPortStatus {
        
        private dmPortName portNameField;
        
        private bool portNameFieldSpecified;
        
        private uint serviceNumberField;
        
        private bool serviceNumberFieldSpecified;
        
        private dmServiceStatus serviceStatusField;
        
        private bool serviceStatusFieldSpecified;
        
        private ushort portNumberField;
        
        private bool portNumberFieldSpecified;
        
        private dmPortStatus portStatusField;
        
        private bool portStatusFieldSpecified;
        
        private uint packetsReceivedField;
        
        private bool packetsReceivedFieldSpecified;
        
        private uint packetsSentField;
        
        private bool packetsSentFieldSpecified;
        
        private uint packetsDroppedField;
        
        private bool packetsDroppedFieldSpecified;
        
        private uint packetCollisionsField;
        
        private bool packetCollisionsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmPortName PortName {
            get {
                return this.portNameField;
            }
            set {
                this.portNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PortNameSpecified {
            get {
                return this.portNameFieldSpecified;
            }
            set {
                this.portNameFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ServiceNumber {
            get {
                return this.serviceNumberField;
            }
            set {
                this.serviceNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServiceNumberSpecified {
            get {
                return this.serviceNumberFieldSpecified;
            }
            set {
                this.serviceNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmServiceStatus ServiceStatus {
            get {
                return this.serviceStatusField;
            }
            set {
                this.serviceStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServiceStatusSpecified {
            get {
                return this.serviceStatusFieldSpecified;
            }
            set {
                this.serviceStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort PortNumber {
            get {
                return this.portNumberField;
            }
            set {
                this.portNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PortNumberSpecified {
            get {
                return this.portNumberFieldSpecified;
            }
            set {
                this.portNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmPortStatus PortStatus {
            get {
                return this.portStatusField;
            }
            set {
                this.portStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PortStatusSpecified {
            get {
                return this.portStatusFieldSpecified;
            }
            set {
                this.portStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint PacketsReceived {
            get {
                return this.packetsReceivedField;
            }
            set {
                this.packetsReceivedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PacketsReceivedSpecified {
            get {
                return this.packetsReceivedFieldSpecified;
            }
            set {
                this.packetsReceivedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint PacketsSent {
            get {
                return this.packetsSentField;
            }
            set {
                this.packetsSentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PacketsSentSpecified {
            get {
                return this.packetsSentFieldSpecified;
            }
            set {
                this.packetsSentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint PacketsDropped {
            get {
                return this.packetsDroppedField;
            }
            set {
                this.packetsDroppedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PacketsDroppedSpecified {
            get {
                return this.packetsDroppedFieldSpecified;
            }
            set {
                this.packetsDroppedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint PacketCollisions {
            get {
                return this.packetCollisionsField;
            }
            set {
                this.packetCollisionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PacketCollisionsSpecified {
            get {
                return this.packetCollisionsFieldSpecified;
            }
            set {
                this.packetCollisionsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmServiceStatus {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("UDP-LISTEN")]
        UDPLISTEN,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("TCP-LISTEN")]
        TCPLISTEN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmPortStatus {
        
        /// <remarks/>
        W,
        
        /// <remarks/>
        IDLE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusReceiveKbpsThroughput {
        
        private dmPortName interfaceField;
        
        private bool interfaceFieldSpecified;
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmPortName Interface {
            get {
                return this.interfaceField;
            }
            set {
                this.interfaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterfaceSpecified {
            get {
                return this.interfaceFieldSpecified;
            }
            set {
                this.interfaceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusReceivePacketThroughput {
        
        private dmPortName interfaceField;
        
        private bool interfaceFieldSpecified;
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmPortName Interface {
            get {
                return this.interfaceField;
            }
            set {
                this.interfaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterfaceSpecified {
            get {
                return this.interfaceFieldSpecified;
            }
            set {
                this.interfaceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusRoutingStatus {
        
        private string destinationField;
        
        private dmPortName interfaceField;
        
        private bool interfaceFieldSpecified;
        
        private string gatewayField;
        
        private uint metricField;
        
        private bool metricFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Destination {
            get {
                return this.destinationField;
            }
            set {
                this.destinationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmPortName Interface {
            get {
                return this.interfaceField;
            }
            set {
                this.interfaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterfaceSpecified {
            get {
                return this.interfaceFieldSpecified;
            }
            set {
                this.interfaceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Gateway {
            get {
                return this.gatewayField;
            }
            set {
                this.gatewayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Metric {
            get {
                return this.metricField;
            }
            set {
                this.metricField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MetricSpecified {
            get {
                return this.metricFieldSpecified;
            }
            set {
                this.metricFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusRoutingStatus2 {
        
        private string destinationField;
        
        private dmInterfaceType interfaceTypeField;
        
        private bool interfaceTypeFieldSpecified;
        
        private dmPortName macInterfaceField;
        
        private bool macInterfaceFieldSpecified;
        
        private string vlanNameField;
        
        private string gatewayField;
        
        private uint metricField;
        
        private bool metricFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Destination {
            get {
                return this.destinationField;
            }
            set {
                this.destinationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmInterfaceType InterfaceType {
            get {
                return this.interfaceTypeField;
            }
            set {
                this.interfaceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterfaceTypeSpecified {
            get {
                return this.interfaceTypeFieldSpecified;
            }
            set {
                this.interfaceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmPortName MacInterface {
            get {
                return this.macInterfaceField;
            }
            set {
                this.macInterfaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MacInterfaceSpecified {
            get {
                return this.macInterfaceFieldSpecified;
            }
            set {
                this.macInterfaceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VlanName {
            get {
                return this.vlanNameField;
            }
            set {
                this.vlanNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Gateway {
            get {
                return this.gatewayField;
            }
            set {
                this.gatewayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Metric {
            get {
                return this.metricField;
            }
            set {
                this.metricField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MetricSpecified {
            get {
                return this.metricFieldSpecified;
            }
            set {
                this.metricFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusSLMPeeringStatus {
        
        private dmReference sLMPolicyField;
        
        private string peerField;
        
        private uint startedField;
        
        private bool startedFieldSpecified;
        
        private uint updatedField;
        
        private bool updatedFieldSpecified;
        
        private uint countField;
        
        private bool countFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference SLMPolicy {
            get {
                return this.sLMPolicyField;
            }
            set {
                this.sLMPolicyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Peer {
            get {
                return this.peerField;
            }
            set {
                this.peerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Started {
            get {
                return this.startedField;
            }
            set {
                this.startedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartedSpecified {
            get {
                return this.startedFieldSpecified;
            }
            set {
                this.startedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Updated {
            get {
                return this.updatedField;
            }
            set {
                this.updatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpdatedSpecified {
            get {
                return this.updatedFieldSpecified;
            }
            set {
                this.updatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CountSpecified {
            get {
                return this.countFieldSpecified;
            }
            set {
                this.countFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusSLMSummaryStatus {
        
        private dmReference sLMPolicyField;
        
        private uint sLMIdField;
        
        private bool sLMIdFieldSpecified;
        
        private uint messagesField;
        
        private bool messagesFieldSpecified;
        
        private uint errorsField;
        
        private bool errorsFieldSpecified;
        
        private uint throttledField;
        
        private bool throttledFieldSpecified;
        
        private uint averageField;
        
        private bool averageFieldSpecified;
        
        private uint minimumField;
        
        private bool minimumFieldSpecified;
        
        private uint maximumField;
        
        private bool maximumFieldSpecified;
        
        private uint totalMessagesField;
        
        private bool totalMessagesFieldSpecified;
        
        private uint totalErrorsField;
        
        private bool totalErrorsFieldSpecified;
        
        private uint totalThrottledField;
        
        private bool totalThrottledFieldSpecified;
        
        private uint totalAverageField;
        
        private bool totalAverageFieldSpecified;
        
        private uint totalMinimumField;
        
        private bool totalMinimumFieldSpecified;
        
        private uint totalMaximumField;
        
        private bool totalMaximumFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference SLMPolicy {
            get {
                return this.sLMPolicyField;
            }
            set {
                this.sLMPolicyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint SLMId {
            get {
                return this.sLMIdField;
            }
            set {
                this.sLMIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SLMIdSpecified {
            get {
                return this.sLMIdFieldSpecified;
            }
            set {
                this.sLMIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Messages {
            get {
                return this.messagesField;
            }
            set {
                this.messagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MessagesSpecified {
            get {
                return this.messagesFieldSpecified;
            }
            set {
                this.messagesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ErrorsSpecified {
            get {
                return this.errorsFieldSpecified;
            }
            set {
                this.errorsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Throttled {
            get {
                return this.throttledField;
            }
            set {
                this.throttledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThrottledSpecified {
            get {
                return this.throttledFieldSpecified;
            }
            set {
                this.throttledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Average {
            get {
                return this.averageField;
            }
            set {
                this.averageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AverageSpecified {
            get {
                return this.averageFieldSpecified;
            }
            set {
                this.averageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Minimum {
            get {
                return this.minimumField;
            }
            set {
                this.minimumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumSpecified {
            get {
                return this.minimumFieldSpecified;
            }
            set {
                this.minimumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Maximum {
            get {
                return this.maximumField;
            }
            set {
                this.maximumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumSpecified {
            get {
                return this.maximumFieldSpecified;
            }
            set {
                this.maximumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TotalMessages {
            get {
                return this.totalMessagesField;
            }
            set {
                this.totalMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalMessagesSpecified {
            get {
                return this.totalMessagesFieldSpecified;
            }
            set {
                this.totalMessagesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TotalErrors {
            get {
                return this.totalErrorsField;
            }
            set {
                this.totalErrorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalErrorsSpecified {
            get {
                return this.totalErrorsFieldSpecified;
            }
            set {
                this.totalErrorsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TotalThrottled {
            get {
                return this.totalThrottledField;
            }
            set {
                this.totalThrottledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalThrottledSpecified {
            get {
                return this.totalThrottledFieldSpecified;
            }
            set {
                this.totalThrottledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TotalAverage {
            get {
                return this.totalAverageField;
            }
            set {
                this.totalAverageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalAverageSpecified {
            get {
                return this.totalAverageFieldSpecified;
            }
            set {
                this.totalAverageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TotalMinimum {
            get {
                return this.totalMinimumField;
            }
            set {
                this.totalMinimumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalMinimumSpecified {
            get {
                return this.totalMinimumFieldSpecified;
            }
            set {
                this.totalMinimumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TotalMaximum {
            get {
                return this.totalMaximumField;
            }
            set {
                this.totalMaximumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalMaximumSpecified {
            get {
                return this.totalMaximumFieldSpecified;
            }
            set {
                this.totalMaximumFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusSNMPStatus {
        
        private string engineIDField;
        
        private uint engineBootsField;
        
        private bool engineBootsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string EngineID {
            get {
                return this.engineIDField;
            }
            set {
                this.engineIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint EngineBoots {
            get {
                return this.engineBootsField;
            }
            set {
                this.engineBootsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EngineBootsSpecified {
            get {
                return this.engineBootsFieldSpecified;
            }
            set {
                this.engineBootsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusSQLStatus {
        
        private dmReference dataSourceField;
        
        private uint readRequestsField;
        
        private bool readRequestsFieldSpecified;
        
        private uint writeRequestsField;
        
        private bool writeRequestsFieldSpecified;
        
        private uint failedReadRequestsField;
        
        private bool failedReadRequestsFieldSpecified;
        
        private uint failedWriteRequestsField;
        
        private bool failedWriteRequestsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference DataSource {
            get {
                return this.dataSourceField;
            }
            set {
                this.dataSourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ReadRequests {
            get {
                return this.readRequestsField;
            }
            set {
                this.readRequestsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReadRequestsSpecified {
            get {
                return this.readRequestsFieldSpecified;
            }
            set {
                this.readRequestsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint WriteRequests {
            get {
                return this.writeRequestsField;
            }
            set {
                this.writeRequestsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WriteRequestsSpecified {
            get {
                return this.writeRequestsFieldSpecified;
            }
            set {
                this.writeRequestsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint FailedReadRequests {
            get {
                return this.failedReadRequestsField;
            }
            set {
                this.failedReadRequestsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FailedReadRequestsSpecified {
            get {
                return this.failedReadRequestsFieldSpecified;
            }
            set {
                this.failedReadRequestsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint FailedWriteRequests {
            get {
                return this.failedWriteRequestsField;
            }
            set {
                this.failedWriteRequestsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FailedWriteRequestsSpecified {
            get {
                return this.failedWriteRequestsFieldSpecified;
            }
            set {
                this.failedWriteRequestsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusSSHTrustedHostStatus {
        
        private string hostField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusServicesStatus {
        
        private string localIPField;
        
        private ushort localPortField;
        
        private bool localPortFieldSpecified;
        
        private string serviceClassField;
        
        private string serviceNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LocalIP {
            get {
                return this.localIPField;
            }
            set {
                this.localIPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort LocalPort {
            get {
                return this.localPortField;
            }
            set {
                this.localPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LocalPortSpecified {
            get {
                return this.localPortFieldSpecified;
            }
            set {
                this.localPortFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ServiceClass {
            get {
                return this.serviceClassField;
            }
            set {
                this.serviceClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ServiceName {
            get {
                return this.serviceNameField;
            }
            set {
                this.serviceNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusStandbyStatus {
        
        private dmPortName nameField;
        
        private bool nameFieldSpecified;
        
        private ushort groupField;
        
        private bool groupFieldSpecified;
        
        private string ipField;
        
        private ushort priorityField;
        
        private bool priorityFieldSpecified;
        
        private dmStandbyMode modeField;
        
        private bool modeFieldSpecified;
        
        private dmToggle preemptField;
        
        private bool preemptFieldSpecified;
        
        private string groupLeaderField;
        
        private dmInterfaceType interfaceTypeField;
        
        private bool interfaceTypeFieldSpecified;
        
        private string vlanNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmPortName Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameSpecified {
            get {
                return this.nameFieldSpecified;
            }
            set {
                this.nameFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GroupSpecified {
            get {
                return this.groupFieldSpecified;
            }
            set {
                this.groupFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IP {
            get {
                return this.ipField;
            }
            set {
                this.ipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrioritySpecified {
            get {
                return this.priorityFieldSpecified;
            }
            set {
                this.priorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmStandbyMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModeSpecified {
            get {
                return this.modeFieldSpecified;
            }
            set {
                this.modeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Preempt {
            get {
                return this.preemptField;
            }
            set {
                this.preemptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreemptSpecified {
            get {
                return this.preemptFieldSpecified;
            }
            set {
                this.preemptFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GroupLeader {
            get {
                return this.groupLeaderField;
            }
            set {
                this.groupLeaderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmInterfaceType InterfaceType {
            get {
                return this.interfaceTypeField;
            }
            set {
                this.interfaceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterfaceTypeSpecified {
            get {
                return this.interfaceTypeFieldSpecified;
            }
            set {
                this.interfaceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VlanName {
            get {
                return this.vlanNameField;
            }
            set {
                this.vlanNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmStandbyMode {
        
        /// <remarks/>
        active,
        
        /// <remarks/>
        standby,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusStylesheetCachingSummary {
        
        private dmReference xMLManagerField;
        
        private uint cacheSizeField;
        
        private bool cacheSizeFieldSpecified;
        
        private uint cacheCountField;
        
        private bool cacheCountFieldSpecified;
        
        private uint readyCountField;
        
        private bool readyCountFieldSpecified;
        
        private uint pendingCountField;
        
        private bool pendingCountFieldSpecified;
        
        private uint badCountField;
        
        private bool badCountFieldSpecified;
        
        private uint dupCountField;
        
        private bool dupCountFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint CacheSize {
            get {
                return this.cacheSizeField;
            }
            set {
                this.cacheSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CacheSizeSpecified {
            get {
                return this.cacheSizeFieldSpecified;
            }
            set {
                this.cacheSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint CacheCount {
            get {
                return this.cacheCountField;
            }
            set {
                this.cacheCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CacheCountSpecified {
            get {
                return this.cacheCountFieldSpecified;
            }
            set {
                this.cacheCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ReadyCount {
            get {
                return this.readyCountField;
            }
            set {
                this.readyCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReadyCountSpecified {
            get {
                return this.readyCountFieldSpecified;
            }
            set {
                this.readyCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint PendingCount {
            get {
                return this.pendingCountField;
            }
            set {
                this.pendingCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PendingCountSpecified {
            get {
                return this.pendingCountFieldSpecified;
            }
            set {
                this.pendingCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint BadCount {
            get {
                return this.badCountField;
            }
            set {
                this.badCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BadCountSpecified {
            get {
                return this.badCountFieldSpecified;
            }
            set {
                this.badCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint DupCount {
            get {
                return this.dupCountField;
            }
            set {
                this.dupCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DupCountSpecified {
            get {
                return this.dupCountFieldSpecified;
            }
            set {
                this.dupCountFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusStylesheetExecutions {
        
        private dmReference xMLManagerField;
        
        private dmOutputMode outputModeField;
        
        private bool outputModeFieldSpecified;
        
        private string uRLField;
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmOutputMode OutputMode {
            get {
                return this.outputModeField;
            }
            set {
                this.outputModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutputModeSpecified {
            get {
                return this.outputModeFieldSpecified;
            }
            set {
                this.outputModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmOutputMode {
        
        /// <remarks/>
        general,
        
        /// <remarks/>
        stream,
        
        /// <remarks/>
        context,
        
        /// <remarks/>
        events,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusStylesheetExecutionsSimpleIndex {
        
        private dmReference xMLManagerField;
        
        private uint idField;
        
        private bool idFieldSpecified;
        
        private dmOutputMode outputModeField;
        
        private bool outputModeFieldSpecified;
        
        private string uRLField;
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmOutputMode OutputMode {
            get {
                return this.outputModeField;
            }
            set {
                this.outputModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutputModeSpecified {
            get {
                return this.outputModeFieldSpecified;
            }
            set {
                this.outputModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusStylesheetMeanExecutionTime {
        
        private dmReference xMLManagerField;
        
        private dmOutputMode outputModeField;
        
        private bool outputModeFieldSpecified;
        
        private string uRLField;
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmOutputMode OutputMode {
            get {
                return this.outputModeField;
            }
            set {
                this.outputModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutputModeSpecified {
            get {
                return this.outputModeFieldSpecified;
            }
            set {
                this.outputModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusStylesheetMeanExecutionTimeSimpleIndex {
        
        private dmReference xMLManagerField;
        
        private uint idField;
        
        private bool idFieldSpecified;
        
        private dmOutputMode outputModeField;
        
        private bool outputModeFieldSpecified;
        
        private string uRLField;
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmOutputMode OutputMode {
            get {
                return this.outputModeField;
            }
            set {
                this.outputModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutputModeSpecified {
            get {
                return this.outputModeFieldSpecified;
            }
            set {
                this.outputModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusStylesheetProfiles {
        
        private dmReference xMLManagerField;
        
        private dmOutputMode outputModeField;
        
        private bool outputModeFieldSpecified;
        
        private string uRLField;
        
        private string nameField;
        
        private string locationField;
        
        private uint countField;
        
        private bool countFieldSpecified;
        
        private string typeField;
        
        private uint totalTimeMSField;
        
        private bool totalTimeMSFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmOutputMode OutputMode {
            get {
                return this.outputModeField;
            }
            set {
                this.outputModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutputModeSpecified {
            get {
                return this.outputModeFieldSpecified;
            }
            set {
                this.outputModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CountSpecified {
            get {
                return this.countFieldSpecified;
            }
            set {
                this.countFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TotalTimeMS {
            get {
                return this.totalTimeMSField;
            }
            set {
                this.totalTimeMSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalTimeMSSpecified {
            get {
                return this.totalTimeMSFieldSpecified;
            }
            set {
                this.totalTimeMSFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusStylesheetProfilesSimpleIndex {
        
        private dmReference xMLManagerField;
        
        private uint idField;
        
        private bool idFieldSpecified;
        
        private dmOutputMode outputModeField;
        
        private bool outputModeFieldSpecified;
        
        private string uRLField;
        
        private uint indexField;
        
        private bool indexFieldSpecified;
        
        private string nameField;
        
        private string locationField;
        
        private uint countField;
        
        private bool countFieldSpecified;
        
        private string typeField;
        
        private uint totalTimeMSField;
        
        private bool totalTimeMSFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmOutputMode OutputMode {
            get {
                return this.outputModeField;
            }
            set {
                this.outputModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutputModeSpecified {
            get {
                return this.outputModeFieldSpecified;
            }
            set {
                this.outputModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndexSpecified {
            get {
                return this.indexFieldSpecified;
            }
            set {
                this.indexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CountSpecified {
            get {
                return this.countFieldSpecified;
            }
            set {
                this.countFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TotalTimeMS {
            get {
                return this.totalTimeMSField;
            }
            set {
                this.totalTimeMSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalTimeMSSpecified {
            get {
                return this.totalTimeMSFieldSpecified;
            }
            set {
                this.totalTimeMSFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusStylesheetStatus {
        
        private dmReference xMLManagerField;
        
        private dmOutputMode outputModeField;
        
        private bool outputModeFieldSpecified;
        
        private string uRLField;
        
        private string compileOptionsField;
        
        private dmStylesheetStatus statusField;
        
        private bool statusFieldSpecified;
        
        private uint compileSpeedField;
        
        private bool compileSpeedFieldSpecified;
        
        private uint refreshIntervalField;
        
        private bool refreshIntervalFieldSpecified;
        
        private dmToggle flushableField;
        
        private bool flushableFieldSpecified;
        
        private uint lastRefreshField;
        
        private bool lastRefreshFieldSpecified;
        
        private string messageField;
        
        private string logField;
        
        private dmToggle xG4EnabledField;
        
        private bool xG4EnabledFieldSpecified;
        
        private uint xG4SizeField;
        
        private bool xG4SizeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmOutputMode OutputMode {
            get {
                return this.outputModeField;
            }
            set {
                this.outputModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutputModeSpecified {
            get {
                return this.outputModeFieldSpecified;
            }
            set {
                this.outputModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CompileOptions {
            get {
                return this.compileOptionsField;
            }
            set {
                this.compileOptionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmStylesheetStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint CompileSpeed {
            get {
                return this.compileSpeedField;
            }
            set {
                this.compileSpeedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompileSpeedSpecified {
            get {
                return this.compileSpeedFieldSpecified;
            }
            set {
                this.compileSpeedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RefreshInterval {
            get {
                return this.refreshIntervalField;
            }
            set {
                this.refreshIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RefreshIntervalSpecified {
            get {
                return this.refreshIntervalFieldSpecified;
            }
            set {
                this.refreshIntervalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Flushable {
            get {
                return this.flushableField;
            }
            set {
                this.flushableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlushableSpecified {
            get {
                return this.flushableFieldSpecified;
            }
            set {
                this.flushableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastRefresh {
            get {
                return this.lastRefreshField;
            }
            set {
                this.lastRefreshField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefreshSpecified {
            get {
                return this.lastRefreshFieldSpecified;
            }
            set {
                this.lastRefreshFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Log {
            get {
                return this.logField;
            }
            set {
                this.logField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle XG4Enabled {
            get {
                return this.xG4EnabledField;
            }
            set {
                this.xG4EnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XG4EnabledSpecified {
            get {
                return this.xG4EnabledFieldSpecified;
            }
            set {
                this.xG4EnabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint XG4Size {
            get {
                return this.xG4SizeField;
            }
            set {
                this.xG4SizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XG4SizeSpecified {
            get {
                return this.xG4SizeFieldSpecified;
            }
            set {
                this.xG4SizeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmStylesheetStatus {
        
        /// <remarks/>
        ready,
        
        /// <remarks/>
        pending,
        
        /// <remarks/>
        bad,
        
        /// <remarks/>
        expired,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusStylesheetStatusSimpleIndex {
        
        private dmReference xMLManagerField;
        
        private uint idField;
        
        private bool idFieldSpecified;
        
        private dmOutputMode outputModeField;
        
        private bool outputModeFieldSpecified;
        
        private string uRLField;
        
        private string compileOptionsField;
        
        private dmStylesheetStatus statusField;
        
        private bool statusFieldSpecified;
        
        private uint compileSpeedField;
        
        private bool compileSpeedFieldSpecified;
        
        private uint refreshIntervalField;
        
        private bool refreshIntervalFieldSpecified;
        
        private dmToggle flushableField;
        
        private bool flushableFieldSpecified;
        
        private uint lastRefreshField;
        
        private bool lastRefreshFieldSpecified;
        
        private string messageField;
        
        private string logField;
        
        private dmToggle xG4EnabledField;
        
        private bool xG4EnabledFieldSpecified;
        
        private uint xG4SizeField;
        
        private bool xG4SizeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference XMLManager {
            get {
                return this.xMLManagerField;
            }
            set {
                this.xMLManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmOutputMode OutputMode {
            get {
                return this.outputModeField;
            }
            set {
                this.outputModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutputModeSpecified {
            get {
                return this.outputModeFieldSpecified;
            }
            set {
                this.outputModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CompileOptions {
            get {
                return this.compileOptionsField;
            }
            set {
                this.compileOptionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmStylesheetStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint CompileSpeed {
            get {
                return this.compileSpeedField;
            }
            set {
                this.compileSpeedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompileSpeedSpecified {
            get {
                return this.compileSpeedFieldSpecified;
            }
            set {
                this.compileSpeedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RefreshInterval {
            get {
                return this.refreshIntervalField;
            }
            set {
                this.refreshIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RefreshIntervalSpecified {
            get {
                return this.refreshIntervalFieldSpecified;
            }
            set {
                this.refreshIntervalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Flushable {
            get {
                return this.flushableField;
            }
            set {
                this.flushableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlushableSpecified {
            get {
                return this.flushableFieldSpecified;
            }
            set {
                this.flushableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastRefresh {
            get {
                return this.lastRefreshField;
            }
            set {
                this.lastRefreshField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefreshSpecified {
            get {
                return this.lastRefreshFieldSpecified;
            }
            set {
                this.lastRefreshFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Log {
            get {
                return this.logField;
            }
            set {
                this.logField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle XG4Enabled {
            get {
                return this.xG4EnabledField;
            }
            set {
                this.xG4EnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XG4EnabledSpecified {
            get {
                return this.xG4EnabledFieldSpecified;
            }
            set {
                this.xG4EnabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint XG4Size {
            get {
                return this.xG4SizeField;
            }
            set {
                this.xG4SizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XG4SizeSpecified {
            get {
                return this.xG4SizeFieldSpecified;
            }
            set {
                this.xG4SizeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusSystemUsage {
        
        private uint intervalField;
        
        private bool intervalFieldSpecified;
        
        private uint loadField;
        
        private bool loadFieldSpecified;
        
        private uint workListField;
        
        private bool workListFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Interval {
            get {
                return this.intervalField;
            }
            set {
                this.intervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalSpecified {
            get {
                return this.intervalFieldSpecified;
            }
            set {
                this.intervalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Load {
            get {
                return this.loadField;
            }
            set {
                this.loadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LoadSpecified {
            get {
                return this.loadFieldSpecified;
            }
            set {
                this.loadFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint WorkList {
            get {
                return this.workListField;
            }
            set {
                this.workListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkListSpecified {
            get {
                return this.workListFieldSpecified;
            }
            set {
                this.workListFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusTCPSummary {
        
        private uint establishedField;
        
        private bool establishedFieldSpecified;
        
        private uint syn_sentField;
        
        private bool syn_sentFieldSpecified;
        
        private uint syn_receivedField;
        
        private bool syn_receivedFieldSpecified;
        
        private uint fin_wait_1Field;
        
        private bool fin_wait_1FieldSpecified;
        
        private uint fin_wait_2Field;
        
        private bool fin_wait_2FieldSpecified;
        
        private uint time_waitField;
        
        private bool time_waitFieldSpecified;
        
        private uint closedField;
        
        private bool closedFieldSpecified;
        
        private uint close_waitField;
        
        private bool close_waitFieldSpecified;
        
        private uint last_ackField;
        
        private bool last_ackFieldSpecified;
        
        private uint listenField;
        
        private bool listenFieldSpecified;
        
        private uint closingField;
        
        private bool closingFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint established {
            get {
                return this.establishedField;
            }
            set {
                this.establishedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool establishedSpecified {
            get {
                return this.establishedFieldSpecified;
            }
            set {
                this.establishedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint syn_sent {
            get {
                return this.syn_sentField;
            }
            set {
                this.syn_sentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool syn_sentSpecified {
            get {
                return this.syn_sentFieldSpecified;
            }
            set {
                this.syn_sentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint syn_received {
            get {
                return this.syn_receivedField;
            }
            set {
                this.syn_receivedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool syn_receivedSpecified {
            get {
                return this.syn_receivedFieldSpecified;
            }
            set {
                this.syn_receivedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint fin_wait_1 {
            get {
                return this.fin_wait_1Field;
            }
            set {
                this.fin_wait_1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fin_wait_1Specified {
            get {
                return this.fin_wait_1FieldSpecified;
            }
            set {
                this.fin_wait_1FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint fin_wait_2 {
            get {
                return this.fin_wait_2Field;
            }
            set {
                this.fin_wait_2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fin_wait_2Specified {
            get {
                return this.fin_wait_2FieldSpecified;
            }
            set {
                this.fin_wait_2FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint time_wait {
            get {
                return this.time_waitField;
            }
            set {
                this.time_waitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool time_waitSpecified {
            get {
                return this.time_waitFieldSpecified;
            }
            set {
                this.time_waitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint closed {
            get {
                return this.closedField;
            }
            set {
                this.closedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool closedSpecified {
            get {
                return this.closedFieldSpecified;
            }
            set {
                this.closedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint close_wait {
            get {
                return this.close_waitField;
            }
            set {
                this.close_waitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool close_waitSpecified {
            get {
                return this.close_waitFieldSpecified;
            }
            set {
                this.close_waitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint last_ack {
            get {
                return this.last_ackField;
            }
            set {
                this.last_ackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool last_ackSpecified {
            get {
                return this.last_ackFieldSpecified;
            }
            set {
                this.last_ackFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint listen {
            get {
                return this.listenField;
            }
            set {
                this.listenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool listenSpecified {
            get {
                return this.listenFieldSpecified;
            }
            set {
                this.listenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint closing {
            get {
                return this.closingField;
            }
            set {
                this.closingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool closingSpecified {
            get {
                return this.closingFieldSpecified;
            }
            set {
                this.closingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusTCPTable {
        
        private string localIPField;
        
        private ushort localPortField;
        
        private bool localPortFieldSpecified;
        
        private string remoteIPField;
        
        private ushort remotePortField;
        
        private bool remotePortFieldSpecified;
        
        private dmTCPState stateField;
        
        private bool stateFieldSpecified;
        
        private string serviceDomainField;
        
        private string serviceClassField;
        
        private string serviceNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string localIP {
            get {
                return this.localIPField;
            }
            set {
                this.localIPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort localPort {
            get {
                return this.localPortField;
            }
            set {
                this.localPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localPortSpecified {
            get {
                return this.localPortFieldSpecified;
            }
            set {
                this.localPortFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string remoteIP {
            get {
                return this.remoteIPField;
            }
            set {
                this.remoteIPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort remotePort {
            get {
                return this.remotePortField;
            }
            set {
                this.remotePortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remotePortSpecified {
            get {
                return this.remotePortFieldSpecified;
            }
            set {
                this.remotePortFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmTCPState state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stateSpecified {
            get {
                return this.stateFieldSpecified;
            }
            set {
                this.stateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serviceDomain {
            get {
                return this.serviceDomainField;
            }
            set {
                this.serviceDomainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serviceClass {
            get {
                return this.serviceClassField;
            }
            set {
                this.serviceClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serviceName {
            get {
                return this.serviceNameField;
            }
            set {
                this.serviceNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmTCPState {
        
        /// <remarks/>
        established,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("syn-sent")]
        synsent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("syn-received")]
        synreceived,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fin-wait-1")]
        finwait1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fin-wait-2")]
        finwait2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("time-wait")]
        timewait,
        
        /// <remarks/>
        closed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("close-wait")]
        closewait,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-ack")]
        lastack,
        
        /// <remarks/>
        listen,
        
        /// <remarks/>
        closing,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusTibcoEMSStatus {
        
        private dmReference serverField;
        
        private uint receivedMessagesField;
        
        private bool receivedMessagesFieldSpecified;
        
        private uint sentMessagesField;
        
        private bool sentMessagesFieldSpecified;
        
        private uint receivedFaultsField;
        
        private bool receivedFaultsFieldSpecified;
        
        private uint sentFaultsField;
        
        private bool sentFaultsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ReceivedMessages {
            get {
                return this.receivedMessagesField;
            }
            set {
                this.receivedMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReceivedMessagesSpecified {
            get {
                return this.receivedMessagesFieldSpecified;
            }
            set {
                this.receivedMessagesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint SentMessages {
            get {
                return this.sentMessagesField;
            }
            set {
                this.sentMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SentMessagesSpecified {
            get {
                return this.sentMessagesFieldSpecified;
            }
            set {
                this.sentMessagesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ReceivedFaults {
            get {
                return this.receivedFaultsField;
            }
            set {
                this.receivedFaultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReceivedFaultsSpecified {
            get {
                return this.receivedFaultsFieldSpecified;
            }
            set {
                this.receivedFaultsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint SentFaults {
            get {
                return this.sentFaultsField;
            }
            set {
                this.sentFaultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SentFaultsSpecified {
            get {
                return this.sentFaultsFieldSpecified;
            }
            set {
                this.sentFaultsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusTransmitKbpsThroughput {
        
        private dmPortName interfaceField;
        
        private bool interfaceFieldSpecified;
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmPortName Interface {
            get {
                return this.interfaceField;
            }
            set {
                this.interfaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterfaceSpecified {
            get {
                return this.interfaceFieldSpecified;
            }
            set {
                this.interfaceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusTransmitPacketThroughput {
        
        private dmPortName interfaceField;
        
        private bool interfaceFieldSpecified;
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmPortName Interface {
            get {
                return this.interfaceField;
            }
            set {
                this.interfaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterfaceSpecified {
            get {
                return this.interfaceFieldSpecified;
            }
            set {
                this.interfaceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusUDDISubscriptionKeyStatusSimpleIndex {
        
        private dmReference subscriptionField;
        
        private string subscriptionKeyField;
        
        private dmUDDISubSubscriptionStatus statusField;
        
        private bool statusFieldSpecified;
        
        private uint lastCoverageStartField;
        
        private bool lastCoverageStartFieldSpecified;
        
        private uint lastCoverageEndField;
        
        private bool lastCoverageEndFieldSpecified;
        
        private uint lastRequestField;
        
        private bool lastRequestFieldSpecified;
        
        private uint notifyIntervalField;
        
        private bool notifyIntervalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Subscription {
            get {
                return this.subscriptionField;
            }
            set {
                this.subscriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SubscriptionKey {
            get {
                return this.subscriptionKeyField;
            }
            set {
                this.subscriptionKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmUDDISubSubscriptionStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastCoverageStart {
            get {
                return this.lastCoverageStartField;
            }
            set {
                this.lastCoverageStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastCoverageStartSpecified {
            get {
                return this.lastCoverageStartFieldSpecified;
            }
            set {
                this.lastCoverageStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastCoverageEnd {
            get {
                return this.lastCoverageEndField;
            }
            set {
                this.lastCoverageEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastCoverageEndSpecified {
            get {
                return this.lastCoverageEndFieldSpecified;
            }
            set {
                this.lastCoverageEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastRequest {
            get {
                return this.lastRequestField;
            }
            set {
                this.lastRequestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRequestSpecified {
            get {
                return this.lastRequestFieldSpecified;
            }
            set {
                this.lastRequestFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint NotifyInterval {
            get {
                return this.notifyIntervalField;
            }
            set {
                this.notifyIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NotifyIntervalSpecified {
            get {
                return this.notifyIntervalFieldSpecified;
            }
            set {
                this.notifyIntervalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmUDDISubSubscriptionStatus {
        
        /// <remarks/>
        Initializing,
        
        /// <remarks/>
        Okay,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusUDDISubscriptionServiceStatusSimpleIndex {
        
        private dmReference subscriptionField;
        
        private string serviceKeyField;
        
        private dmUDDISubServiceStatus statusField;
        
        private bool statusFieldSpecified;
        
        private string endPointField;
        
        private string serviceNameField;
        
        private string portNameField;
        
        private string namespaceField;
        
        private string wSDLKeyField;
        
        private string wSDLURLField;
        
        private string bindingNameField;
        
        private string bindingNamespaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Subscription {
            get {
                return this.subscriptionField;
            }
            set {
                this.subscriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ServiceKey {
            get {
                return this.serviceKeyField;
            }
            set {
                this.serviceKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmUDDISubServiceStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string EndPoint {
            get {
                return this.endPointField;
            }
            set {
                this.endPointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ServiceName {
            get {
                return this.serviceNameField;
            }
            set {
                this.serviceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PortName {
            get {
                return this.portNameField;
            }
            set {
                this.portNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string WSDLKey {
            get {
                return this.wSDLKeyField;
            }
            set {
                this.wSDLKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string WSDLURL {
            get {
                return this.wSDLURLField;
            }
            set {
                this.wSDLURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string BindingName {
            get {
                return this.bindingNameField;
            }
            set {
                this.bindingNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string BindingNamespace {
            get {
                return this.bindingNamespaceField;
            }
            set {
                this.bindingNamespaceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmUDDISubServiceStatus {
        
        /// <remarks/>
        Okay,
        
        /// <remarks/>
        MissingWSDL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusUDDISubscriptionStatusSimpleIndex {
        
        private dmReference subscriptionField;
        
        private dmUDDISubServiceStatus servicesStatusField;
        
        private bool servicesStatusFieldSpecified;
        
        private dmUDDISubSubscriptionStatus subscriptionStatusField;
        
        private bool subscriptionStatusFieldSpecified;
        
        private uint servicesField;
        
        private bool servicesFieldSpecified;
        
        private uint servicesAddedField;
        
        private bool servicesAddedFieldSpecified;
        
        private uint servicesDeletedField;
        
        private bool servicesDeletedFieldSpecified;
        
        private uint servicesModifiedField;
        
        private bool servicesModifiedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Subscription {
            get {
                return this.subscriptionField;
            }
            set {
                this.subscriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmUDDISubServiceStatus ServicesStatus {
            get {
                return this.servicesStatusField;
            }
            set {
                this.servicesStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServicesStatusSpecified {
            get {
                return this.servicesStatusFieldSpecified;
            }
            set {
                this.servicesStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmUDDISubSubscriptionStatus SubscriptionStatus {
            get {
                return this.subscriptionStatusField;
            }
            set {
                this.subscriptionStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubscriptionStatusSpecified {
            get {
                return this.subscriptionStatusFieldSpecified;
            }
            set {
                this.subscriptionStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Services {
            get {
                return this.servicesField;
            }
            set {
                this.servicesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServicesSpecified {
            get {
                return this.servicesFieldSpecified;
            }
            set {
                this.servicesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ServicesAdded {
            get {
                return this.servicesAddedField;
            }
            set {
                this.servicesAddedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServicesAddedSpecified {
            get {
                return this.servicesAddedFieldSpecified;
            }
            set {
                this.servicesAddedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ServicesDeleted {
            get {
                return this.servicesDeletedField;
            }
            set {
                this.servicesDeletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServicesDeletedSpecified {
            get {
                return this.servicesDeletedFieldSpecified;
            }
            set {
                this.servicesDeletedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ServicesModified {
            get {
                return this.servicesModifiedField;
            }
            set {
                this.servicesModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServicesModifiedSpecified {
            get {
                return this.servicesModifiedFieldSpecified;
            }
            set {
                this.servicesModifiedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusVersion {
        
        private string versionField;
        
        private string buildField;
        
        private string buildDateField;
        
        private string watchdogBuildField;
        
        private string installedDPOSField;
        
        private string runningDPOSField;
        
        private string libraryMQField;
        
        private string libraryTAMField;
        
        private string coprocVersionField;
        
        private string libraryReservedField;
        
        private string libraryODBCField;
        
        private string libraryTibcoField;
        
        private string libraryXMSField;
        
        private string serialField;
        
        private string xMLAcceleratorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Build {
            get {
                return this.buildField;
            }
            set {
                this.buildField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string BuildDate {
            get {
                return this.buildDateField;
            }
            set {
                this.buildDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string WatchdogBuild {
            get {
                return this.watchdogBuildField;
            }
            set {
                this.watchdogBuildField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InstalledDPOS {
            get {
                return this.installedDPOSField;
            }
            set {
                this.installedDPOSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RunningDPOS {
            get {
                return this.runningDPOSField;
            }
            set {
                this.runningDPOSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LibraryMQ {
            get {
                return this.libraryMQField;
            }
            set {
                this.libraryMQField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LibraryTAM {
            get {
                return this.libraryTAMField;
            }
            set {
                this.libraryTAMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CoprocVersion {
            get {
                return this.coprocVersionField;
            }
            set {
                this.coprocVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LibraryReserved {
            get {
                return this.libraryReservedField;
            }
            set {
                this.libraryReservedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LibraryODBC {
            get {
                return this.libraryODBCField;
            }
            set {
                this.libraryODBCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LibraryTibco {
            get {
                return this.libraryTibcoField;
            }
            set {
                this.libraryTibcoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LibraryXMS {
            get {
                return this.libraryXMSField;
            }
            set {
                this.libraryXMSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Serial {
            get {
                return this.serialField;
            }
            set {
                this.serialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string XMLAccelerator {
            get {
                return this.xMLAcceleratorField;
            }
            set {
                this.xMLAcceleratorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusVlanInterfaceStatus {
        
        private string nameField;
        
        private uint interfaceIndexField;
        
        private bool interfaceIndexFieldSpecified;
        
        private dmPortName onEthernetField;
        
        private bool onEthernetFieldSpecified;
        
        private uint vlanIdentifierField;
        
        private bool vlanIdentifierFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint InterfaceIndex {
            get {
                return this.interfaceIndexField;
            }
            set {
                this.interfaceIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterfaceIndexSpecified {
            get {
                return this.interfaceIndexFieldSpecified;
            }
            set {
                this.interfaceIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmPortName OnEthernet {
            get {
                return this.onEthernetField;
            }
            set {
                this.onEthernetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnEthernetSpecified {
            get {
                return this.onEthernetFieldSpecified;
            }
            set {
                this.onEthernetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint VlanIdentifier {
            get {
                return this.vlanIdentifierField;
            }
            set {
                this.vlanIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VlanIdentifierSpecified {
            get {
                return this.vlanIdentifierFieldSpecified;
            }
            set {
                this.vlanIdentifierFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusWSMAgentSpoolers {
        
        private uint indexField;
        
        private bool indexFieldSpecified;
        
        private string contextField;
        
        private string protocolField;
        
        private string subProtocolField;
        
        private uint pollIntervalField;
        
        private bool pollIntervalFieldSpecified;
        
        private uint recordsField;
        
        private bool recordsFieldSpecified;
        
        private uint lastReadIndexField;
        
        private bool lastReadIndexFieldSpecified;
        
        private uint lastAckedIndexField;
        
        private bool lastAckedIndexFieldSpecified;
        
        private uint lastReadTimeField;
        
        private bool lastReadTimeFieldSpecified;
        
        private uint lastAckTimeField;
        
        private bool lastAckTimeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndexSpecified {
            get {
                return this.indexFieldSpecified;
            }
            set {
                this.indexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Protocol {
            get {
                return this.protocolField;
            }
            set {
                this.protocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SubProtocol {
            get {
                return this.subProtocolField;
            }
            set {
                this.subProtocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint PollInterval {
            get {
                return this.pollIntervalField;
            }
            set {
                this.pollIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PollIntervalSpecified {
            get {
                return this.pollIntervalFieldSpecified;
            }
            set {
                this.pollIntervalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Records {
            get {
                return this.recordsField;
            }
            set {
                this.recordsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RecordsSpecified {
            get {
                return this.recordsFieldSpecified;
            }
            set {
                this.recordsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastReadIndex {
            get {
                return this.lastReadIndexField;
            }
            set {
                this.lastReadIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastReadIndexSpecified {
            get {
                return this.lastReadIndexFieldSpecified;
            }
            set {
                this.lastReadIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastAckedIndex {
            get {
                return this.lastAckedIndexField;
            }
            set {
                this.lastAckedIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastAckedIndexSpecified {
            get {
                return this.lastAckedIndexFieldSpecified;
            }
            set {
                this.lastAckedIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastReadTime {
            get {
                return this.lastReadTimeField;
            }
            set {
                this.lastReadTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastReadTimeSpecified {
            get {
                return this.lastReadTimeFieldSpecified;
            }
            set {
                this.lastReadTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastAckTime {
            get {
                return this.lastAckTimeField;
            }
            set {
                this.lastAckTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastAckTimeSpecified {
            get {
                return this.lastAckTimeFieldSpecified;
            }
            set {
                this.lastAckTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusWSMAgentStatus {
        
        private uint spoolerCountField;
        
        private bool spoolerCountFieldSpecified;
        
        private uint polledSpoolersField;
        
        private bool polledSpoolersFieldSpecified;
        
        private uint recordsSeenField;
        
        private bool recordsSeenFieldSpecified;
        
        private uint recordsLostField;
        
        private bool recordsLostFieldSpecified;
        
        private uint pendingRecordsField;
        
        private bool pendingRecordsFieldSpecified;
        
        private uint completeRecordsField;
        
        private bool completeRecordsFieldSpecified;
        
        private uint memoryUsedKBField;
        
        private bool memoryUsedKBFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint SpoolerCount {
            get {
                return this.spoolerCountField;
            }
            set {
                this.spoolerCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpoolerCountSpecified {
            get {
                return this.spoolerCountFieldSpecified;
            }
            set {
                this.spoolerCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint PolledSpoolers {
            get {
                return this.polledSpoolersField;
            }
            set {
                this.polledSpoolersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PolledSpoolersSpecified {
            get {
                return this.polledSpoolersFieldSpecified;
            }
            set {
                this.polledSpoolersFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RecordsSeen {
            get {
                return this.recordsSeenField;
            }
            set {
                this.recordsSeenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RecordsSeenSpecified {
            get {
                return this.recordsSeenFieldSpecified;
            }
            set {
                this.recordsSeenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RecordsLost {
            get {
                return this.recordsLostField;
            }
            set {
                this.recordsLostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RecordsLostSpecified {
            get {
                return this.recordsLostFieldSpecified;
            }
            set {
                this.recordsLostFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint PendingRecords {
            get {
                return this.pendingRecordsField;
            }
            set {
                this.pendingRecordsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PendingRecordsSpecified {
            get {
                return this.pendingRecordsFieldSpecified;
            }
            set {
                this.pendingRecordsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint CompleteRecords {
            get {
                return this.completeRecordsField;
            }
            set {
                this.completeRecordsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompleteRecordsSpecified {
            get {
                return this.completeRecordsFieldSpecified;
            }
            set {
                this.completeRecordsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint MemoryUsedKB {
            get {
                return this.memoryUsedKBField;
            }
            set {
                this.memoryUsedKBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MemoryUsedKBSpecified {
            get {
                return this.memoryUsedKBFieldSpecified;
            }
            set {
                this.memoryUsedKBFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusWSOperationMetrics {
        
        private string serviceEndpointField;
        
        private string portTypeField;
        
        private string operationField;
        
        private uint numberOfRequestsField;
        
        private bool numberOfRequestsFieldSpecified;
        
        private uint numberOfFailedRequestsField;
        
        private bool numberOfFailedRequestsFieldSpecified;
        
        private uint numberOfSuccessfulRequestsField;
        
        private bool numberOfSuccessfulRequestsFieldSpecified;
        
        private uint serviceTimeField;
        
        private bool serviceTimeFieldSpecified;
        
        private uint maxResponseTimeField;
        
        private bool maxResponseTimeFieldSpecified;
        
        private uint lastResponseTimeField;
        
        private bool lastResponseTimeFieldSpecified;
        
        private uint maxRequestSizeField;
        
        private bool maxRequestSizeFieldSpecified;
        
        private uint lastRequestSizeField;
        
        private bool lastRequestSizeFieldSpecified;
        
        private uint maxResponseSizeField;
        
        private bool maxResponseSizeFieldSpecified;
        
        private uint lastResponseSizeField;
        
        private bool lastResponseSizeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string ServiceEndpoint {
            get {
                return this.serviceEndpointField;
            }
            set {
                this.serviceEndpointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PortType {
            get {
                return this.portTypeField;
            }
            set {
                this.portTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint NumberOfRequests {
            get {
                return this.numberOfRequestsField;
            }
            set {
                this.numberOfRequestsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfRequestsSpecified {
            get {
                return this.numberOfRequestsFieldSpecified;
            }
            set {
                this.numberOfRequestsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint NumberOfFailedRequests {
            get {
                return this.numberOfFailedRequestsField;
            }
            set {
                this.numberOfFailedRequestsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfFailedRequestsSpecified {
            get {
                return this.numberOfFailedRequestsFieldSpecified;
            }
            set {
                this.numberOfFailedRequestsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint NumberOfSuccessfulRequests {
            get {
                return this.numberOfSuccessfulRequestsField;
            }
            set {
                this.numberOfSuccessfulRequestsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfSuccessfulRequestsSpecified {
            get {
                return this.numberOfSuccessfulRequestsFieldSpecified;
            }
            set {
                this.numberOfSuccessfulRequestsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ServiceTime {
            get {
                return this.serviceTimeField;
            }
            set {
                this.serviceTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServiceTimeSpecified {
            get {
                return this.serviceTimeFieldSpecified;
            }
            set {
                this.serviceTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint MaxResponseTime {
            get {
                return this.maxResponseTimeField;
            }
            set {
                this.maxResponseTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxResponseTimeSpecified {
            get {
                return this.maxResponseTimeFieldSpecified;
            }
            set {
                this.maxResponseTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastResponseTime {
            get {
                return this.lastResponseTimeField;
            }
            set {
                this.lastResponseTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastResponseTimeSpecified {
            get {
                return this.lastResponseTimeFieldSpecified;
            }
            set {
                this.lastResponseTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint MaxRequestSize {
            get {
                return this.maxRequestSizeField;
            }
            set {
                this.maxRequestSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxRequestSizeSpecified {
            get {
                return this.maxRequestSizeFieldSpecified;
            }
            set {
                this.maxRequestSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastRequestSize {
            get {
                return this.lastRequestSizeField;
            }
            set {
                this.lastRequestSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRequestSizeSpecified {
            get {
                return this.lastRequestSizeFieldSpecified;
            }
            set {
                this.lastRequestSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint MaxResponseSize {
            get {
                return this.maxResponseSizeField;
            }
            set {
                this.maxResponseSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxResponseSizeSpecified {
            get {
                return this.maxResponseSizeFieldSpecified;
            }
            set {
                this.maxResponseSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastResponseSize {
            get {
                return this.lastResponseSizeField;
            }
            set {
                this.lastResponseSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastResponseSizeSpecified {
            get {
                return this.lastResponseSizeFieldSpecified;
            }
            set {
                this.lastResponseSizeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusWSOperationMetricsSimpleIndex {
        
        private uint idField;
        
        private bool idFieldSpecified;
        
        private string serviceEndpointField;
        
        private string portTypeField;
        
        private string operationField;
        
        private uint numberOfRequestsField;
        
        private bool numberOfRequestsFieldSpecified;
        
        private uint numberOfFailedRequestsField;
        
        private bool numberOfFailedRequestsFieldSpecified;
        
        private uint numberOfSuccessfulRequestsField;
        
        private bool numberOfSuccessfulRequestsFieldSpecified;
        
        private uint serviceTimeField;
        
        private bool serviceTimeFieldSpecified;
        
        private uint maxResponseTimeField;
        
        private bool maxResponseTimeFieldSpecified;
        
        private uint lastResponseTimeField;
        
        private bool lastResponseTimeFieldSpecified;
        
        private uint maxRequestSizeField;
        
        private bool maxRequestSizeFieldSpecified;
        
        private uint lastRequestSizeField;
        
        private bool lastRequestSizeFieldSpecified;
        
        private uint maxResponseSizeField;
        
        private bool maxResponseSizeFieldSpecified;
        
        private uint lastResponseSizeField;
        
        private bool lastResponseSizeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string ServiceEndpoint {
            get {
                return this.serviceEndpointField;
            }
            set {
                this.serviceEndpointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PortType {
            get {
                return this.portTypeField;
            }
            set {
                this.portTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint NumberOfRequests {
            get {
                return this.numberOfRequestsField;
            }
            set {
                this.numberOfRequestsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfRequestsSpecified {
            get {
                return this.numberOfRequestsFieldSpecified;
            }
            set {
                this.numberOfRequestsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint NumberOfFailedRequests {
            get {
                return this.numberOfFailedRequestsField;
            }
            set {
                this.numberOfFailedRequestsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfFailedRequestsSpecified {
            get {
                return this.numberOfFailedRequestsFieldSpecified;
            }
            set {
                this.numberOfFailedRequestsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint NumberOfSuccessfulRequests {
            get {
                return this.numberOfSuccessfulRequestsField;
            }
            set {
                this.numberOfSuccessfulRequestsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfSuccessfulRequestsSpecified {
            get {
                return this.numberOfSuccessfulRequestsFieldSpecified;
            }
            set {
                this.numberOfSuccessfulRequestsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ServiceTime {
            get {
                return this.serviceTimeField;
            }
            set {
                this.serviceTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServiceTimeSpecified {
            get {
                return this.serviceTimeFieldSpecified;
            }
            set {
                this.serviceTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint MaxResponseTime {
            get {
                return this.maxResponseTimeField;
            }
            set {
                this.maxResponseTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxResponseTimeSpecified {
            get {
                return this.maxResponseTimeFieldSpecified;
            }
            set {
                this.maxResponseTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastResponseTime {
            get {
                return this.lastResponseTimeField;
            }
            set {
                this.lastResponseTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastResponseTimeSpecified {
            get {
                return this.lastResponseTimeFieldSpecified;
            }
            set {
                this.lastResponseTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint MaxRequestSize {
            get {
                return this.maxRequestSizeField;
            }
            set {
                this.maxRequestSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxRequestSizeSpecified {
            get {
                return this.maxRequestSizeFieldSpecified;
            }
            set {
                this.maxRequestSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastRequestSize {
            get {
                return this.lastRequestSizeField;
            }
            set {
                this.lastRequestSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRequestSizeSpecified {
            get {
                return this.lastRequestSizeFieldSpecified;
            }
            set {
                this.lastRequestSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint MaxResponseSize {
            get {
                return this.maxResponseSizeField;
            }
            set {
                this.maxResponseSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxResponseSizeSpecified {
            get {
                return this.maxResponseSizeFieldSpecified;
            }
            set {
                this.maxResponseSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastResponseSize {
            get {
                return this.lastResponseSizeField;
            }
            set {
                this.lastResponseSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastResponseSizeSpecified {
            get {
                return this.lastResponseSizeFieldSpecified;
            }
            set {
                this.lastResponseSizeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusWSOperationsStatus {
        
        private dmReference wSGatewayField;
        
        private string interfaceField;
        
        private ushort portField;
        
        private bool portFieldSpecified;
        
        private string uRLField;
        
        private string sOAPActionField;
        
        private string sOAPBodyField;
        
        private dmWSOperationStatus statusField;
        
        private bool statusFieldSpecified;
        
        private string remoteURLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference WSGateway {
            get {
                return this.wSGatewayField;
            }
            set {
                this.wSGatewayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Interface {
            get {
                return this.interfaceField;
            }
            set {
                this.interfaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PortSpecified {
            get {
                return this.portFieldSpecified;
            }
            set {
                this.portFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SOAPAction {
            get {
                return this.sOAPActionField;
            }
            set {
                this.sOAPActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SOAPBody {
            get {
                return this.sOAPBodyField;
            }
            set {
                this.sOAPBodyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmWSOperationStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RemoteURL {
            get {
                return this.remoteURLField;
            }
            set {
                this.remoteURLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSOperationStatus {
        
        /// <remarks/>
        Registered,
        
        /// <remarks/>
        Unregistered,
        
        /// <remarks/>
        RegistrationError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusWSOperationsStatusSimpleIndex {
        
        private dmReference wSGatewayField;
        
        private uint gatewayRegistrationIndexField;
        
        private bool gatewayRegistrationIndexFieldSpecified;
        
        private string interfaceField;
        
        private ushort portField;
        
        private bool portFieldSpecified;
        
        private string uRLField;
        
        private string sOAPActionField;
        
        private string sOAPBodyField;
        
        private dmWSOperationStatus statusField;
        
        private bool statusFieldSpecified;
        
        private string remoteURLField;
        
        private dmWSDLBindingProtocol frontsideProtocolField;
        
        private bool frontsideProtocolFieldSpecified;
        
        private dmWSDLBindingProtocol backsideProtocolField;
        
        private bool backsideProtocolFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference WSGateway {
            get {
                return this.wSGatewayField;
            }
            set {
                this.wSGatewayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint GatewayRegistrationIndex {
            get {
                return this.gatewayRegistrationIndexField;
            }
            set {
                this.gatewayRegistrationIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GatewayRegistrationIndexSpecified {
            get {
                return this.gatewayRegistrationIndexFieldSpecified;
            }
            set {
                this.gatewayRegistrationIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Interface {
            get {
                return this.interfaceField;
            }
            set {
                this.interfaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PortSpecified {
            get {
                return this.portFieldSpecified;
            }
            set {
                this.portFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SOAPAction {
            get {
                return this.sOAPActionField;
            }
            set {
                this.sOAPActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SOAPBody {
            get {
                return this.sOAPBodyField;
            }
            set {
                this.sOAPBodyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmWSOperationStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RemoteURL {
            get {
                return this.remoteURLField;
            }
            set {
                this.remoteURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmWSDLBindingProtocol FrontsideProtocol {
            get {
                return this.frontsideProtocolField;
            }
            set {
                this.frontsideProtocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrontsideProtocolSpecified {
            get {
                return this.frontsideProtocolFieldSpecified;
            }
            set {
                this.frontsideProtocolFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmWSDLBindingProtocol BacksideProtocol {
            get {
                return this.backsideProtocolField;
            }
            set {
                this.backsideProtocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BacksideProtocolSpecified {
            get {
                return this.backsideProtocolFieldSpecified;
            }
            set {
                this.backsideProtocolFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSDLBindingProtocol {
        
        /// <remarks/>
        @default,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("soap-11")]
        soap11,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("soap-12")]
        soap12,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http-get")]
        httpget,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http-post")]
        httppost,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusWSRRSubscriptionServiceStatus {
        
        private dmReference subscriptionField;
        
        private string bsrURIField;
        
        private string wSDLNameField;
        
        private string locationField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Subscription {
            get {
                return this.subscriptionField;
            }
            set {
                this.subscriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string BsrURI {
            get {
                return this.bsrURIField;
            }
            set {
                this.bsrURIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string WSDLName {
            get {
                return this.wSDLNameField;
            }
            set {
                this.wSDLNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusWSRRSubscriptionStatus {
        
        private dmReference subscriptionField;
        
        private dmWsrrSubscriptionStatus statusField;
        
        private bool statusFieldSpecified;
        
        private uint lastRefreshField;
        
        private bool lastRefreshFieldSpecified;
        
        private dmWsrrSynchronization methodField;
        
        private bool methodFieldSpecified;
        
        private uint refreshIntervalField;
        
        private bool refreshIntervalFieldSpecified;
        
        private uint countField;
        
        private bool countFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Subscription {
            get {
                return this.subscriptionField;
            }
            set {
                this.subscriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmWsrrSubscriptionStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastRefresh {
            get {
                return this.lastRefreshField;
            }
            set {
                this.lastRefreshField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefreshSpecified {
            get {
                return this.lastRefreshFieldSpecified;
            }
            set {
                this.lastRefreshFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmWsrrSynchronization Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MethodSpecified {
            get {
                return this.methodFieldSpecified;
            }
            set {
                this.methodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RefreshInterval {
            get {
                return this.refreshIntervalField;
            }
            set {
                this.refreshIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RefreshIntervalSpecified {
            get {
                return this.refreshIntervalFieldSpecified;
            }
            set {
                this.refreshIntervalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CountSpecified {
            get {
                return this.countFieldSpecified;
            }
            set {
                this.countFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWsrrSubscriptionStatus {
        
        /// <remarks/>
        Okay,
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        Synchronizing,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWsrrSynchronization {
        
        /// <remarks/>
        manual,
        
        /// <remarks/>
        poll,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusWSWSDLStatus {
        
        private dmReference wSGatewayField;
        
        private string wSDLSourceLocationField;
        
        private dmWSDLStatus statusField;
        
        private bool statusFieldSpecified;
        
        private uint refreshIntervalField;
        
        private bool refreshIntervalFieldSpecified;
        
        private uint lastRefreshField;
        
        private bool lastRefreshFieldSpecified;
        
        private string logField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference WSGateway {
            get {
                return this.wSGatewayField;
            }
            set {
                this.wSGatewayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string WSDLSourceLocation {
            get {
                return this.wSDLSourceLocationField;
            }
            set {
                this.wSDLSourceLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmWSDLStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RefreshInterval {
            get {
                return this.refreshIntervalField;
            }
            set {
                this.refreshIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RefreshIntervalSpecified {
            get {
                return this.refreshIntervalFieldSpecified;
            }
            set {
                this.refreshIntervalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastRefresh {
            get {
                return this.lastRefreshField;
            }
            set {
                this.lastRefreshField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefreshSpecified {
            get {
                return this.lastRefreshFieldSpecified;
            }
            set {
                this.lastRefreshFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Log {
            get {
                return this.logField;
            }
            set {
                this.logField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSDLStatus {
        
        /// <remarks/>
        Processing,
        
        /// <remarks/>
        Okay,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusWSWSDLStatusSimpleIndex {
        
        private dmReference wSGatewayField;
        
        private uint idField;
        
        private bool idFieldSpecified;
        
        private string wSDLSourceLocationField;
        
        private dmWSDLStatus statusField;
        
        private bool statusFieldSpecified;
        
        private uint refreshIntervalField;
        
        private bool refreshIntervalFieldSpecified;
        
        private uint lastRefreshField;
        
        private bool lastRefreshFieldSpecified;
        
        private string logField;
        
        private uint policyExecutionField;
        
        private bool policyExecutionFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference WSGateway {
            get {
                return this.wSGatewayField;
            }
            set {
                this.wSGatewayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string WSDLSourceLocation {
            get {
                return this.wSDLSourceLocationField;
            }
            set {
                this.wSDLSourceLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmWSDLStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RefreshInterval {
            get {
                return this.refreshIntervalField;
            }
            set {
                this.refreshIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RefreshIntervalSpecified {
            get {
                return this.refreshIntervalFieldSpecified;
            }
            set {
                this.refreshIntervalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint LastRefresh {
            get {
                return this.lastRefreshField;
            }
            set {
                this.lastRefreshField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefreshSpecified {
            get {
                return this.lastRefreshFieldSpecified;
            }
            set {
                this.lastRefreshFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Log {
            get {
                return this.logField;
            }
            set {
                this.logField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint PolicyExecution {
            get {
                return this.policyExecutionField;
            }
            set {
                this.policyExecutionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PolicyExecutionSpecified {
            get {
                return this.policyExecutionFieldSpecified;
            }
            set {
                this.policyExecutionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusWebAppFwAccepted {
        
        private string firewallField;
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firewall {
            get {
                return this.firewallField;
            }
            set {
                this.firewallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusWebAppFwRejected {
        
        private string firewallField;
        
        private uint tenSecondsField;
        
        private bool tenSecondsFieldSpecified;
        
        private uint oneMinuteField;
        
        private bool oneMinuteFieldSpecified;
        
        private uint tenMinutesField;
        
        private bool tenMinutesFieldSpecified;
        
        private uint oneHourField;
        
        private bool oneHourFieldSpecified;
        
        private uint oneDayField;
        
        private bool oneDayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firewall {
            get {
                return this.firewallField;
            }
            set {
                this.firewallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenSeconds {
            get {
                return this.tenSecondsField;
            }
            set {
                this.tenSecondsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenSecondsSpecified {
            get {
                return this.tenSecondsFieldSpecified;
            }
            set {
                this.tenSecondsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneMinute {
            get {
                return this.oneMinuteField;
            }
            set {
                this.oneMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneMinuteSpecified {
            get {
                return this.oneMinuteFieldSpecified;
            }
            set {
                this.oneMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint tenMinutes {
            get {
                return this.tenMinutesField;
            }
            set {
                this.tenMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tenMinutesSpecified {
            get {
                return this.tenMinutesFieldSpecified;
            }
            set {
                this.tenMinutesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneHour {
            get {
                return this.oneHourField;
            }
            set {
                this.oneHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneHourSpecified {
            get {
                return this.oneHourFieldSpecified;
            }
            set {
                this.oneHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint oneDay {
            get {
                return this.oneDayField;
            }
            set {
                this.oneDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oneDaySpecified {
            get {
                return this.oneDayFieldSpecified;
            }
            set {
                this.oneDayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class StatusWebSphereJMSStatus {
        
        private dmReference serverField;
        
        private uint receivedMessagesField;
        
        private bool receivedMessagesFieldSpecified;
        
        private uint sentMessagesField;
        
        private bool sentMessagesFieldSpecified;
        
        private uint receivedFaultsField;
        
        private bool receivedFaultsFieldSpecified;
        
        private uint sentFaultsField;
        
        private bool sentFaultsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ReceivedMessages {
            get {
                return this.receivedMessagesField;
            }
            set {
                this.receivedMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReceivedMessagesSpecified {
            get {
                return this.receivedMessagesFieldSpecified;
            }
            set {
                this.receivedMessagesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint SentMessages {
            get {
                return this.sentMessagesField;
            }
            set {
                this.sentMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SentMessagesSpecified {
            get {
                return this.sentMessagesFieldSpecified;
            }
            set {
                this.sentMessagesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ReceivedFaults {
            get {
                return this.receivedFaultsField;
            }
            set {
                this.receivedFaultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReceivedFaultsSpecified {
            get {
                return this.receivedFaultsFieldSpecified;
            }
            set {
                this.receivedFaultsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint SentFaults {
            get {
                return this.sentFaultsField;
            }
            set {
                this.sentFaultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SentFaultsSpecified {
            get {
                return this.sentFaultsFieldSpecified;
            }
            set {
                this.sentFaultsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class AnyModifyElement {
        
        private ModifyConfigBase[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AAAPolicy", typeof(ModifyAAAPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AccessControlList", typeof(ModifyAccessControlList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AppSecurityPolicy", typeof(ModifyAppSecurityPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CRLFetch", typeof(ModifyCRLFetch), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CertMonitor", typeof(ModifyCertMonitor), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CompileOptionsPolicy", typeof(ModifyCompileOptionsPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ConformancePolicy", typeof(ModifyConformancePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CountMonitor", typeof(ModifyCountMonitor), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoCertificate", typeof(ModifyCryptoCertificate), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoFWCred", typeof(ModifyCryptoFWCred), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoIdentCred", typeof(ModifyCryptoIdentCred), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoKerberosKDC", typeof(ModifyCryptoKerberosKDC), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoKerberosKeytab", typeof(ModifyCryptoKerberosKeytab), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoKey", typeof(ModifyCryptoKey), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoProfile", typeof(ModifyCryptoProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoSSKey", typeof(ModifyCryptoSSKey), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoValCred", typeof(ModifyCryptoValCred), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DNSNameService", typeof(ModifyDNSNameService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DocumentCryptoMap", typeof(ModifyDocumentCryptoMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Domain", typeof(ModifyDomain), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DurationMonitor", typeof(ModifyDurationMonitor), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorReportSettings", typeof(ModifyErrorReportSettings), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EthernetInterface", typeof(ModifyEthernetInterface), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FTPFilePollerSourceProtocolHandler", typeof(ModifyFTPFilePollerSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FTPQuoteCommands", typeof(ModifyFTPQuoteCommands), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FTPServerSourceProtocolHandler", typeof(ModifyFTPServerSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FilterAction", typeof(ModifyFilterAction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPInputConversionMap", typeof(ModifyHTTPInputConversionMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPSSourceProtocolHandler", typeof(ModifyHTTPSSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPService", typeof(ModifyHTTPService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPSourceProtocolHandler", typeof(ModifyHTTPSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPUserAgent", typeof(ModifyHTTPUserAgent), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HostAlias", typeof(ModifyHostAlias), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IMSConnect", typeof(ModifyIMSConnect), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IMSConnectSourceProtocolHandler", typeof(ModifyIMSConnectSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ImportPackage", typeof(ModifyImportPackage), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IncludeConfig", typeof(ModifyIncludeConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoadBalancerGroup", typeof(ModifyLoadBalancerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogLabel", typeof(ModifyLogLabel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogTarget", typeof(ModifyLogTarget), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQGW", typeof(ModifyMQGW), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQQM", typeof(ModifyMQQM), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQQMGroup", typeof(ModifyMQQMGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQSourceProtocolHandler", typeof(ModifyMQSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQhost", typeof(ModifyMQhost), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQproxy", typeof(ModifyMQproxy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MTOMPolicy", typeof(ModifyMTOMPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Matching", typeof(ModifyMatching), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MessageMatching", typeof(ModifyMessageMatching), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MessageType", typeof(ModifyMessageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MgmtInterface", typeof(ModifyMgmtInterface), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MultiProtocolGateway", typeof(ModifyMultiProtocolGateway), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NFSClientSettings", typeof(ModifyNFSClientSettings), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NFSDynamicMounts", typeof(ModifyNFSDynamicMounts), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NFSFilePollerSourceProtocolHandler", typeof(ModifyNFSFilePollerSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NFSStaticMount", typeof(ModifyNFSStaticMount), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NTPService", typeof(ModifyNTPService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NameValueProfile", typeof(ModifyNameValueProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NetworkSettings", typeof(ModifyNetworkSettings), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PeerGroup", typeof(ModifyPeerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PolicyAttachments", typeof(ModifyPolicyAttachments), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PolicyParameters", typeof(ModifyPolicyParameters), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProcessingMetadata", typeof(ModifyProcessingMetadata), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RADIUSSettings", typeof(ModifyRADIUSSettings), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RBMSettings", typeof(ModifyRBMSettings), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMAction", typeof(ModifySLMAction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMCredClass", typeof(ModifySLMCredClass), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMPolicy", typeof(ModifySLMPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMRsrcClass", typeof(ModifySLMRsrcClass), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMSchedule", typeof(ModifySLMSchedule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SNMPSettings", typeof(ModifySNMPSettings), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SOAPHeaderDisposition", typeof(ModifySOAPHeaderDisposition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SQLDataSource", typeof(ModifySQLDataSource), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSHService", typeof(ModifySSHService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxyProfile", typeof(ModifySSLProxyProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxyService", typeof(ModifySSLProxyService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SchemaExceptionMap", typeof(ModifySchemaExceptionMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ShellAlias", typeof(ModifyShellAlias), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SimpleCountMonitor", typeof(ModifySimpleCountMonitor), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StatelessTCPSourceProtocolHandler", typeof(ModifyStatelessTCPSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Statistics", typeof(ModifyStatistics), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicy", typeof(ModifyStylePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicyAction", typeof(ModifyStylePolicyAction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicyRule", typeof(ModifyStylePolicyRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SystemSettings", typeof(ModifySystemSettings), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TAM", typeof(ModifyTAM), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TCPProxyService", typeof(ModifyTCPProxyService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TFIMEndpoint", typeof(ModifyTFIMEndpoint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TelnetService", typeof(ModifyTelnetService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Throttler", typeof(ModifyThrottler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TibcoEMSServer", typeof(ModifyTibcoEMSServer), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TibcoEMSSourceProtocolHandler", typeof(ModifyTibcoEMSSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TimeSettings", typeof(ModifyTimeSettings), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UDDIRegistry", typeof(ModifyUDDIRegistry), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UDDISubscription", typeof(ModifyUDDISubscription), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLMap", typeof(ModifyURLMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRefreshPolicy", typeof(ModifyURLRefreshPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRewritePolicy", typeof(ModifyURLRewritePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("User", typeof(ModifyUser), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserGroup", typeof(ModifyUserGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("VLANInterface", typeof(ModifyVLANInterface), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSEndpointRewritePolicy", typeof(ModifyWSEndpointRewritePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSGateway", typeof(ModifyWSGateway), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRRServer", typeof(ModifyWSRRServer), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRRSubscription", typeof(ModifyWSRRSubscription), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSStylePolicy", typeof(ModifyWSStylePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSStylePolicyRule", typeof(ModifyWSStylePolicyRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebAppErrorHandlingPolicy", typeof(ModifyWebAppErrorHandlingPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebAppFW", typeof(ModifyWebAppFW), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebAppRequest", typeof(ModifyWebAppRequest), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebAppResponse", typeof(ModifyWebAppResponse), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebAppSessionPolicy", typeof(ModifyWebAppSessionPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebGUI", typeof(ModifyWebGUI), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebServiceMonitor", typeof(ModifyWebServiceMonitor), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebServicesAgent", typeof(ModifyWebServicesAgent), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebSphereJMSServer", typeof(ModifyWebSphereJMSServer), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebSphereJMSSourceProtocolHandler", typeof(ModifyWebSphereJMSSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XACMLPDP", typeof(ModifyXACMLPDP), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLFirewallService", typeof(ModifyXMLFirewallService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(ModifyXMLManager), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XPathRoutingMap", typeof(ModifyXPathRoutingMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XSLCoprocService", typeof(ModifyXSLCoprocService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XSLProxyService", typeof(ModifyXSLProxyService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XTCProtocolHandler", typeof(ModifyXTCProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xmltrace", typeof(Modifyxmltrace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ModifyConfigBase[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyAAAPolicy : ModifyAccessControl {
        
        private object[] itemsField;
        
        private ItemsChoiceType108[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Authenticate", typeof(dmAAAPAuthenticate), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Authorize", typeof(dmAAAPAuthorize), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AuthorizedCounter", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoSValve", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EnforceSOAPActor", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ExtractIdentity", typeof(dmAAAPExtractIdentity), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ExtractResource", typeof(dmAAAPExtractResource), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LDAPVersion", typeof(dmLDAPVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LDAPsuffix", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LTPAAttributes", typeof(dmLTPAUserAttributeNameAndValue), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogAllowed", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogAllowedLevel", typeof(dmLogLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogRejected", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogRejectedLevel", typeof(dmLogLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MapCredentials", typeof(dmAAAPMapCredentials), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MapResource", typeof(dmAAAPMapResource), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NamespaceMapping", typeof(dmNamespaceMapping), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PingIdentityCompatibility", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PostProcess", typeof(dmAAAPPostProcess), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RejectedCounter", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SAML2MetadataFile", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("SAMLAttribute", typeof(dmSAMLAttributeNameAndValue), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SAMLSigningAlg", typeof(dmCryptoSigningAlgorithm), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SAMLSigningCert", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SAMLSigningHashAlg", typeof(dmCryptoHashAlgorithm), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SAMLSigningKey", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SAMLSourceIDMappingFile", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("SAMLValcred", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TransactionPriority", typeof(dmAAATransactionPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSSecActorRoleID", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSSecureConversationCryptoKey", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType108[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmAAAPAuthenticate {
        
        private dmAAAPAuthenticateType aUMethodField;
        
        private string aUCustomURLField;
        
        private string aUMapURLField;
        
        private string aUHostField;
        
        private System.Nullable<ushort> aUPortField;
        
        private dmReference aUSSLValcredField;
        
        private dmAAACacheType aUCacheAllowField;
        
        private System.Nullable<uint> aUCacheTTLField;
        
        private string aUKerberosPrincipalField;
        
        private string aUKerberosPasswordField;
        
        private string aUClearTrustServerURLField;
        
        private string aUClearTrustApplicationField;
        
        private string aUSAMLArtifactResponderField;
        
        private System.Nullable<dmToggle> aUKerberosVerifySignatureField;
        
        private string aUNetegrityBaseURIField;
        
        private string aUSAMLAuthQueryServerField;
        
        private System.Nullable<dmSAMLVersion> aUSAMLVersionField;
        
        private string aULDAPPrefixField;
        
        private string aULDAPSuffixField;
        
        private dmReference aULDAPLoadBalanceGroupField;
        
        private dmReference aUKerberosKeytabField;
        
        private string aUWSTrustURLField;
        
        private string aUSAML2IssuerField;
        
        private dmReference aUSignerValcredField;
        
        private string aUSignedXPathField;
        
        private dmReference aUSSLProxyProfileField;
        
        private dmReference aUNetegrityConfigField;
        
        private string aULDAPBindDNField;
        
        private string aULDAPBindPasswordField;
        
        private string aULDAPSearchAttributeField;
        
        private dmLTPATokenVersion aULTPATokenVersionsBitmapField;
        
        private string aULTPAKeyFileField;
        
        private string aULTPAKeyFilePasswordField;
        
        private string aULTPAStashFileField;
        
        private dmReference aUBinaryTokenX509ValcredField;
        
        private dmReference aUTAMServerField;
        
        private System.Nullable<dmToggle> aUAllowRemoteTokenReferenceField;
        
        private string aURemoteTokenProcessServiceField;
        
        private System.Nullable<dmCryptoWSSXVersion> aUWSTrustVersionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmAAAPAuthenticateType AUMethod {
            get {
                return this.aUMethodField;
            }
            set {
                this.aUMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string AUCustomURL {
            get {
                return this.aUCustomURLField;
            }
            set {
                this.aUCustomURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string AUMapURL {
            get {
                return this.aUMapURLField;
            }
            set {
                this.aUMapURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AUHost {
            get {
                return this.aUHostField;
            }
            set {
                this.aUHostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> AUPort {
            get {
                return this.aUPortField;
            }
            set {
                this.aUPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference AUSSLValcred {
            get {
                return this.aUSSLValcredField;
            }
            set {
                this.aUSSLValcredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmAAACacheType AUCacheAllow {
            get {
                return this.aUCacheAllowField;
            }
            set {
                this.aUCacheAllowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> AUCacheTTL {
            get {
                return this.aUCacheTTLField;
            }
            set {
                this.aUCacheTTLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AUKerberosPrincipal {
            get {
                return this.aUKerberosPrincipalField;
            }
            set {
                this.aUKerberosPrincipalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AUKerberosPassword {
            get {
                return this.aUKerberosPasswordField;
            }
            set {
                this.aUKerberosPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string AUClearTrustServerURL {
            get {
                return this.aUClearTrustServerURLField;
            }
            set {
                this.aUClearTrustServerURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AUClearTrustApplication {
            get {
                return this.aUClearTrustApplicationField;
            }
            set {
                this.aUClearTrustApplicationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AUSAMLArtifactResponder {
            get {
                return this.aUSAMLArtifactResponderField;
            }
            set {
                this.aUSAMLArtifactResponderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> AUKerberosVerifySignature {
            get {
                return this.aUKerberosVerifySignatureField;
            }
            set {
                this.aUKerberosVerifySignatureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AUNetegrityBaseURI {
            get {
                return this.aUNetegrityBaseURIField;
            }
            set {
                this.aUNetegrityBaseURIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AUSAMLAuthQueryServer {
            get {
                return this.aUSAMLAuthQueryServerField;
            }
            set {
                this.aUSAMLAuthQueryServerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmSAMLVersion> AUSAMLVersion {
            get {
                return this.aUSAMLVersionField;
            }
            set {
                this.aUSAMLVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AULDAPPrefix {
            get {
                return this.aULDAPPrefixField;
            }
            set {
                this.aULDAPPrefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AULDAPSuffix {
            get {
                return this.aULDAPSuffixField;
            }
            set {
                this.aULDAPSuffixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference AULDAPLoadBalanceGroup {
            get {
                return this.aULDAPLoadBalanceGroupField;
            }
            set {
                this.aULDAPLoadBalanceGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference AUKerberosKeytab {
            get {
                return this.aUKerberosKeytabField;
            }
            set {
                this.aUKerberosKeytabField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AUWSTrustURL {
            get {
                return this.aUWSTrustURLField;
            }
            set {
                this.aUWSTrustURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AUSAML2Issuer {
            get {
                return this.aUSAML2IssuerField;
            }
            set {
                this.aUSAML2IssuerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference AUSignerValcred {
            get {
                return this.aUSignerValcredField;
            }
            set {
                this.aUSignerValcredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AUSignedXPath {
            get {
                return this.aUSignedXPathField;
            }
            set {
                this.aUSignedXPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference AUSSLProxyProfile {
            get {
                return this.aUSSLProxyProfileField;
            }
            set {
                this.aUSSLProxyProfileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference AUNetegrityConfig {
            get {
                return this.aUNetegrityConfigField;
            }
            set {
                this.aUNetegrityConfigField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AULDAPBindDN {
            get {
                return this.aULDAPBindDNField;
            }
            set {
                this.aULDAPBindDNField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AULDAPBindPassword {
            get {
                return this.aULDAPBindPasswordField;
            }
            set {
                this.aULDAPBindPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AULDAPSearchAttribute {
            get {
                return this.aULDAPSearchAttributeField;
            }
            set {
                this.aULDAPSearchAttributeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmLTPATokenVersion AULTPATokenVersionsBitmap {
            get {
                return this.aULTPATokenVersionsBitmapField;
            }
            set {
                this.aULTPATokenVersionsBitmapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string AULTPAKeyFile {
            get {
                return this.aULTPAKeyFileField;
            }
            set {
                this.aULTPAKeyFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AULTPAKeyFilePassword {
            get {
                return this.aULTPAKeyFilePasswordField;
            }
            set {
                this.aULTPAKeyFilePasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string AULTPAStashFile {
            get {
                return this.aULTPAStashFileField;
            }
            set {
                this.aULTPAStashFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference AUBinaryTokenX509Valcred {
            get {
                return this.aUBinaryTokenX509ValcredField;
            }
            set {
                this.aUBinaryTokenX509ValcredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference AUTAMServer {
            get {
                return this.aUTAMServerField;
            }
            set {
                this.aUTAMServerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> AUAllowRemoteTokenReference {
            get {
                return this.aUAllowRemoteTokenReferenceField;
            }
            set {
                this.aUAllowRemoteTokenReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string AURemoteTokenProcessService {
            get {
                return this.aURemoteTokenProcessServiceField;
            }
            set {
                this.aURemoteTokenProcessServiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmCryptoWSSXVersion> AUWSTrustVersion {
            get {
                return this.aUWSTrustVersionField;
            }
            set {
                this.aUWSTrustVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmAAAPAuthenticateType {
        
        /// <remarks/>
        xmlfile,
        
        /// <remarks/>
        ldap,
        
        /// <remarks/>
        tivoli,
        
        /// <remarks/>
        netegrity,
        
        /// <remarks/>
        oblix,
        
        /// <remarks/>
        cleartrust,
        
        /// <remarks/>
        radius,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("client-ssl")]
        clientssl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("validate-signer")]
        validatesigner,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("saml-signature")]
        samlsignature,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("saml-artifact")]
        samlartifact,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("saml-authen-query")]
        samlauthenquery,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ws-trust")]
        wstrust,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ws-secureconversation")]
        wssecureconversation,
        
        /// <remarks/>
        token,
        
        /// <remarks/>
        kerberos,
        
        /// <remarks/>
        ltpa,
        
        /// <remarks/>
        binarytokenx509,
        
        /// <remarks/>
        custom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmAAACacheType {
        
        /// <remarks/>
        absolute,
        
        /// <remarks/>
        disabled,
        
        /// <remarks/>
        maximum,
        
        /// <remarks/>
        minimum,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSAMLVersion {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2.0")]
        Item20,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1.1")]
        Item11,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1.0")]
        Item10,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmLTPATokenVersion {
        
        private dmToggle lTPAField;
        
        private bool lTPAFieldSpecified;
        
        private dmToggle lTPA2Field;
        
        private bool lTPA2FieldSpecified;
        
        private dmToggle lTPADominoField;
        
        private bool lTPADominoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle LTPA {
            get {
                return this.lTPAField;
            }
            set {
                this.lTPAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LTPASpecified {
            get {
                return this.lTPAFieldSpecified;
            }
            set {
                this.lTPAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle LTPA2 {
            get {
                return this.lTPA2Field;
            }
            set {
                this.lTPA2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LTPA2Specified {
            get {
                return this.lTPA2FieldSpecified;
            }
            set {
                this.lTPA2FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle LTPADomino {
            get {
                return this.lTPADominoField;
            }
            set {
                this.lTPADominoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LTPADominoSpecified {
            get {
                return this.lTPADominoFieldSpecified;
            }
            set {
                this.lTPADominoFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCryptoWSSXVersion {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1.3")]
        Item13,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1.2")]
        Item12,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1.1")]
        Item11,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmAAAPAuthorize {
        
        private dmAAAPAuthorizeType aZMethodField;
        
        private string aZCustomURLField;
        
        private string aZMapURLField;
        
        private string aZHostField;
        
        private System.Nullable<ushort> aZPortField;
        
        private string aZLDAPGroupField;
        
        private dmReference aZValcredField;
        
        private string aZSAMLURLField;
        
        private System.Nullable<dmSAMLMatch> aZSAMLTypeField;
        
        private string aZSAMLXPathField;
        
        private string aZSAMLNameQualifierField;
        
        private dmAAACacheType aZCacheAllowField;
        
        private System.Nullable<uint> aZCacheTTLField;
        
        private string aZNetegrityBaseURIField;
        
        private string aZNetegrityOpNameExtensionField;
        
        private string aZClearTrustServerURLField;
        
        private System.Nullable<dmSAMLVersion> aZSAMLVersionField;
        
        private dmReference aZLDAPLoadBalanceGroupField;
        
        private string aZLDAPBindDNField;
        
        private string aZLDAPBindPasswordField;
        
        private string aZLDAPGroupAttributeField;
        
        private dmReference aZSSLProxyProfileField;
        
        private dmReference aZNetegrityConfigField;
        
        private System.Nullable<dmLDAPSearchScope> aZLDAPSearchScopeField;
        
        private string aZLDAPSearchFilterField;
        
        private System.Nullable<dmXACMLVersion> aZXACMLVersionField;
        
        private System.Nullable<dmXACMLPEPType> aZXACMLPEPTypeField;
        
        private System.Nullable<dmToggle> aZXACMLUseOnBoxPDPField;
        
        private dmReference aZXACMLPDPField;
        
        private string aZXACMLExternalPDPUrlField;
        
        private System.Nullable<dmAAAXACMLBindingMethod> aZXACMLBindingMethodField;
        
        private string aZXACMLBindingObjectField;
        
        private string aZXACMLBindingXSLField;
        
        private string aZXACMLCustomObligationField;
        
        private System.Nullable<dmToggle> aZXACMLUseSAML2Field;
        
        private dmReference aZTAMServerField;
        
        private System.Nullable<dmTAMActionType> aZTAMDefaultActionField;
        
        private string aZTAMActionResourceMapField;
        
        private System.Nullable<dmToggle> aZXACMLUseSOAPField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmAAAPAuthorizeType AZMethod {
            get {
                return this.aZMethodField;
            }
            set {
                this.aZMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string AZCustomURL {
            get {
                return this.aZCustomURLField;
            }
            set {
                this.aZCustomURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string AZMapURL {
            get {
                return this.aZMapURLField;
            }
            set {
                this.aZMapURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AZHost {
            get {
                return this.aZHostField;
            }
            set {
                this.aZHostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> AZPort {
            get {
                return this.aZPortField;
            }
            set {
                this.aZPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AZLDAPGroup {
            get {
                return this.aZLDAPGroupField;
            }
            set {
                this.aZLDAPGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference AZValcred {
            get {
                return this.aZValcredField;
            }
            set {
                this.aZValcredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string AZSAMLURL {
            get {
                return this.aZSAMLURLField;
            }
            set {
                this.aZSAMLURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmSAMLMatch> AZSAMLType {
            get {
                return this.aZSAMLTypeField;
            }
            set {
                this.aZSAMLTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AZSAMLXPath {
            get {
                return this.aZSAMLXPathField;
            }
            set {
                this.aZSAMLXPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AZSAMLNameQualifier {
            get {
                return this.aZSAMLNameQualifierField;
            }
            set {
                this.aZSAMLNameQualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmAAACacheType AZCacheAllow {
            get {
                return this.aZCacheAllowField;
            }
            set {
                this.aZCacheAllowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> AZCacheTTL {
            get {
                return this.aZCacheTTLField;
            }
            set {
                this.aZCacheTTLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AZNetegrityBaseURI {
            get {
                return this.aZNetegrityBaseURIField;
            }
            set {
                this.aZNetegrityBaseURIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AZNetegrityOpNameExtension {
            get {
                return this.aZNetegrityOpNameExtensionField;
            }
            set {
                this.aZNetegrityOpNameExtensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string AZClearTrustServerURL {
            get {
                return this.aZClearTrustServerURLField;
            }
            set {
                this.aZClearTrustServerURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmSAMLVersion> AZSAMLVersion {
            get {
                return this.aZSAMLVersionField;
            }
            set {
                this.aZSAMLVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference AZLDAPLoadBalanceGroup {
            get {
                return this.aZLDAPLoadBalanceGroupField;
            }
            set {
                this.aZLDAPLoadBalanceGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AZLDAPBindDN {
            get {
                return this.aZLDAPBindDNField;
            }
            set {
                this.aZLDAPBindDNField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AZLDAPBindPassword {
            get {
                return this.aZLDAPBindPasswordField;
            }
            set {
                this.aZLDAPBindPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AZLDAPGroupAttribute {
            get {
                return this.aZLDAPGroupAttributeField;
            }
            set {
                this.aZLDAPGroupAttributeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference AZSSLProxyProfile {
            get {
                return this.aZSSLProxyProfileField;
            }
            set {
                this.aZSSLProxyProfileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference AZNetegrityConfig {
            get {
                return this.aZNetegrityConfigField;
            }
            set {
                this.aZNetegrityConfigField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmLDAPSearchScope> AZLDAPSearchScope {
            get {
                return this.aZLDAPSearchScopeField;
            }
            set {
                this.aZLDAPSearchScopeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AZLDAPSearchFilter {
            get {
                return this.aZLDAPSearchFilterField;
            }
            set {
                this.aZLDAPSearchFilterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmXACMLVersion> AZXACMLVersion {
            get {
                return this.aZXACMLVersionField;
            }
            set {
                this.aZXACMLVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmXACMLPEPType> AZXACMLPEPType {
            get {
                return this.aZXACMLPEPTypeField;
            }
            set {
                this.aZXACMLPEPTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> AZXACMLUseOnBoxPDP {
            get {
                return this.aZXACMLUseOnBoxPDPField;
            }
            set {
                this.aZXACMLUseOnBoxPDPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference AZXACMLPDP {
            get {
                return this.aZXACMLPDPField;
            }
            set {
                this.aZXACMLPDPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string AZXACMLExternalPDPUrl {
            get {
                return this.aZXACMLExternalPDPUrlField;
            }
            set {
                this.aZXACMLExternalPDPUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmAAAXACMLBindingMethod> AZXACMLBindingMethod {
            get {
                return this.aZXACMLBindingMethodField;
            }
            set {
                this.aZXACMLBindingMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AZXACMLBindingObject {
            get {
                return this.aZXACMLBindingObjectField;
            }
            set {
                this.aZXACMLBindingObjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string AZXACMLBindingXSL {
            get {
                return this.aZXACMLBindingXSLField;
            }
            set {
                this.aZXACMLBindingXSLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string AZXACMLCustomObligation {
            get {
                return this.aZXACMLCustomObligationField;
            }
            set {
                this.aZXACMLCustomObligationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> AZXACMLUseSAML2 {
            get {
                return this.aZXACMLUseSAML2Field;
            }
            set {
                this.aZXACMLUseSAML2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference AZTAMServer {
            get {
                return this.aZTAMServerField;
            }
            set {
                this.aZTAMServerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmTAMActionType> AZTAMDefaultAction {
            get {
                return this.aZTAMDefaultActionField;
            }
            set {
                this.aZTAMDefaultActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string AZTAMActionResourceMap {
            get {
                return this.aZTAMActionResourceMapField;
            }
            set {
                this.aZTAMActionResourceMapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> AZXACMLUseSOAP {
            get {
                return this.aZXACMLUseSOAPField;
            }
            set {
                this.aZXACMLUseSOAPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmAAAPAuthorizeType {
        
        /// <remarks/>
        anyauthenticated,
        
        /// <remarks/>
        passthrough,
        
        /// <remarks/>
        tivoli,
        
        /// <remarks/>
        netegrity,
        
        /// <remarks/>
        oblix,
        
        /// <remarks/>
        cleartrust,
        
        /// <remarks/>
        custom,
        
        /// <remarks/>
        ldap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("saml-authz")]
        samlauthz,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("saml-attr")]
        samlattr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("use-authen-attr")]
        useauthenattr,
        
        /// <remarks/>
        xacml,
        
        /// <remarks/>
        xmlfile,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSAMLMatch {
        
        /// <remarks/>
        xpath,
        
        /// <remarks/>
        any,
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("any-value")]
        anyvalue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("all-values")]
        allvalues,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmLDAPSearchScope {
        
        /// <remarks/>
        subtree,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("one-level")]
        onelevel,
        
        /// <remarks/>
        @base,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmXACMLVersion {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2.0")]
        Item20,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1.0")]
        Item10,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmXACMLPEPType {
        
        /// <remarks/>
        @base,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deny-biased")]
        denybiased,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("permit-biased")]
        permitbiased,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmAAAXACMLBindingMethod {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dp-pdp")]
        dppdp,
        
        /// <remarks/>
        custom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmTAMActionType {
        
        /// <remarks/>
        T,
        
        /// <remarks/>
        c,
        
        /// <remarks/>
        g,
        
        /// <remarks/>
        m,
        
        /// <remarks/>
        d,
        
        /// <remarks/>
        b,
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        v,
        
        /// <remarks/>
        a,
        
        /// <remarks/>
        B,
        
        /// <remarks/>
        tt,
        
        /// <remarks/>
        r,
        
        /// <remarks/>
        x,
        
        /// <remarks/>
        l,
        
        /// <remarks/>
        N,
        
        /// <remarks/>
        W,
        
        /// <remarks/>
        A,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        _WebService_i,
        
        /// <remarks/>
        _PDMQ_D,
        
        /// <remarks/>
        _PDMQ_E,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmAAAPExtractIdentity {
        
        private dmAAAPEIBitmap eIBitmapField;
        
        private string eICustomURLField;
        
        private string eIXPathField;
        
        private dmReference eISignerDNValcredField;
        
        private string eICookieNameField;
        
        private string eIBasicAuthRealmField;
        
        private System.Nullable<dmToggle> eIUseWSSecField;
        
        private dmReference eIMetadataField;
        
        private System.Nullable<dmToggle> eIAllowRemoteTokenReferenceField;
        
        private string eIRemoteTokenProcessServiceField;
        
        private System.Nullable<dmPasswordRetrievalMechanism> eIPasswordRetrievalMechanismField;
        
        private string eIPasswordRetrievalCustomURLField;
        
        private string eIPasswordRetrievalAAAInfoURLField;
        
        private dmReference eISSLProxyProfileField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmAAAPEIBitmap EIBitmap {
            get {
                return this.eIBitmapField;
            }
            set {
                this.eIBitmapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string EICustomURL {
            get {
                return this.eICustomURLField;
            }
            set {
                this.eICustomURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string EIXPath {
            get {
                return this.eIXPathField;
            }
            set {
                this.eIXPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference EISignerDNValcred {
            get {
                return this.eISignerDNValcredField;
            }
            set {
                this.eISignerDNValcredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string EICookieName {
            get {
                return this.eICookieNameField;
            }
            set {
                this.eICookieNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string EIBasicAuthRealm {
            get {
                return this.eIBasicAuthRealmField;
            }
            set {
                this.eIBasicAuthRealmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> EIUseWSSec {
            get {
                return this.eIUseWSSecField;
            }
            set {
                this.eIUseWSSecField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference EIMetadata {
            get {
                return this.eIMetadataField;
            }
            set {
                this.eIMetadataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> EIAllowRemoteTokenReference {
            get {
                return this.eIAllowRemoteTokenReferenceField;
            }
            set {
                this.eIAllowRemoteTokenReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string EIRemoteTokenProcessService {
            get {
                return this.eIRemoteTokenProcessServiceField;
            }
            set {
                this.eIRemoteTokenProcessServiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmPasswordRetrievalMechanism> EIPasswordRetrievalMechanism {
            get {
                return this.eIPasswordRetrievalMechanismField;
            }
            set {
                this.eIPasswordRetrievalMechanismField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string EIPasswordRetrievalCustomURL {
            get {
                return this.eIPasswordRetrievalCustomURLField;
            }
            set {
                this.eIPasswordRetrievalCustomURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string EIPasswordRetrievalAAAInfoURL {
            get {
                return this.eIPasswordRetrievalAAAInfoURLField;
            }
            set {
                this.eIPasswordRetrievalAAAInfoURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference EISSLProxyProfile {
            get {
                return this.eISSLProxyProfileField;
            }
            set {
                this.eISSLProxyProfileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmAAAPEIBitmap {
        
        private dmToggle httpbasicauthField;
        
        private bool httpbasicauthFieldSpecified;
        
        private dmToggle wssecusernameField;
        
        private bool wssecusernameFieldSpecified;
        
        private dmToggle wssecderivedkeyField;
        
        private bool wssecderivedkeyFieldSpecified;
        
        private dmToggle wssecbinarytokenField;
        
        private bool wssecbinarytokenFieldSpecified;
        
        private dmToggle wssecureconversationField;
        
        private bool wssecureconversationFieldSpecified;
        
        private dmToggle wstrustField;
        
        private bool wstrustFieldSpecified;
        
        private dmToggle kerberosField;
        
        private bool kerberosFieldSpecified;
        
        private dmToggle kerberosspnegoField;
        
        private bool kerberosspnegoFieldSpecified;
        
        private dmToggle clientsslField;
        
        private bool clientsslFieldSpecified;
        
        private dmToggle samlattrnameField;
        
        private bool samlattrnameFieldSpecified;
        
        private dmToggle samlauthennameField;
        
        private bool samlauthennameFieldSpecified;
        
        private dmToggle samlartifactField;
        
        private bool samlartifactFieldSpecified;
        
        private dmToggle clientipaddressField;
        
        private bool clientipaddressFieldSpecified;
        
        private dmToggle signerdnField;
        
        private bool signerdnFieldSpecified;
        
        private dmToggle tokenField;
        
        private bool tokenFieldSpecified;
        
        private dmToggle cookietokenField;
        
        private bool cookietokenFieldSpecified;
        
        private dmToggle ltpaField;
        
        private bool ltpaFieldSpecified;
        
        private dmToggle metadataField;
        
        private bool metadataFieldSpecified;
        
        private dmToggle customField;
        
        private bool customFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("http-basic-auth", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle httpbasicauth {
            get {
                return this.httpbasicauthField;
            }
            set {
                this.httpbasicauthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool httpbasicauthSpecified {
            get {
                return this.httpbasicauthFieldSpecified;
            }
            set {
                this.httpbasicauthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("wssec-username", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle wssecusername {
            get {
                return this.wssecusernameField;
            }
            set {
                this.wssecusernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wssecusernameSpecified {
            get {
                return this.wssecusernameFieldSpecified;
            }
            set {
                this.wssecusernameFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("wssec-derived-key", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle wssecderivedkey {
            get {
                return this.wssecderivedkeyField;
            }
            set {
                this.wssecderivedkeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wssecderivedkeySpecified {
            get {
                return this.wssecderivedkeyFieldSpecified;
            }
            set {
                this.wssecderivedkeyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("wssec-binary-token", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle wssecbinarytoken {
            get {
                return this.wssecbinarytokenField;
            }
            set {
                this.wssecbinarytokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wssecbinarytokenSpecified {
            get {
                return this.wssecbinarytokenFieldSpecified;
            }
            set {
                this.wssecbinarytokenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ws-secure-conversation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle wssecureconversation {
            get {
                return this.wssecureconversationField;
            }
            set {
                this.wssecureconversationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wssecureconversationSpecified {
            get {
                return this.wssecureconversationFieldSpecified;
            }
            set {
                this.wssecureconversationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ws-trust", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle wstrust {
            get {
                return this.wstrustField;
            }
            set {
                this.wstrustField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wstrustSpecified {
            get {
                return this.wstrustFieldSpecified;
            }
            set {
                this.wstrustFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle kerberos {
            get {
                return this.kerberosField;
            }
            set {
                this.kerberosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kerberosSpecified {
            get {
                return this.kerberosFieldSpecified;
            }
            set {
                this.kerberosFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("kerberos-spnego", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle kerberosspnego {
            get {
                return this.kerberosspnegoField;
            }
            set {
                this.kerberosspnegoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kerberosspnegoSpecified {
            get {
                return this.kerberosspnegoFieldSpecified;
            }
            set {
                this.kerberosspnegoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("client-ssl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle clientssl {
            get {
                return this.clientsslField;
            }
            set {
                this.clientsslField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clientsslSpecified {
            get {
                return this.clientsslFieldSpecified;
            }
            set {
                this.clientsslFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("saml-attr-name", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle samlattrname {
            get {
                return this.samlattrnameField;
            }
            set {
                this.samlattrnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool samlattrnameSpecified {
            get {
                return this.samlattrnameFieldSpecified;
            }
            set {
                this.samlattrnameFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("saml-authen-name", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle samlauthenname {
            get {
                return this.samlauthennameField;
            }
            set {
                this.samlauthennameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool samlauthennameSpecified {
            get {
                return this.samlauthennameFieldSpecified;
            }
            set {
                this.samlauthennameFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("saml-artifact", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle samlartifact {
            get {
                return this.samlartifactField;
            }
            set {
                this.samlartifactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool samlartifactSpecified {
            get {
                return this.samlartifactFieldSpecified;
            }
            set {
                this.samlartifactFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("client-ip-address", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle clientipaddress {
            get {
                return this.clientipaddressField;
            }
            set {
                this.clientipaddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clientipaddressSpecified {
            get {
                return this.clientipaddressFieldSpecified;
            }
            set {
                this.clientipaddressFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("signer-dn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle signerdn {
            get {
                return this.signerdnField;
            }
            set {
                this.signerdnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool signerdnSpecified {
            get {
                return this.signerdnFieldSpecified;
            }
            set {
                this.signerdnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tokenSpecified {
            get {
                return this.tokenFieldSpecified;
            }
            set {
                this.tokenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cookie-token", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle cookietoken {
            get {
                return this.cookietokenField;
            }
            set {
                this.cookietokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cookietokenSpecified {
            get {
                return this.cookietokenFieldSpecified;
            }
            set {
                this.cookietokenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle ltpa {
            get {
                return this.ltpaField;
            }
            set {
                this.ltpaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ltpaSpecified {
            get {
                return this.ltpaFieldSpecified;
            }
            set {
                this.ltpaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool metadataSpecified {
            get {
                return this.metadataFieldSpecified;
            }
            set {
                this.metadataFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle custom {
            get {
                return this.customField;
            }
            set {
                this.customField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool customSpecified {
            get {
                return this.customFieldSpecified;
            }
            set {
                this.customFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmPasswordRetrievalMechanism {
        
        /// <remarks/>
        xmlfile,
        
        /// <remarks/>
        custom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmAAAPExtractResource {
        
        private dmAAAPERBitmap eRBitmapField;
        
        private string eRXPathField;
        
        private dmReference eRMetadataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmAAAPERBitmap ERBitmap {
            get {
                return this.eRBitmapField;
            }
            set {
                this.eRBitmapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ERXPath {
            get {
                return this.eRXPathField;
            }
            set {
                this.eRXPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference ERMetadata {
            get {
                return this.eRMetadataField;
            }
            set {
                this.eRMetadataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmAAAPERBitmap {
        
        private dmToggle targeturlField;
        
        private bool targeturlFieldSpecified;
        
        private dmToggle originalurlField;
        
        private bool originalurlFieldSpecified;
        
        private dmToggle requesturiField;
        
        private bool requesturiFieldSpecified;
        
        private dmToggle requestopnameField;
        
        private bool requestopnameFieldSpecified;
        
        private dmToggle httpmethodField;
        
        private bool httpmethodFieldSpecified;
        
        private dmToggle xPathField;
        
        private bool xPathFieldSpecified;
        
        private dmToggle metadataField;
        
        private bool metadataFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("target-url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle targeturl {
            get {
                return this.targeturlField;
            }
            set {
                this.targeturlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool targeturlSpecified {
            get {
                return this.targeturlFieldSpecified;
            }
            set {
                this.targeturlFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("original-url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle originalurl {
            get {
                return this.originalurlField;
            }
            set {
                this.originalurlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool originalurlSpecified {
            get {
                return this.originalurlFieldSpecified;
            }
            set {
                this.originalurlFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("request-uri", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle requesturi {
            get {
                return this.requesturiField;
            }
            set {
                this.requesturiField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool requesturiSpecified {
            get {
                return this.requesturiFieldSpecified;
            }
            set {
                this.requesturiFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("request-opname", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle requestopname {
            get {
                return this.requestopnameField;
            }
            set {
                this.requestopnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool requestopnameSpecified {
            get {
                return this.requestopnameFieldSpecified;
            }
            set {
                this.requestopnameFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("http-method", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle httpmethod {
            get {
                return this.httpmethodField;
            }
            set {
                this.httpmethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool httpmethodSpecified {
            get {
                return this.httpmethodFieldSpecified;
            }
            set {
                this.httpmethodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle XPath {
            get {
                return this.xPathField;
            }
            set {
                this.xPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XPathSpecified {
            get {
                return this.xPathFieldSpecified;
            }
            set {
                this.xPathFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool metadataSpecified {
            get {
                return this.metadataFieldSpecified;
            }
            set {
                this.metadataFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmLDAPVersion {
        
        /// <remarks/>
        v2,
        
        /// <remarks/>
        v3,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmLTPAUserAttributeNameAndValue {
        
        private string lTPAUserAttributeNameField;
        
        private System.Nullable<dmLTPAUserAttributeType> lTPAUserAttributeTypeField;
        
        private string lTPAUserAttributeStaticValueField;
        
        private string lTPAUserAttributeXPathValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LTPAUserAttributeName {
            get {
                return this.lTPAUserAttributeNameField;
            }
            set {
                this.lTPAUserAttributeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmLTPAUserAttributeType> LTPAUserAttributeType {
            get {
                return this.lTPAUserAttributeTypeField;
            }
            set {
                this.lTPAUserAttributeTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LTPAUserAttributeStaticValue {
            get {
                return this.lTPAUserAttributeStaticValueField;
            }
            set {
                this.lTPAUserAttributeStaticValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LTPAUserAttributeXPathValue {
            get {
                return this.lTPAUserAttributeXPathValueField;
            }
            set {
                this.lTPAUserAttributeXPathValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmLTPAUserAttributeType {
        
        /// <remarks/>
        @static,
        
        /// <remarks/>
        xpath,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmAAAPMapCredentials {
        
        private dmAAAPMapCredentialType mCMethodField;
        
        private string mCCustomURLField;
        
        private string mCMapURLField;
        
        private string mCMapXPathField;
        
        private dmReference mCTFIMEndpointField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmAAAPMapCredentialType MCMethod {
            get {
                return this.mCMethodField;
            }
            set {
                this.mCMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string MCCustomURL {
            get {
                return this.mCCustomURLField;
            }
            set {
                this.mCCustomURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string MCMapURL {
            get {
                return this.mCMapURLField;
            }
            set {
                this.mCMapURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string MCMapXPath {
            get {
                return this.mCMapXPathField;
            }
            set {
                this.mCMapXPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference MCTFIMEndpoint {
            get {
                return this.mCTFIMEndpointField;
            }
            set {
                this.mCTFIMEndpointField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmAAAPMapCredentialType {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        custom,
        
        /// <remarks/>
        xmlfile,
        
        /// <remarks/>
        xpath,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ws-secureconversation")]
        wssecureconversation,
        
        /// <remarks/>
        TFIM,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmAAAPMapResource {
        
        private dmAAAPMapResourceType mRMethodField;
        
        private string mRCustomURLField;
        
        private string mRMapURLField;
        
        private string mRMapXPathField;
        
        private System.Nullable<dmTAMObjectSpacePrefix> mRTAMMapField;
        
        private string mRTAMInstancePrefixField;
        
        private string mRTAMWebSEALDynURLFileField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmAAAPMapResourceType MRMethod {
            get {
                return this.mRMethodField;
            }
            set {
                this.mRMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string MRCustomURL {
            get {
                return this.mRCustomURLField;
            }
            set {
                this.mRCustomURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string MRMapURL {
            get {
                return this.mRMapURLField;
            }
            set {
                this.mRMapURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string MRMapXPath {
            get {
                return this.mRMapXPathField;
            }
            set {
                this.mRMapXPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmTAMObjectSpacePrefix> MRTAMMap {
            get {
                return this.mRTAMMapField;
            }
            set {
                this.mRTAMMapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string MRTAMInstancePrefix {
            get {
                return this.mRTAMInstancePrefixField;
            }
            set {
                this.mRTAMInstancePrefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string MRTAMWebSEALDynURLFile {
            get {
                return this.mRTAMWebSEALDynURLFileField;
            }
            set {
                this.mRTAMWebSEALDynURLFileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmAAAPMapResourceType {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        custom,
        
        /// <remarks/>
        xmlfile,
        
        /// <remarks/>
        xpath,
        
        /// <remarks/>
        tivoli,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmTAMObjectSpacePrefix {
        
        /// <remarks/>
        TFIM,
        
        /// <remarks/>
        TAMBI,
        
        /// <remarks/>
        WebSEAL,
        
        /// <remarks/>
        Custom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmNamespaceMapping {
        
        private string prefixField;
        
        private string uRIField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Prefix {
            get {
                return this.prefixField;
            }
            set {
                this.prefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string URI {
            get {
                return this.uRIField;
            }
            set {
                this.uRIField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmAAAPPostProcess {
        
        private dmToggle pPEnabledField;
        
        private string pPCustomURLField;
        
        private System.Nullable<dmToggle> pPSAMLAuthAssertionField;
        
        private string pPSAMLServerNameField;
        
        private string pPSAMLNameQualifierField;
        
        private System.Nullable<dmToggle> pPKerberosTicketField;
        
        private string pPKerberosClientField;
        
        private string pPKerberosClientPasswordField;
        
        private string pPKerberosServerField;
        
        private System.Nullable<dmToggle> pPWSTrustField;
        
        private System.Nullable<dmToggle> pPTimestampField;
        
        private System.Nullable<uint> pPTimestampExpiryField;
        
        private System.Nullable<dmToggle> pPAllowRenewalField;
        
        private System.Nullable<dmSAMLVersion> pPSAMLVersionField;
        
        private System.Nullable<dmToggle> pPSAMLSendSLOField;
        
        private string pPSAMLSLOEndpointField;
        
        private dmReference pPSSLProxyProfileField;
        
        private System.Nullable<dmToggle> pPWSUsernameTokenField;
        
        private System.Nullable<dmWSUsernameTokenPasswordType> pPWSUsernameTokenPasswordTypeField;
        
        private System.Nullable<uint> pPSAMLValidityField;
        
        private System.Nullable<uint> pPSAMLSkewField;
        
        private System.Nullable<dmToggle> pPWSUsernameTokenIncludePwdField;
        
        private System.Nullable<dmToggle> pPLTPAField;
        
        private System.Nullable<dmLTPATokenVersionNonBitmap> pPLTPAVersionField;
        
        private System.Nullable<uint> pPLTPAExpiryField;
        
        private string pPLTPAKeyFileField;
        
        private string pPLTPAKeyFilePasswordField;
        
        private string pPLTPAStashFileField;
        
        private System.Nullable<dmToggle> pPKerberosSPNEGOTokenField;
        
        private System.Nullable<dmCryptoKerberosBstValueType> pPKerberosBstValueTypeField;
        
        private System.Nullable<dmToggle> pPSAMLUseWSSecField;
        
        private dmReference pPKerberosClientKeytabField;
        
        private System.Nullable<dmToggle> pPUseWSSecField;
        
        private string pPActorRoleIDField;
        
        private System.Nullable<dmToggle> pPTFIMTokenMappingField;
        
        private dmReference pPTFIMEndpointField;
        
        private System.Nullable<dmToggle> pPWSDerivedKeyUsernameTokenField;
        
        private System.Nullable<uint> pPWSDerivedKeyUsernameTokenIterationsField;
        
        private System.Nullable<dmToggle> pPWSUsernameTokenAllowReplacementField;
        
        private System.Nullable<dmTFIMTokenReplaceMode> pPTFIMReplaceMethodField;
        
        private System.Nullable<dmTFIMRetrieveMode> pPTFIMRetrieveModeField;
        
        private System.Nullable<dmCryptoHMACSigningAlgorithm> pPHMACSigningAlgField;
        
        private System.Nullable<dmCryptoHashAlgorithm> pPSigningHashAlgField;
        
        private System.Nullable<dmToggle> pPWSTrustHeaderField;
        
        private System.Nullable<dmWSSCKeySourceType> pPWSSCKeySourceField;
        
        private dmReference pPSharedSecretKeyField;
        
        private System.Nullable<uint> pPWSTrustRenewalWaitField;
        
        private System.Nullable<dmToggle> pPWSTrustNewInstanceField;
        
        private System.Nullable<dmToggle> pPWSTrustNewKeyField;
        
        private System.Nullable<dmToggle> pPWSTrustNeverExpireField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle PPEnabled {
            get {
                return this.pPEnabledField;
            }
            set {
                this.pPEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string PPCustomURL {
            get {
                return this.pPCustomURLField;
            }
            set {
                this.pPCustomURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPSAMLAuthAssertion {
            get {
                return this.pPSAMLAuthAssertionField;
            }
            set {
                this.pPSAMLAuthAssertionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PPSAMLServerName {
            get {
                return this.pPSAMLServerNameField;
            }
            set {
                this.pPSAMLServerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PPSAMLNameQualifier {
            get {
                return this.pPSAMLNameQualifierField;
            }
            set {
                this.pPSAMLNameQualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPKerberosTicket {
            get {
                return this.pPKerberosTicketField;
            }
            set {
                this.pPKerberosTicketField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PPKerberosClient {
            get {
                return this.pPKerberosClientField;
            }
            set {
                this.pPKerberosClientField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PPKerberosClientPassword {
            get {
                return this.pPKerberosClientPasswordField;
            }
            set {
                this.pPKerberosClientPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PPKerberosServer {
            get {
                return this.pPKerberosServerField;
            }
            set {
                this.pPKerberosServerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPWSTrust {
            get {
                return this.pPWSTrustField;
            }
            set {
                this.pPWSTrustField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPTimestamp {
            get {
                return this.pPTimestampField;
            }
            set {
                this.pPTimestampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> PPTimestampExpiry {
            get {
                return this.pPTimestampExpiryField;
            }
            set {
                this.pPTimestampExpiryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPAllowRenewal {
            get {
                return this.pPAllowRenewalField;
            }
            set {
                this.pPAllowRenewalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmSAMLVersion> PPSAMLVersion {
            get {
                return this.pPSAMLVersionField;
            }
            set {
                this.pPSAMLVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPSAMLSendSLO {
            get {
                return this.pPSAMLSendSLOField;
            }
            set {
                this.pPSAMLSendSLOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PPSAMLSLOEndpoint {
            get {
                return this.pPSAMLSLOEndpointField;
            }
            set {
                this.pPSAMLSLOEndpointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference PPSSLProxyProfile {
            get {
                return this.pPSSLProxyProfileField;
            }
            set {
                this.pPSSLProxyProfileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPWSUsernameToken {
            get {
                return this.pPWSUsernameTokenField;
            }
            set {
                this.pPWSUsernameTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmWSUsernameTokenPasswordType> PPWSUsernameTokenPasswordType {
            get {
                return this.pPWSUsernameTokenPasswordTypeField;
            }
            set {
                this.pPWSUsernameTokenPasswordTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> PPSAMLValidity {
            get {
                return this.pPSAMLValidityField;
            }
            set {
                this.pPSAMLValidityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> PPSAMLSkew {
            get {
                return this.pPSAMLSkewField;
            }
            set {
                this.pPSAMLSkewField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPWSUsernameTokenIncludePwd {
            get {
                return this.pPWSUsernameTokenIncludePwdField;
            }
            set {
                this.pPWSUsernameTokenIncludePwdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPLTPA {
            get {
                return this.pPLTPAField;
            }
            set {
                this.pPLTPAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmLTPATokenVersionNonBitmap> PPLTPAVersion {
            get {
                return this.pPLTPAVersionField;
            }
            set {
                this.pPLTPAVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> PPLTPAExpiry {
            get {
                return this.pPLTPAExpiryField;
            }
            set {
                this.pPLTPAExpiryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string PPLTPAKeyFile {
            get {
                return this.pPLTPAKeyFileField;
            }
            set {
                this.pPLTPAKeyFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PPLTPAKeyFilePassword {
            get {
                return this.pPLTPAKeyFilePasswordField;
            }
            set {
                this.pPLTPAKeyFilePasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string PPLTPAStashFile {
            get {
                return this.pPLTPAStashFileField;
            }
            set {
                this.pPLTPAStashFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPKerberosSPNEGOToken {
            get {
                return this.pPKerberosSPNEGOTokenField;
            }
            set {
                this.pPKerberosSPNEGOTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmCryptoKerberosBstValueType> PPKerberosBstValueType {
            get {
                return this.pPKerberosBstValueTypeField;
            }
            set {
                this.pPKerberosBstValueTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPSAMLUseWSSec {
            get {
                return this.pPSAMLUseWSSecField;
            }
            set {
                this.pPSAMLUseWSSecField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference PPKerberosClientKeytab {
            get {
                return this.pPKerberosClientKeytabField;
            }
            set {
                this.pPKerberosClientKeytabField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPUseWSSec {
            get {
                return this.pPUseWSSecField;
            }
            set {
                this.pPUseWSSecField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PPActorRoleID {
            get {
                return this.pPActorRoleIDField;
            }
            set {
                this.pPActorRoleIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPTFIMTokenMapping {
            get {
                return this.pPTFIMTokenMappingField;
            }
            set {
                this.pPTFIMTokenMappingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference PPTFIMEndpoint {
            get {
                return this.pPTFIMEndpointField;
            }
            set {
                this.pPTFIMEndpointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPWSDerivedKeyUsernameToken {
            get {
                return this.pPWSDerivedKeyUsernameTokenField;
            }
            set {
                this.pPWSDerivedKeyUsernameTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> PPWSDerivedKeyUsernameTokenIterations {
            get {
                return this.pPWSDerivedKeyUsernameTokenIterationsField;
            }
            set {
                this.pPWSDerivedKeyUsernameTokenIterationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPWSUsernameTokenAllowReplacement {
            get {
                return this.pPWSUsernameTokenAllowReplacementField;
            }
            set {
                this.pPWSUsernameTokenAllowReplacementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmTFIMTokenReplaceMode> PPTFIMReplaceMethod {
            get {
                return this.pPTFIMReplaceMethodField;
            }
            set {
                this.pPTFIMReplaceMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmTFIMRetrieveMode> PPTFIMRetrieveMode {
            get {
                return this.pPTFIMRetrieveModeField;
            }
            set {
                this.pPTFIMRetrieveModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmCryptoHMACSigningAlgorithm> PPHMACSigningAlg {
            get {
                return this.pPHMACSigningAlgField;
            }
            set {
                this.pPHMACSigningAlgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmCryptoHashAlgorithm> PPSigningHashAlg {
            get {
                return this.pPSigningHashAlgField;
            }
            set {
                this.pPSigningHashAlgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPWSTrustHeader {
            get {
                return this.pPWSTrustHeaderField;
            }
            set {
                this.pPWSTrustHeaderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmWSSCKeySourceType> PPWSSCKeySource {
            get {
                return this.pPWSSCKeySourceField;
            }
            set {
                this.pPWSSCKeySourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference PPSharedSecretKey {
            get {
                return this.pPSharedSecretKeyField;
            }
            set {
                this.pPSharedSecretKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> PPWSTrustRenewalWait {
            get {
                return this.pPWSTrustRenewalWaitField;
            }
            set {
                this.pPWSTrustRenewalWaitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPWSTrustNewInstance {
            get {
                return this.pPWSTrustNewInstanceField;
            }
            set {
                this.pPWSTrustNewInstanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPWSTrustNewKey {
            get {
                return this.pPWSTrustNewKeyField;
            }
            set {
                this.pPWSTrustNewKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> PPWSTrustNeverExpire {
            get {
                return this.pPWSTrustNeverExpireField;
            }
            set {
                this.pPWSTrustNeverExpireField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSUsernameTokenPasswordType {
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        Digest,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmLTPATokenVersionNonBitmap {
        
        /// <remarks/>
        LTPA,
        
        /// <remarks/>
        LTPA1FIPS,
        
        /// <remarks/>
        LTPA2,
        
        /// <remarks/>
        LTPADomino,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCryptoKerberosBstValueType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#Kerberosv5_AP" +
            "_REQ")]
        httpdocsoasisopenorgwssoasiswsskerberostokenprofile11Kerberosv5_AP_REQ,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#GSS_Kerberosv" +
            "5_AP_REQ")]
        httpdocsoasisopenorgwssoasiswsskerberostokenprofile11GSS_Kerberosv5_AP_REQ,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#Kerberosv5_AP" +
            "_REQ1510")]
        httpdocsoasisopenorgwssoasiswsskerberostokenprofile11Kerberosv5_AP_REQ1510,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#GSS_Kerberosv" +
            "5_AP_REQ1510")]
        httpdocsoasisopenorgwssoasiswsskerberostokenprofile11GSS_Kerberosv5_AP_REQ1510,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#Kerberosv5_AP" +
            "_REQ4120")]
        httpdocsoasisopenorgwssoasiswsskerberostokenprofile11Kerberosv5_AP_REQ4120,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#GSS_Kerberosv" +
            "5_AP_REQ4120")]
        httpdocsoasisopenorgwssoasiswsskerberostokenprofile11GSS_Kerberosv5_AP_REQ4120,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://docs.oasis-open.org/wss/2005/xx/oasis-2005xx-wss-kerberos-token-profile-1." +
            "1#Kerberosv5_AP_REQ")]
        httpdocsoasisopenorgwss2005xxoasis2005xxwsskerberostokenprofile11Kerberosv5_AP_REQ,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://docs.oasis-open.org/wss/2005/xx/oasis-2005xx-wss-kerberos-token-profile-1." +
            "1#GSS_Kerberosv5_AP_REQ")]
        httpdocsoasisopenorgwss2005xxoasis2005xxwsskerberostokenprofile11GSS_Kerberosv5_AP_REQ,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://www.docs.oasis-open.org/wss/2004/07/oasis-000000-wss-kerberos-token-profil" +
            "e-1.0#Kerberosv5_AP_REQ")]
        httpwwwdocsoasisopenorgwss200407oasis000000wsskerberostokenprofile10Kerberosv5_AP_REQ,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmTFIMTokenReplaceMode {
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        replace,
        
        /// <remarks/>
        preserve,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmTFIMRetrieveMode {
        
        /// <remarks/>
        CallTFIM,
        
        /// <remarks/>
        FromMC,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCryptoHMACSigningAlgorithm {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hmac-sha1")]
        hmacsha1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hmac-sha224")]
        hmacsha224,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hmac-sha256")]
        hmacsha256,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hmac-sha384")]
        hmacsha384,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hmac-sha512")]
        hmacsha512,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hmac-ripemd160")]
        hmacripemd160,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hmac-md5")]
        hmacmd5,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCryptoHashAlgorithm {
        
        /// <remarks/>
        sha1,
        
        /// <remarks/>
        sha256,
        
        /// <remarks/>
        sha512,
        
        /// <remarks/>
        ripemd160,
        
        /// <remarks/>
        sha224,
        
        /// <remarks/>
        sha384,
        
        /// <remarks/>
        md5,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSSCKeySourceType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("client-entropy")]
        cliententropy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in-kerberos")]
        inkerberos,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in-encryptedkey")]
        inencryptedkey,
        
        /// <remarks/>
        @static,
        
        /// <remarks/>
        random,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmSAMLAttributeNameAndValue {
        
        private string uRIField;
        
        private string localNameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string URI {
            get {
                return this.uRIField;
            }
            set {
                this.uRIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LocalName {
            get {
                return this.localNameField;
            }
            set {
                this.localNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCryptoSigningAlgorithm {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rsa-sha1")]
        rsasha1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dsa-sha1")]
        dsasha1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rsa-sha256")]
        rsasha256,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rsa-sha384")]
        rsasha384,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rsa-sha512")]
        rsasha512,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rsa-ripemd160")]
        rsaripemd160,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rsa-md5")]
        rsamd5,
        
        /// <remarks/>
        rsa,
        
        /// <remarks/>
        dsa,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmAAATransactionPriority {
        
        private string credentialField;
        
        private dmSchedulerPriority priorityField;
        
        private System.Nullable<dmToggle> authorizationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Credential {
            get {
                return this.credentialField;
            }
            set {
                this.credentialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmSchedulerPriority Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> Authorization {
            get {
                return this.authorizationField;
            }
            set {
                this.authorizationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSchedulerPriority {
        
        /// <remarks/>
        unknown,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high-min")]
        highmin,
        
        /// <remarks/>
        high,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high-max")]
        highmax,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("normal-min")]
        normalmin,
        
        /// <remarks/>
        normal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("normal-max")]
        normalmax,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("low-min")]
        lowmin,
        
        /// <remarks/>
        low,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("low-max")]
        lowmax,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType108 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Authenticate")]
        Authenticate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Authorize")]
        Authorize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AuthorizedCounter")]
        AuthorizedCounter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoSValve")]
        DoSValve,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EnforceSOAPActor")]
        EnforceSOAPActor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ExtractIdentity")]
        ExtractIdentity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ExtractResource")]
        ExtractResource,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPVersion")]
        LDAPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPsuffix")]
        LDAPsuffix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LTPAAttributes")]
        LTPAAttributes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogAllowed")]
        LogAllowed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogAllowedLevel")]
        LogAllowedLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogRejected")]
        LogRejected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogRejectedLevel")]
        LogRejectedLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MapCredentials")]
        MapCredentials,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MapResource")]
        MapResource,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NamespaceMapping")]
        NamespaceMapping,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PingIdentityCompatibility")]
        PingIdentityCompatibility,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PostProcess")]
        PostProcess,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RejectedCounter")]
        RejectedCounter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SAML2MetadataFile")]
        SAML2MetadataFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SAMLAttribute")]
        SAMLAttribute,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SAMLSigningAlg")]
        SAMLSigningAlg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SAMLSigningCert")]
        SAMLSigningCert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SAMLSigningHashAlg")]
        SAMLSigningHashAlg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SAMLSigningKey")]
        SAMLSigningKey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SAMLSourceIDMappingFile")]
        SAMLSourceIDMappingFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SAMLValcred")]
        SAMLValcred,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TransactionPriority")]
        TransactionPriority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSSecActorRoleID")]
        WSSecActorRoleID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSSecureConversationCryptoKey")]
        WSSecureConversationCryptoKey,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySOAPHeaderDisposition))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyProcessingMetadata))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyXACMLPDP))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyRADIUSSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyAAAPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDomain))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyTFIMEndpoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyTAM))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyRBMSettings))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyAccessControl : ModifyConfigBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyIMSConnect))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyPolicyAttachments))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyPolicyParameters))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWSRRServer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyFTPQuoteCommands))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMTOMPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyAppSecurityPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWebAppFW))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWebAppRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWebAppResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyNameValueProfile))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySimpleCountMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWebAppErrorHandlingPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWebAppSessionPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWebServiceSubscription))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWSRRSubscription))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyUDDISubscription))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyUDDIRegistry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySQLDataSource))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyNFSDynamicMounts))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyNFSStaticMount))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyNFSClientSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySLMPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyPeerGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySLMAction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySLMSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySLMRsrcClass))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySLMCredClass))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWebServicesAgent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyIMSConnectSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyFilePollerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyFTPFilePollerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyNFSFilePollerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyJMSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWebSphereJMSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyTibcoEMSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyStatelessTCPSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyXTCProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMQSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyFTPServerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyHTTPSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyHTTPSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyGatewayBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWSGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMultiProtocolGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyLoadBalancerGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyIncludeConfig))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyImportPackage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyAccessControlList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDynamicXMLContentMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDynamicSchema))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySchemaExceptionMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDynamicStylesheet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDocumentCryptoMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyXPathRoutingMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyHTTPInputConversionMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWebServiceMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMessageFlowControl))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyFilterAction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMessageMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDurationMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCountMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMessageType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMessageMatching))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyEventlog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyLogTarget))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyLogLabel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCrypto))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoKerberosKeytab))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoKerberosKDC))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySSLProxyProfile))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoProfile))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoFWCred))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoValCred))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoIdentCred))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoCertificate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoSSKey))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoKey))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCRLFetch))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCertMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyAccessControl))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySOAPHeaderDisposition))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyProcessingMetadata))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyXACMLPDP))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyRADIUSSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyAAAPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDomain))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyTFIMEndpoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyTAM))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyRBMSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Modifyxmltrace))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyXMLManager))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyJMSServer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWebSphereJMSServer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyTibcoEMSServer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMQConfiguration))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMQGW))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMQQMBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMQQMGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMQQM))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMQproxy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMQhost))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMatching))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWSEndpointRewritePolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyURLRewritePolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCompileOptionsPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyURLRefreshPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyURLMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWSStylePolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyStylePolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyStylePolicyRuleBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWSStylePolicyRule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyStylePolicyRule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyStylePolicyAction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDeviceManagementService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMgmtInterface))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWebGUI))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySSHService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyTelnetService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyXSLCoprocService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyHTTPProxyService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyXMLFirewallService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyXSLProxyService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySSLProxyService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyTCPProxyService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyHTTPService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyConformancePolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyIPInterface))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyVLANInterface))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyEthernetInterface))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyHTTPUserAgent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyNetworkConfiguration))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyHostAlias))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDNSNameService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyNTPService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyNetworkSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyShellAlias))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyThrottler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyStatistics))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyUserGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyUser))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySNMPSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDeviceSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyTimeSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyErrorReportSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySystemSettings))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyConfigBase {
        
        private dmAdminState mAdminStateField;
        
        private bool mAdminStateFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmAdminState mAdminState {
            get {
                return this.mAdminStateField;
            }
            set {
                this.mAdminStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mAdminStateSpecified {
            get {
                return this.mAdminStateFieldSpecified;
            }
            set {
                this.mAdminStateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyIMSConnect : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType154[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ClientID", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Datastore", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EBCDICConversion", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EncodingScheme", typeof(dmEncodingScheme), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Exit", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GenerateClientIDPrefix", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Group", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HostName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IRMTimer", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LtermName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Password", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Port", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TranCode", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType154[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmEncodingScheme {
        
        /// <remarks/>
        NotSet,
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        UTF8,
        
        /// <remarks/>
        UCS2,
        
        /// <remarks/>
        UTF16,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType154 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ClientID")]
        ClientID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Datastore")]
        Datastore,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EBCDICConversion")]
        EBCDICConversion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EncodingScheme")]
        EncodingScheme,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Exit")]
        Exit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GenerateClientIDPrefix")]
        GenerateClientIDPrefix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Group")]
        Group,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HostName")]
        HostName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IRMTimer")]
        IRMTimer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LtermName")]
        LtermName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Password")]
        Password,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Port")]
        Port,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TranCode")]
        TranCode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserName")]
        UserName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyPolicyAttachments : ModifyConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EnforcementMode", typeof(dmPolicyEnforcementMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ExternalPolicy", typeof(dmExternalAttachedPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IgnoredPolicyAttachmentPoints", typeof(dmPolicyAttachmentPoint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PolicyReferences", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmPolicyEnforcementMode {
        
        /// <remarks/>
        filter,
        
        /// <remarks/>
        enforce,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmExternalAttachedPolicy {
        
        private System.Nullable<dmWSDLComponentTypeRestricted> externalAttachWSDLComponentTypeField;
        
        private string externalAttachWSDLComponentValueField;
        
        private string externalAttachPolicyURLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmWSDLComponentTypeRestricted> ExternalAttachWSDLComponentType {
            get {
                return this.externalAttachWSDLComponentTypeField;
            }
            set {
                this.externalAttachWSDLComponentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExternalAttachWSDLComponentValue {
            get {
                return this.externalAttachWSDLComponentValueField;
            }
            set {
                this.externalAttachWSDLComponentValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string ExternalAttachPolicyURL {
            get {
                return this.externalAttachPolicyURLField;
            }
            set {
                this.externalAttachPolicyURLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSDLComponentTypeRestricted {
        
        /// <remarks/>
        service,
        
        /// <remarks/>
        port,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmPolicyAttachmentPoint {
        
        private System.Nullable<dmWSDLComponentTypeRestricted> policyAttachWSDLComponentTypeField;
        
        private string policyAttachWSDLComponentValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmWSDLComponentTypeRestricted> PolicyAttachWSDLComponentType {
            get {
                return this.policyAttachWSDLComponentTypeField;
            }
            set {
                this.policyAttachWSDLComponentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PolicyAttachWSDLComponentValue {
            get {
                return this.policyAttachWSDLComponentValueField;
            }
            set {
                this.policyAttachWSDLComponentValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyPolicyParameters : ModifyConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PolicyParameter", typeof(dmPolicyParameter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmPolicyParameter {
        
        private string parameterNameField;
        
        private string parameterValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ParameterName {
            get {
                return this.parameterNameField;
            }
            set {
                this.parameterNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ParameterValue {
            get {
                return this.parameterValueField;
            }
            set {
                this.parameterValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyWSRRServer : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType153[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Password", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SoapURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Username", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType153[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType153 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Password")]
        Password,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SoapURL")]
        SoapURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Username")]
        Username,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyFTPQuoteCommands : ModifyConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FTPQuotedCommands", typeof(dmFTPQuotedCommand), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmFTPQuotedCommand {
        
        private string quotedCommandField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string QuotedCommand {
            get {
                return this.quotedCommandField;
            }
            set {
                this.quotedCommandField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyMTOMPolicy : ModifyConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IncludeContentType", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mode", typeof(dmMtomMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rule", typeof(dmMtomRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmMtomMode {
        
        /// <remarks/>
        encode,
        
        /// <remarks/>
        decode,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmMtomRule {
        
        private string xPathField;
        
        private string contentTypeField;
        
        private string contentIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string XPath {
            get {
                return this.xPathField;
            }
            set {
                this.xPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ContentID {
            get {
                return this.contentIDField;
            }
            set {
                this.contentIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyAppSecurityPolicy : ModifyConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ErrorMaps", typeof(dmPolicyMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestMaps", typeof(dmWebAppRequestPolicyMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseMaps", typeof(dmWebAppResponsePolicyMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmPolicyMap {
        
        private dmReference matchField;
        
        private dmReference ruleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Match {
            get {
                return this.matchField;
            }
            set {
                this.matchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Rule {
            get {
                return this.ruleField;
            }
            set {
                this.ruleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWebAppRequestPolicyMap {
        
        private dmReference matchField;
        
        private dmReference ruleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Match {
            get {
                return this.matchField;
            }
            set {
                this.matchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Rule {
            get {
                return this.ruleField;
            }
            set {
                this.ruleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWebAppResponsePolicyMap {
        
        private dmReference matchField;
        
        private dmReference ruleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Match {
            get {
                return this.matchField;
            }
            set {
                this.matchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Rule {
            get {
                return this.ruleField;
            }
            set {
                this.ruleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyWebAppFW : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType152[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BackHTTPVersion", typeof(dmHTTPVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackPersistentTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugHistory", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugMode", typeof(dmDebugMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugTrigger", typeof(dmMSDebugTriggerType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoChunkedUpload", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoHostRewriting", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FollowRedirects", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontHTTPVersion", typeof(dmHTTPVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontPersistentTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontSide", typeof(dmFrontSide), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPClientIPLabel", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Priority", typeof(dmSchedulerPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemotePort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestSideSecurity", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseSideSecurity", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxyProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StreamOutputToBack", typeof(dmQuarantineMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StreamOutputToFront", typeof(dmQuarantineMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URINormalization", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRewritePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType152[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmHTTPVersion {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("HTTP/1.0")]
        HTTP10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("HTTP/1.1")]
        HTTP11,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmDebugMode {
        
        /// <remarks/>
        on,
        
        /// <remarks/>
        off,
        
        /// <remarks/>
        unbounded,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmMSDebugTriggerType {
        
        private string clientIPField;
        
        private string inURLMatchField;
        
        private string outURLMatchField;
        
        private System.Nullable<dmProcessingType> ruleTypeField;
        
        private string ruleMatchField;
        
        private string xPathField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ClientIP {
            get {
                return this.clientIPField;
            }
            set {
                this.clientIPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string InURLMatch {
            get {
                return this.inURLMatchField;
            }
            set {
                this.inURLMatchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string OutURLMatch {
            get {
                return this.outURLMatchField;
            }
            set {
                this.outURLMatchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmProcessingType> RuleType {
            get {
                return this.ruleTypeField;
            }
            set {
                this.ruleTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string RuleMatch {
            get {
                return this.ruleMatchField;
            }
            set {
                this.ruleMatchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string XPath {
            get {
                return this.xPathField;
            }
            set {
                this.xPathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmProcessingType {
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        response,
        
        /// <remarks/>
        request,
        
        /// <remarks/>
        call,
        
        /// <remarks/>
        error,
        
        /// <remarks/>
        scheduled,
        
        /// <remarks/>
        lbhealth,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmFrontSide {
        
        private string localAddressField;
        
        private ushort localPortField;
        
        private System.Nullable<dmToggle> useSSLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LocalAddress {
            get {
                return this.localAddressField;
            }
            set {
                this.localAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort LocalPort {
            get {
                return this.localPortField;
            }
            set {
                this.localPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> UseSSL {
            get {
                return this.useSSLField;
            }
            set {
                this.useSSLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmQuarantineMode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buffer-until-verification")]
        bufferuntilverification,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stream-until-infraction")]
        streamuntilinfraction,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType152 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackHTTPVersion")]
        BackHTTPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackPersistentTimeout")]
        BackPersistentTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackTimeout")]
        BackTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugHistory")]
        DebugHistory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugMode")]
        DebugMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugTrigger")]
        DebugTrigger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoChunkedUpload")]
        DoChunkedUpload,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoHostRewriting")]
        DoHostRewriting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorPolicy")]
        ErrorPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FollowRedirects")]
        FollowRedirects,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontHTTPVersion")]
        FrontHTTPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontPersistentTimeout")]
        FrontPersistentTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontSide")]
        FrontSide,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontTimeout")]
        FrontTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPClientIPLabel")]
        HTTPClientIPLabel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Priority")]
        Priority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteAddress")]
        RemoteAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemotePort")]
        RemotePort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestSideSecurity")]
        RequestSideSecurity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseSideSecurity")]
        ResponseSideSecurity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxyProfile")]
        SSLProxyProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StreamOutputToBack")]
        StreamOutputToBack,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StreamOutputToFront")]
        StreamOutputToFront,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylePolicy")]
        StylePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URINormalization")]
        URINormalization,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URLRewritePolicy")]
        URLRewritePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyWebAppRequest : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType151[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AAA", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ContentTypes", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CookieProfile", typeof(dmCookieProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HeaderGNVC", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxBodySize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxURISize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MinBodySize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MultipartFormData", typeof(dmMultipartFormDataProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NonXMLPolicy", typeof(dmWebAppNonXMLPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NonXMLRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OKMethods", typeof(dmHTTPRequestMethods), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OKVersions", typeof(dmHTTPVersionMask), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PolicyType", typeof(dmSatisfactionPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QueryStringGNVC", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QueryStringPolicy", typeof(dmARDType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RateLimiter", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SQLInjection", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLPolicy", typeof(dmARDType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SessionManagementProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URIFilterDotDot", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URIFilterExe", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URIFilterFragment", typeof(dmURIFragmentFixupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URIFilterUnicode", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UrlEncodedGNVC", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLPolicy", typeof(dmWebAppXMLPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType151[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmCookieProfile {
        
        private System.Nullable<dmARDType> cookiePolicyField;
        
        private System.Nullable<dmCookieProcessingType> typeField;
        
        private string keyField;
        
        private System.Nullable<dmToggle> iPinWatermarkField;
        
        private dmReference cookieGNVCField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmARDType> CookiePolicy {
            get {
                return this.cookiePolicyField;
            }
            set {
                this.cookiePolicyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmCookieProcessingType> Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> IPinWatermark {
            get {
                return this.iPinWatermarkField;
            }
            set {
                this.iPinWatermarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference CookieGNVC {
            get {
                return this.cookieGNVCField;
            }
            set {
                this.cookieGNVCField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmARDType {
        
        /// <remarks/>
        allow,
        
        /// <remarks/>
        require,
        
        /// <remarks/>
        deny,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCookieProcessingType {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        sign,
        
        /// <remarks/>
        encrypt,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmMultipartFormDataProfile {
        
        private System.Nullable<uint> maxPartsField;
        
        private System.Nullable<uint> maxSizePerPartField;
        
        private System.Nullable<uint> maxSizeField;
        
        private System.Nullable<dmToggle> contentTypeRestrictedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> MaxParts {
            get {
                return this.maxPartsField;
            }
            set {
                this.maxPartsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> MaxSizePerPart {
            get {
                return this.maxSizePerPartField;
            }
            set {
                this.maxSizePerPartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> MaxSize {
            get {
                return this.maxSizeField;
            }
            set {
                this.maxSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> ContentTypeRestricted {
            get {
                return this.contentTypeRestrictedField;
            }
            set {
                this.contentTypeRestrictedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWebAppNonXMLPolicy {
        
        /// <remarks/>
        nothing,
        
        /// <remarks/>
        side,
        
        /// <remarks/>
        binary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmHTTPRequestMethods {
        
        private dmToggle pOSTField;
        
        private bool pOSTFieldSpecified;
        
        private dmToggle gETField;
        
        private bool gETFieldSpecified;
        
        private dmToggle pUTField;
        
        private bool pUTFieldSpecified;
        
        private dmToggle hEADField;
        
        private bool hEADFieldSpecified;
        
        private dmToggle oPTIONSField;
        
        private bool oPTIONSFieldSpecified;
        
        private dmToggle tRACEField;
        
        private bool tRACEFieldSpecified;
        
        private dmToggle dELETEField;
        
        private bool dELETEFieldSpecified;
        
        private dmToggle cONNECTField;
        
        private bool cONNECTFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle POST {
            get {
                return this.pOSTField;
            }
            set {
                this.pOSTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool POSTSpecified {
            get {
                return this.pOSTFieldSpecified;
            }
            set {
                this.pOSTFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle GET {
            get {
                return this.gETField;
            }
            set {
                this.gETField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GETSpecified {
            get {
                return this.gETFieldSpecified;
            }
            set {
                this.gETFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle PUT {
            get {
                return this.pUTField;
            }
            set {
                this.pUTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PUTSpecified {
            get {
                return this.pUTFieldSpecified;
            }
            set {
                this.pUTFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HEAD {
            get {
                return this.hEADField;
            }
            set {
                this.hEADField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HEADSpecified {
            get {
                return this.hEADFieldSpecified;
            }
            set {
                this.hEADFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle OPTIONS {
            get {
                return this.oPTIONSField;
            }
            set {
                this.oPTIONSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OPTIONSSpecified {
            get {
                return this.oPTIONSFieldSpecified;
            }
            set {
                this.oPTIONSFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle TRACE {
            get {
                return this.tRACEField;
            }
            set {
                this.tRACEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TRACESpecified {
            get {
                return this.tRACEFieldSpecified;
            }
            set {
                this.tRACEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle DELETE {
            get {
                return this.dELETEField;
            }
            set {
                this.dELETEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DELETESpecified {
            get {
                return this.dELETEFieldSpecified;
            }
            set {
                this.dELETEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle CONNECT {
            get {
                return this.cONNECTField;
            }
            set {
                this.cONNECTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CONNECTSpecified {
            get {
                return this.cONNECTFieldSpecified;
            }
            set {
                this.cONNECTFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmHTTPVersionMask {
        
        private dmToggle hTTP10Field;
        
        private bool hTTP10FieldSpecified;
        
        private dmToggle hTTP11Field;
        
        private bool hTTP11FieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-1.0", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP10 {
            get {
                return this.hTTP10Field;
            }
            set {
                this.hTTP10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP10Specified {
            get {
                return this.hTTP10FieldSpecified;
            }
            set {
                this.hTTP10FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-1.1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP11 {
            get {
                return this.hTTP11Field;
            }
            set {
                this.hTTP11Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP11Specified {
            get {
                return this.hTTP11FieldSpecified;
            }
            set {
                this.hTTP11FieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSatisfactionPolicy {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pre-requisite")]
        prerequisite,
        
        /// <remarks/>
        admission,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmURIFragmentFixupType {
        
        /// <remarks/>
        allow,
        
        /// <remarks/>
        reject,
        
        /// <remarks/>
        truncate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWebAppXMLPolicy {
        
        /// <remarks/>
        nothing,
        
        /// <remarks/>
        xml,
        
        /// <remarks/>
        soap,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType151 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AAA")]
        AAA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ContentTypes")]
        ContentTypes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CookieProfile")]
        CookieProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorPolicy")]
        ErrorPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HeaderGNVC")]
        HeaderGNVC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxBodySize")]
        MaxBodySize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxURISize")]
        MaxURISize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MinBodySize")]
        MinBodySize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MultipartFormData")]
        MultipartFormData,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NonXMLPolicy")]
        NonXMLPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NonXMLRule")]
        NonXMLRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OKMethods")]
        OKMethods,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OKVersions")]
        OKVersions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PolicyType")]
        PolicyType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QueryStringGNVC")]
        QueryStringGNVC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QueryStringPolicy")]
        QueryStringPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RateLimiter")]
        RateLimiter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SQLInjection")]
        SQLInjection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLPolicy")]
        SSLPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SessionManagementProfile")]
        SessionManagementProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URIFilterDotDot")]
        URIFilterDotDot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URIFilterExe")]
        URIFilterExe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URIFilterFragment")]
        URIFilterFragment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URIFilterUnicode")]
        URIFilterUnicode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UrlEncodedGNVC")]
        UrlEncodedGNVC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLPolicy")]
        XMLPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLRule")]
        XMLRule,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyWebAppResponse : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType150[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ContentTypes", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HeaderGNVC", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxBodySize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MinBodySize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NonXMLPolicy", typeof(dmWebAppNonXMLPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NonXMLRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OKCodes", typeof(dmHTTPResponseCodes), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OKVersions", typeof(dmHTTPVersionMask), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PolicyType", typeof(dmSatisfactionPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLPolicy", typeof(dmWebAppXMLPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType150[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmHTTPResponseCodes {
        
        private dmToggle hTTP100Field;
        
        private bool hTTP100FieldSpecified;
        
        private dmToggle hTTP101Field;
        
        private bool hTTP101FieldSpecified;
        
        private dmToggle hTTP200Field;
        
        private bool hTTP200FieldSpecified;
        
        private dmToggle hTTP201Field;
        
        private bool hTTP201FieldSpecified;
        
        private dmToggle hTTP202Field;
        
        private bool hTTP202FieldSpecified;
        
        private dmToggle hTTP203Field;
        
        private bool hTTP203FieldSpecified;
        
        private dmToggle hTTP204Field;
        
        private bool hTTP204FieldSpecified;
        
        private dmToggle hTTP205Field;
        
        private bool hTTP205FieldSpecified;
        
        private dmToggle hTTP206Field;
        
        private bool hTTP206FieldSpecified;
        
        private dmToggle hTTP300Field;
        
        private bool hTTP300FieldSpecified;
        
        private dmToggle hTTP301Field;
        
        private bool hTTP301FieldSpecified;
        
        private dmToggle hTTP302Field;
        
        private bool hTTP302FieldSpecified;
        
        private dmToggle hTTP303Field;
        
        private bool hTTP303FieldSpecified;
        
        private dmToggle hTTP304Field;
        
        private bool hTTP304FieldSpecified;
        
        private dmToggle hTTP305Field;
        
        private bool hTTP305FieldSpecified;
        
        private dmToggle hTTP307Field;
        
        private bool hTTP307FieldSpecified;
        
        private dmToggle hTTP400Field;
        
        private bool hTTP400FieldSpecified;
        
        private dmToggle hTTP401Field;
        
        private bool hTTP401FieldSpecified;
        
        private dmToggle hTTP402Field;
        
        private bool hTTP402FieldSpecified;
        
        private dmToggle hTTP403Field;
        
        private bool hTTP403FieldSpecified;
        
        private dmToggle hTTP404Field;
        
        private bool hTTP404FieldSpecified;
        
        private dmToggle hTTP405Field;
        
        private bool hTTP405FieldSpecified;
        
        private dmToggle hTTP406Field;
        
        private bool hTTP406FieldSpecified;
        
        private dmToggle hTTP407Field;
        
        private bool hTTP407FieldSpecified;
        
        private dmToggle hTTP408Field;
        
        private bool hTTP408FieldSpecified;
        
        private dmToggle hTTP409Field;
        
        private bool hTTP409FieldSpecified;
        
        private dmToggle hTTP410Field;
        
        private bool hTTP410FieldSpecified;
        
        private dmToggle hTTP411Field;
        
        private bool hTTP411FieldSpecified;
        
        private dmToggle hTTP412Field;
        
        private bool hTTP412FieldSpecified;
        
        private dmToggle hTTP413Field;
        
        private bool hTTP413FieldSpecified;
        
        private dmToggle hTTP500Field;
        
        private bool hTTP500FieldSpecified;
        
        private dmToggle hTTP503Field;
        
        private bool hTTP503FieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-100", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP100 {
            get {
                return this.hTTP100Field;
            }
            set {
                this.hTTP100Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP100Specified {
            get {
                return this.hTTP100FieldSpecified;
            }
            set {
                this.hTTP100FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-101", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP101 {
            get {
                return this.hTTP101Field;
            }
            set {
                this.hTTP101Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP101Specified {
            get {
                return this.hTTP101FieldSpecified;
            }
            set {
                this.hTTP101FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-200", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP200 {
            get {
                return this.hTTP200Field;
            }
            set {
                this.hTTP200Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP200Specified {
            get {
                return this.hTTP200FieldSpecified;
            }
            set {
                this.hTTP200FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-201", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP201 {
            get {
                return this.hTTP201Field;
            }
            set {
                this.hTTP201Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP201Specified {
            get {
                return this.hTTP201FieldSpecified;
            }
            set {
                this.hTTP201FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-202", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP202 {
            get {
                return this.hTTP202Field;
            }
            set {
                this.hTTP202Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP202Specified {
            get {
                return this.hTTP202FieldSpecified;
            }
            set {
                this.hTTP202FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-203", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP203 {
            get {
                return this.hTTP203Field;
            }
            set {
                this.hTTP203Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP203Specified {
            get {
                return this.hTTP203FieldSpecified;
            }
            set {
                this.hTTP203FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-204", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP204 {
            get {
                return this.hTTP204Field;
            }
            set {
                this.hTTP204Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP204Specified {
            get {
                return this.hTTP204FieldSpecified;
            }
            set {
                this.hTTP204FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-205", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP205 {
            get {
                return this.hTTP205Field;
            }
            set {
                this.hTTP205Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP205Specified {
            get {
                return this.hTTP205FieldSpecified;
            }
            set {
                this.hTTP205FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-206", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP206 {
            get {
                return this.hTTP206Field;
            }
            set {
                this.hTTP206Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP206Specified {
            get {
                return this.hTTP206FieldSpecified;
            }
            set {
                this.hTTP206FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-300", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP300 {
            get {
                return this.hTTP300Field;
            }
            set {
                this.hTTP300Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP300Specified {
            get {
                return this.hTTP300FieldSpecified;
            }
            set {
                this.hTTP300FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-301", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP301 {
            get {
                return this.hTTP301Field;
            }
            set {
                this.hTTP301Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP301Specified {
            get {
                return this.hTTP301FieldSpecified;
            }
            set {
                this.hTTP301FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-302", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP302 {
            get {
                return this.hTTP302Field;
            }
            set {
                this.hTTP302Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP302Specified {
            get {
                return this.hTTP302FieldSpecified;
            }
            set {
                this.hTTP302FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-303", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP303 {
            get {
                return this.hTTP303Field;
            }
            set {
                this.hTTP303Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP303Specified {
            get {
                return this.hTTP303FieldSpecified;
            }
            set {
                this.hTTP303FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-304", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP304 {
            get {
                return this.hTTP304Field;
            }
            set {
                this.hTTP304Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP304Specified {
            get {
                return this.hTTP304FieldSpecified;
            }
            set {
                this.hTTP304FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-305", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP305 {
            get {
                return this.hTTP305Field;
            }
            set {
                this.hTTP305Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP305Specified {
            get {
                return this.hTTP305FieldSpecified;
            }
            set {
                this.hTTP305FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-307", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP307 {
            get {
                return this.hTTP307Field;
            }
            set {
                this.hTTP307Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP307Specified {
            get {
                return this.hTTP307FieldSpecified;
            }
            set {
                this.hTTP307FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-400", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP400 {
            get {
                return this.hTTP400Field;
            }
            set {
                this.hTTP400Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP400Specified {
            get {
                return this.hTTP400FieldSpecified;
            }
            set {
                this.hTTP400FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-401", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP401 {
            get {
                return this.hTTP401Field;
            }
            set {
                this.hTTP401Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP401Specified {
            get {
                return this.hTTP401FieldSpecified;
            }
            set {
                this.hTTP401FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-402", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP402 {
            get {
                return this.hTTP402Field;
            }
            set {
                this.hTTP402Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP402Specified {
            get {
                return this.hTTP402FieldSpecified;
            }
            set {
                this.hTTP402FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-403", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP403 {
            get {
                return this.hTTP403Field;
            }
            set {
                this.hTTP403Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP403Specified {
            get {
                return this.hTTP403FieldSpecified;
            }
            set {
                this.hTTP403FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-404", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP404 {
            get {
                return this.hTTP404Field;
            }
            set {
                this.hTTP404Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP404Specified {
            get {
                return this.hTTP404FieldSpecified;
            }
            set {
                this.hTTP404FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-405", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP405 {
            get {
                return this.hTTP405Field;
            }
            set {
                this.hTTP405Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP405Specified {
            get {
                return this.hTTP405FieldSpecified;
            }
            set {
                this.hTTP405FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-406", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP406 {
            get {
                return this.hTTP406Field;
            }
            set {
                this.hTTP406Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP406Specified {
            get {
                return this.hTTP406FieldSpecified;
            }
            set {
                this.hTTP406FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-407", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP407 {
            get {
                return this.hTTP407Field;
            }
            set {
                this.hTTP407Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP407Specified {
            get {
                return this.hTTP407FieldSpecified;
            }
            set {
                this.hTTP407FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-408", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP408 {
            get {
                return this.hTTP408Field;
            }
            set {
                this.hTTP408Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP408Specified {
            get {
                return this.hTTP408FieldSpecified;
            }
            set {
                this.hTTP408FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-409", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP409 {
            get {
                return this.hTTP409Field;
            }
            set {
                this.hTTP409Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP409Specified {
            get {
                return this.hTTP409FieldSpecified;
            }
            set {
                this.hTTP409FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-410", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP410 {
            get {
                return this.hTTP410Field;
            }
            set {
                this.hTTP410Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP410Specified {
            get {
                return this.hTTP410FieldSpecified;
            }
            set {
                this.hTTP410FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-411", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP411 {
            get {
                return this.hTTP411Field;
            }
            set {
                this.hTTP411Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP411Specified {
            get {
                return this.hTTP411FieldSpecified;
            }
            set {
                this.hTTP411FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-412", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP412 {
            get {
                return this.hTTP412Field;
            }
            set {
                this.hTTP412Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP412Specified {
            get {
                return this.hTTP412FieldSpecified;
            }
            set {
                this.hTTP412FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-413", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP413 {
            get {
                return this.hTTP413Field;
            }
            set {
                this.hTTP413Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP413Specified {
            get {
                return this.hTTP413FieldSpecified;
            }
            set {
                this.hTTP413FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-500", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP500 {
            get {
                return this.hTTP500Field;
            }
            set {
                this.hTTP500Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP500Specified {
            get {
                return this.hTTP500FieldSpecified;
            }
            set {
                this.hTTP500FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-503", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP503 {
            get {
                return this.hTTP503Field;
            }
            set {
                this.hTTP503Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP503Specified {
            get {
                return this.hTTP503FieldSpecified;
            }
            set {
                this.hTTP503FieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType150 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ContentTypes")]
        ContentTypes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorPolicy")]
        ErrorPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HeaderGNVC")]
        HeaderGNVC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxBodySize")]
        MaxBodySize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MinBodySize")]
        MinBodySize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NonXMLPolicy")]
        NonXMLPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NonXMLRule")]
        NonXMLRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OKCodes")]
        OKCodes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OKVersions")]
        OKVersions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PolicyType")]
        PolicyType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLPolicy")]
        XMLPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLRule")]
        XMLRule,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyNameValueProfile : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType149[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DefaultFixup", typeof(dmValidationFixupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultMapValue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultXSS", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxAggregateSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxAttributes", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxNameSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxValueSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ValidationList", typeof(dmValidationType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType149[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmValidationFixupType {
        
        /// <remarks/>
        passthrough,
        
        /// <remarks/>
        strip,
        
        /// <remarks/>
        error,
        
        /// <remarks/>
        set,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmValidationType {
        
        private string nameField;
        
        private string valueField;
        
        private dmValidationFixupType fixupField;
        
        private string mapValueField;
        
        private System.Nullable<dmToggle> xSSField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmValidationFixupType Fixup {
            get {
                return this.fixupField;
            }
            set {
                this.fixupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string MapValue {
            get {
                return this.mapValueField;
            }
            set {
                this.mapValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> XSS {
            get {
                return this.xSSField;
            }
            set {
                this.xSSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType149 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultFixup")]
        DefaultFixup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultMapValue")]
        DefaultMapValue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultXSS")]
        DefaultXSS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxAggregateSize")]
        MaxAggregateSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxAttributes")]
        MaxAttributes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxNameSize")]
        MaxNameSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxValueSize")]
        MaxValueSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ValidationList")]
        ValidationList,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifySimpleCountMonitor : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType148[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Action", typeof(dmFilterActionType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ConcurrentConnections", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxSources", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TPS", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType148[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmFilterActionType {
        
        /// <remarks/>
        notify,
        
        /// <remarks/>
        reject,
        
        /// <remarks/>
        shape,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType148 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Action")]
        Action,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ConcurrentConnections")]
        ConcurrentConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxSources")]
        MaxSources,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TPS")]
        TPS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyWebAppErrorHandlingPolicy : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType147[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ErrorMonitor", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorStylePolicyRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmWebAppErrorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType147[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWebAppErrorType {
        
        /// <remarks/>
        standard,
        
        /// <remarks/>
        redirect,
        
        /// <remarks/>
        proxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("error-rule")]
        errorrule,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType147 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorMonitor")]
        ErrorMonitor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorStylePolicyRule")]
        ErrorStylePolicyRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Type")]
        Type,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URL")]
        URL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyWebAppSessionPolicy : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType146[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AddressAgnosticCookie", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AutoRenew", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StartMatches", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Timeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType146[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType146 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AddressAgnosticCookie")]
        AddressAgnosticCookie,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AutoRenew")]
        AutoRenew,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StartMatches")]
        StartMatches,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Timeout")]
        Timeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWSRRSubscription))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyUDDISubscription))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyWebServiceSubscription : ModifyConfigBase {
        
        private string[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyWSRRSubscription : ModifyWebServiceSubscription {
        
        private object[] items1Field;
        
        private Items1ChoiceType27[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Method", typeof(dmWsrrSynchronization), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Namespace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ObjectName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ObjectType", typeof(dmWsrrSubscriptionType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RefreshInterval", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Server", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType27[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWsrrSubscriptionType {
        
        /// <remarks/>
        wsdl,
        
        /// <remarks/>
        concept,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType27 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Method")]
        Method,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Namespace")]
        Namespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ObjectName")]
        ObjectName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ObjectType")]
        ObjectType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RefreshInterval")]
        RefreshInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Server")]
        Server,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyUDDISubscription : ModifyWebServiceSubscription {
        
        private object[] items1Field;
        
        private Items1ChoiceType26[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Password", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Registry", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SubscriptionKey", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Username", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType26[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType26 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Password")]
        Password,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Registry")]
        Registry,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SubscriptionKey")]
        SubscriptionKey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Username")]
        Username,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyUDDIRegistry : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType145[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IPAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InquiryURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Port", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PublishURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxyProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SecurityURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SubscriptionURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UseSSL", typeof(dmUDDIUseSSL), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Version", typeof(dmUDDIVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType145[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmUDDIUseSSL {
        
        /// <remarks/>
        Always,
        
        /// <remarks/>
        Publish,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmUDDIVersion {
        
        /// <remarks/>
        UDDIv2,
        
        /// <remarks/>
        UDDIv3,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType145 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IPAddress")]
        IPAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":InquiryURL")]
        InquiryURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Port")]
        Port,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PublishURL")]
        PublishURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLPort")]
        SSLPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxyProfile")]
        SSLProxyProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SecurityURL")]
        SecurityURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SubscriptionURL")]
        SubscriptionURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UseSSL")]
        UseSSL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Version")]
        Version,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifySQLDataSource : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType144[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AllowReadOnly", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DataSourceHost", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DataSourceID", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DataSourcePort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Database", typeof(dmSQLDatabaseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LimitReturnedData", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LimitReturnedDataSize", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Password", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SQLDataSourceConfigNVPairs", typeof(dmSQLDataSourceConfigNVPair), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Username", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType144[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSQLDatabaseType {
        
        /// <remarks/>
        DB2,
        
        /// <remarks/>
        Oracle,
        
        /// <remarks/>
        Sybase,
        
        /// <remarks/>
        MSSQLServer,
        
        /// <remarks/>
        DB2v9,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmSQLDataSourceConfigNVPair {
        
        private string paramNameField;
        
        private string paramValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ParamName {
            get {
                return this.paramNameField;
            }
            set {
                this.paramNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ParamValue {
            get {
                return this.paramValueField;
            }
            set {
                this.paramValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType144 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowReadOnly")]
        AllowReadOnly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DataSourceHost")]
        DataSourceHost,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DataSourceID")]
        DataSourceID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DataSourcePort")]
        DataSourcePort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Database")]
        Database,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LimitReturnedData")]
        LimitReturnedData,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LimitReturnedDataSize")]
        LimitReturnedDataSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Password")]
        Password,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SQLDataSourceConfigNVPairs")]
        SQLDataSourceConfigNVPairs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Username")]
        Username,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyNFSDynamicMounts : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType143[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Authentication", typeof(dmNFSAuthenticationType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IdleUnmountSeconds", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MountTimeoutSeconds", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReadOnly", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReadSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Retransmissions", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Timeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Transport", typeof(dmNFSTransportType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Version", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WriteSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType143[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmNFSAuthenticationType {
        
        /// <remarks/>
        auth_sys,
        
        /// <remarks/>
        krb5,
        
        /// <remarks/>
        krb5i,
        
        /// <remarks/>
        krb5p,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType143 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Authentication")]
        Authentication,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IdleUnmountSeconds")]
        IdleUnmountSeconds,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MountTimeoutSeconds")]
        MountTimeoutSeconds,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReadOnly")]
        ReadOnly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReadSize")]
        ReadSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Retransmissions")]
        Retransmissions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Timeout")]
        Timeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Transport")]
        Transport,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Version")]
        Version,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WriteSize")]
        WriteSize,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyNFSStaticMount : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType142[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Authentication", typeof(dmNFSAuthenticationType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalFilesystemAccess", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReadOnly", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReadSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Retransmissions", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Timeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Transport", typeof(dmNFSTransportType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Version", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WriteSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("remote", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType142[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType142 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Authentication")]
        Authentication,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalFilesystemAccess")]
        LocalFilesystemAccess,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReadOnly")]
        ReadOnly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReadSize")]
        ReadSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Retransmissions")]
        Retransmissions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Timeout")]
        Timeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Transport")]
        Transport,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Version")]
        Version,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WriteSize")]
        WriteSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":remote")]
        remote,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyNFSClientSettings : ModifyConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("KerberosKeytab", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MountRefreshTime", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifySLMPolicy : ModifyConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExecutionPolicy", typeof(dmSLMExecutionPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PeerGroup", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Statement", typeof(dmSLMStatement), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSLMExecutionPolicy {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("terminate-at-first-reject")]
        terminateatfirstreject,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("terminate-at-first-action")]
        terminateatfirstaction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("execute-all-statements")]
        executeallstatements,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmSLMStatement {
        
        private uint sLMIdField;
        
        private string userStringField;
        
        private dmReference credClassField;
        
        private dmReference rsrcClassField;
        
        private dmReference scheduleField;
        
        private dmReference actionField;
        
        private System.Nullable<uint> threshIntervalLengthField;
        
        private System.Nullable<dmSLMIntervalType> threshIntervalTypeField;
        
        private System.Nullable<dmSLMThresholdAlgorithm> threshAlgorithmField;
        
        private System.Nullable<dmSLMThreshType> thresholdTypeField;
        
        private System.Nullable<uint> thresholdLevelField;
        
        private System.Nullable<uint> releaseThresholdLevelField;
        
        private System.Nullable<uint> burstLimitField;
        
        private System.Nullable<uint> reportingAggregationIntervalField;
        
        private uint maximumTotalReportingRecordsField;
        
        private System.Nullable<dmToggle> autoGeneratedByWebGUIField;
        
        private bool autoGeneratedByWebGUIFieldSpecified;
        
        private uint maximumResourcesAndCredentialsForThresholdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint SLMId {
            get {
                return this.sLMIdField;
            }
            set {
                this.sLMIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string UserString {
            get {
                return this.userStringField;
            }
            set {
                this.userStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference CredClass {
            get {
                return this.credClassField;
            }
            set {
                this.credClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference RsrcClass {
            get {
                return this.rsrcClassField;
            }
            set {
                this.rsrcClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference Schedule {
            get {
                return this.scheduleField;
            }
            set {
                this.scheduleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> ThreshIntervalLength {
            get {
                return this.threshIntervalLengthField;
            }
            set {
                this.threshIntervalLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmSLMIntervalType> ThreshIntervalType {
            get {
                return this.threshIntervalTypeField;
            }
            set {
                this.threshIntervalTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmSLMThresholdAlgorithm> ThreshAlgorithm {
            get {
                return this.threshAlgorithmField;
            }
            set {
                this.threshAlgorithmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmSLMThreshType> ThresholdType {
            get {
                return this.thresholdTypeField;
            }
            set {
                this.thresholdTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> ThresholdLevel {
            get {
                return this.thresholdLevelField;
            }
            set {
                this.thresholdLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> ReleaseThresholdLevel {
            get {
                return this.releaseThresholdLevelField;
            }
            set {
                this.releaseThresholdLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> BurstLimit {
            get {
                return this.burstLimitField;
            }
            set {
                this.burstLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> ReportingAggregationInterval {
            get {
                return this.reportingAggregationIntervalField;
            }
            set {
                this.reportingAggregationIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint MaximumTotalReportingRecords {
            get {
                return this.maximumTotalReportingRecordsField;
            }
            set {
                this.maximumTotalReportingRecordsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> AutoGeneratedByWebGUI {
            get {
                return this.autoGeneratedByWebGUIField;
            }
            set {
                this.autoGeneratedByWebGUIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoGeneratedByWebGUISpecified {
            get {
                return this.autoGeneratedByWebGUIFieldSpecified;
            }
            set {
                this.autoGeneratedByWebGUIFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint MaximumResourcesAndCredentialsForThreshold {
            get {
                return this.maximumResourcesAndCredentialsForThresholdField;
            }
            set {
                this.maximumResourcesAndCredentialsForThresholdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSLMIntervalType {
        
        /// <remarks/>
        @fixed,
        
        /// <remarks/>
        moving,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSLMThresholdAlgorithm {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("greater-than")]
        greaterthan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("less-than")]
        lessthan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("token-bucket")]
        tokenbucket,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high-low-thresholds")]
        highlowthresholds,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSLMThreshType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("count-all")]
        countall,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("count-errors")]
        counterrors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("latency-internal")]
        latencyinternal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("latency-backend")]
        latencybackend,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("latency-total")]
        latencytotal,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyPeerGroup : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType141[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmPeerGroupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType141[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmPeerGroupType {
        
        /// <remarks/>
        slm,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType141 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Type")]
        Type,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URL")]
        URL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifySLMAction : ModifyConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LogLevel", typeof(dmLogLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmSLMActionType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSLMActionType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("log-only")]
        logonly,
        
        /// <remarks/>
        reject,
        
        /// <remarks/>
        shape,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifySLMSchedule : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType140[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DaysOfWeek", typeof(dmWeekdayBitmap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Duration", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StartTime", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType140[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWeekdayBitmap {
        
        private dmToggle sundayField;
        
        private bool sundayFieldSpecified;
        
        private dmToggle mondayField;
        
        private bool mondayFieldSpecified;
        
        private dmToggle tuesdayField;
        
        private bool tuesdayFieldSpecified;
        
        private dmToggle wednesdayField;
        
        private bool wednesdayFieldSpecified;
        
        private dmToggle thursdayField;
        
        private bool thursdayFieldSpecified;
        
        private dmToggle fridayField;
        
        private bool fridayFieldSpecified;
        
        private dmToggle saturdayField;
        
        private bool saturdayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Sunday {
            get {
                return this.sundayField;
            }
            set {
                this.sundayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SundaySpecified {
            get {
                return this.sundayFieldSpecified;
            }
            set {
                this.sundayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Monday {
            get {
                return this.mondayField;
            }
            set {
                this.mondayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MondaySpecified {
            get {
                return this.mondayFieldSpecified;
            }
            set {
                this.mondayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Tuesday {
            get {
                return this.tuesdayField;
            }
            set {
                this.tuesdayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TuesdaySpecified {
            get {
                return this.tuesdayFieldSpecified;
            }
            set {
                this.tuesdayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Wednesday {
            get {
                return this.wednesdayField;
            }
            set {
                this.wednesdayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WednesdaySpecified {
            get {
                return this.wednesdayFieldSpecified;
            }
            set {
                this.wednesdayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Thursday {
            get {
                return this.thursdayField;
            }
            set {
                this.thursdayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThursdaySpecified {
            get {
                return this.thursdayFieldSpecified;
            }
            set {
                this.thursdayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Friday {
            get {
                return this.fridayField;
            }
            set {
                this.fridayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FridaySpecified {
            get {
                return this.fridayFieldSpecified;
            }
            set {
                this.fridayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Saturday {
            get {
                return this.saturdayField;
            }
            set {
                this.saturdayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SaturdaySpecified {
            get {
                return this.saturdayFieldSpecified;
            }
            set {
                this.saturdayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType140 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaysOfWeek")]
        DaysOfWeek,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Duration")]
        Duration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StartTime")]
        StartTime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifySLMRsrcClass : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType139[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RsrcMatchType", typeof(dmSLMMatchType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RsrcType", typeof(dmSLMRsrcType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RsrcValue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Stylesheet", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("Subscription", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRRSubscription", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XPathFilter", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType139[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSLMMatchType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("per-extracted-value")]
        perextractedvalue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("exact-match")]
        exactmatch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("regexp-match")]
        regexpmatch,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSLMRsrcType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("aaa-mapped-resource")]
        aaamappedresource,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("front-url")]
        fronturl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("destination-url")]
        destinationurl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xpath-filter")]
        xpathfilter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("request-message")]
        requestmessage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("response-message")]
        responsemessage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("soap-fault")]
        soapfault,
        
        /// <remarks/>
        errorcode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("custom-stylesheet")]
        customstylesheet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("concurrent-connections")]
        concurrentconnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("concurrent-transactions")]
        concurrenttransactions,
        
        /// <remarks/>
        wsdl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wsdl-service")]
        wsdlservice,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wsdl-port")]
        wsdlport,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wsdl-operation")]
        wsdloperation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("request-mq-qname")]
        requestmqqname,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("reply-mq-qname")]
        replymqqname,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("uddi-subscription")]
        uddisubscription,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wsrr-subscription")]
        wsrrsubscription,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType139 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RsrcMatchType")]
        RsrcMatchType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RsrcType")]
        RsrcType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RsrcValue")]
        RsrcValue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Stylesheet")]
        Stylesheet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Subscription")]
        Subscription,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRRSubscription")]
        WSRRSubscription,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XPathFilter")]
        XPathFilter,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifySLMCredClass : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType138[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CredMatchType", typeof(dmSLMMatchType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CredType", typeof(dmSLMCredType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CredValue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Header", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Stylesheet", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType138[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSLMCredType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("aaa-mapped-credential")]
        aaamappedcredential,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("aaa-username")]
        aaausername,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mq-application")]
        mqapplication,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("client-ip")]
        clientip,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("request-header")]
        requestheader,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ip-from-header")]
        ipfromheader,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("custom-stylesheet")]
        customstylesheet,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType138 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CredMatchType")]
        CredMatchType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CredType")]
        CredType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CredValue")]
        CredValue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Header")]
        Header,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Stylesheet")]
        Stylesheet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyWebServicesAgent : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType137[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BufferMode", typeof(dmWSMBufferMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CaptureMode", typeof(dmWSMCapture), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxMemoryKB", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxRecords", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType137[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSMBufferMode {
        
        /// <remarks/>
        discard,
        
        /// <remarks/>
        buffer,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSMCapture {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        faults,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("all-messages")]
        allmessages,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType137 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BufferMode")]
        BufferMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CaptureMode")]
        CaptureMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxMemoryKB")]
        MaxMemoryKB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxRecords")]
        MaxRecords,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyIMSConnectSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyFilePollerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyFTPFilePollerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyNFSFilePollerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyJMSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWebSphereJMSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyTibcoEMSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyStatelessTCPSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyXTCProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMQSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyFTPServerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyHTTPSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyHTTPSourceProtocolHandler))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifySourceProtocolHandler : ModifyConfigBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyIMSConnectSourceProtocolHandler : ModifySourceProtocolHandler {
        
        private object[] itemsField;
        
        private ItemsChoiceType136[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EBCDICInput", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PersistentConnections", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType136[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType136 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EBCDICInput")]
        EBCDICInput,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PersistentConnections")]
        PersistentConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyFTPFilePollerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyNFSFilePollerSourceProtocolHandler))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyFilePollerSourceProtocolHandler : ModifySourceProtocolHandler {
        
        private object[] itemsField;
        
        private ItemsChoiceType135[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DelayBetweenPolls", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DeleteOnError", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DeleteOnSuccess", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorRenamePattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GenerateResultFile", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InputFileMatchPattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProcessingRenamePattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProcessingSeizePattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProcessingSeizeTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResultNamePattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SuccessRenamePattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TargetDirectory", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType135[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType135 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DelayBetweenPolls")]
        DelayBetweenPolls,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DeleteOnError")]
        DeleteOnError,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DeleteOnSuccess")]
        DeleteOnSuccess,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorRenamePattern")]
        ErrorRenamePattern,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GenerateResultFile")]
        GenerateResultFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":InputFileMatchPattern")]
        InputFileMatchPattern,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ProcessingRenamePattern")]
        ProcessingRenamePattern,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ProcessingSeizePattern")]
        ProcessingSeizePattern,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ProcessingSeizeTimeout")]
        ProcessingSeizeTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResultNamePattern")]
        ResultNamePattern,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SuccessRenamePattern")]
        SuccessRenamePattern,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TargetDirectory")]
        TargetDirectory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyFTPFilePollerSourceProtocolHandler : ModifyFilePollerSourceProtocolHandler {
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyNFSFilePollerSourceProtocolHandler : ModifyFilePollerSourceProtocolHandler {
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWebSphereJMSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyTibcoEMSSourceProtocolHandler))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyJMSSourceProtocolHandler : ModifySourceProtocolHandler {
        
        private string[] itemsField;
        
        private ItemsChoiceType134[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GetQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PutQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Selector", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public string[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType134[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType134 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GetQueue")]
        GetQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PutQueue")]
        PutQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Selector")]
        Selector,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyWebSphereJMSSourceProtocolHandler : ModifyJMSSourceProtocolHandler {
        
        private object[] items1Field;
        
        private Items1ChoiceType25[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ReplyTopicSpace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestTopicSpace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Server", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType25[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType25 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReplyTopicSpace")]
        ReplyTopicSpace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestTopicSpace")]
        RequestTopicSpace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Server")]
        Server,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyTibcoEMSSourceProtocolHandler : ModifyJMSSourceProtocolHandler {
        
        private dmReference[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Server", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyStatelessTCPSourceProtocolHandler : ModifySourceProtocolHandler {
        
        private object[] itemsField;
        
        private ItemsChoiceType133[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PersistentConnections", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType133[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType133 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PersistentConnections")]
        PersistentConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyXTCProtocolHandler : ModifySourceProtocolHandler {
        
        private object[] itemsField;
        
        private ItemsChoiceType132[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CloseOnFault", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemotePort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType132[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType132 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CloseOnFault")]
        CloseOnFault,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteAddress")]
        RemoteAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemotePort")]
        RemotePort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyMQSourceProtocolHandler : ModifySourceProtocolHandler {
        
        private object[] itemsField;
        
        private ItemsChoiceType131[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CodePage", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ConcurrentConnections", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ContentTypeHeader", typeof(dmMQContentTypeHeader), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ContentTypeXPath", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ExcludeHeaders", typeof(dmMQHeaders), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GetMessageOptions", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GetQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PollingInterval", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PutQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QueueManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType131[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmMQContentTypeHeader {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        MQRFH,
        
        /// <remarks/>
        MQRFH2,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmMQHeaders {
        
        private dmToggle mQCIHField;
        
        private bool mQCIHFieldSpecified;
        
        private dmToggle mQDLHField;
        
        private bool mQDLHFieldSpecified;
        
        private dmToggle mQIIHField;
        
        private bool mQIIHFieldSpecified;
        
        private dmToggle mQRFHField;
        
        private bool mQRFHFieldSpecified;
        
        private dmToggle mQRFH2Field;
        
        private bool mQRFH2FieldSpecified;
        
        private dmToggle mQWIHField;
        
        private bool mQWIHFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle MQCIH {
            get {
                return this.mQCIHField;
            }
            set {
                this.mQCIHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MQCIHSpecified {
            get {
                return this.mQCIHFieldSpecified;
            }
            set {
                this.mQCIHFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle MQDLH {
            get {
                return this.mQDLHField;
            }
            set {
                this.mQDLHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MQDLHSpecified {
            get {
                return this.mQDLHFieldSpecified;
            }
            set {
                this.mQDLHFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle MQIIH {
            get {
                return this.mQIIHField;
            }
            set {
                this.mQIIHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MQIIHSpecified {
            get {
                return this.mQIIHFieldSpecified;
            }
            set {
                this.mQIIHFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle MQRFH {
            get {
                return this.mQRFHField;
            }
            set {
                this.mQRFHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MQRFHSpecified {
            get {
                return this.mQRFHFieldSpecified;
            }
            set {
                this.mQRFHFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle MQRFH2 {
            get {
                return this.mQRFH2Field;
            }
            set {
                this.mQRFH2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MQRFH2Specified {
            get {
                return this.mQRFH2FieldSpecified;
            }
            set {
                this.mQRFH2FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle MQWIH {
            get {
                return this.mQWIHField;
            }
            set {
                this.mQWIHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MQWIHSpecified {
            get {
                return this.mQWIHFieldSpecified;
            }
            set {
                this.mQWIHFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType131 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CodePage")]
        CodePage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ConcurrentConnections")]
        ConcurrentConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ContentTypeHeader")]
        ContentTypeHeader,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ContentTypeXPath")]
        ContentTypeXPath,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ExcludeHeaders")]
        ExcludeHeaders,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GetMessageOptions")]
        GetMessageOptions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GetQueue")]
        GetQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PollingInterval")]
        PollingInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PutQueue")]
        PutQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QueueManager")]
        QueueManager,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyFTPServerSourceProtocolHandler : ModifySourceProtocolHandler {
        
        private object[] itemsField;
        
        private ItemsChoiceType130[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowCCC", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowCompression", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowREST", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowSTOU", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CertificateAAAPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DataEncryption", typeof(dmFTPDataEncryption), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultDirectory", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FilesystemType", typeof(dmFTPFilesystemType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IdleTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxFilenameLength", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Passive", typeof(dmFTPPassive), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PasswordAAAPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PersistentFilesystemTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequireTLS", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseNFSMount", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseStorage", typeof(dmFTPResponseStorage), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseSuffix", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseType", typeof(dmFTPResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RestartTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TemporaryStorageSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UniqueFilenamePrefix", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("VirtualDirectories", typeof(dmFTPServerVirtualDirectory), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType130[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmFTPDataEncryption {
        
        /// <remarks/>
        disallow,
        
        /// <remarks/>
        allow,
        
        /// <remarks/>
        require,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmFTPFilesystemType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("virtual-ephemeral")]
        virtualephemeral,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("virtual-persistent")]
        virtualpersistent,
        
        /// <remarks/>
        transparent,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmFTPPassive {
        
        /// <remarks/>
        allow,
        
        /// <remarks/>
        disallow,
        
        /// <remarks/>
        require,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmFTPResponseStorage {
        
        /// <remarks/>
        temporary,
        
        /// <remarks/>
        nfs,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmFTPResponseType {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("virtual-filesystem")]
        virtualfilesystem,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ftp-client")]
        ftpclient,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmFTPServerVirtualDirectory {
        
        private string virtualPathField;
        
        private string responseDirectoryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string VirtualPath {
            get {
                return this.virtualPathField;
            }
            set {
                this.virtualPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ResponseDirectory {
            get {
                return this.responseDirectoryField;
            }
            set {
                this.responseDirectoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType130 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowCCC")]
        AllowCCC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowCompression")]
        AllowCompression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowREST")]
        AllowREST,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowSTOU")]
        AllowSTOU,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CertificateAAAPolicy")]
        CertificateAAAPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DataEncryption")]
        DataEncryption,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultDirectory")]
        DefaultDirectory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FilesystemType")]
        FilesystemType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IdleTimeout")]
        IdleTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxFilenameLength")]
        MaxFilenameLength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Passive")]
        Passive,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PasswordAAAPolicy")]
        PasswordAAAPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PersistentFilesystemTimeout")]
        PersistentFilesystemTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequireTLS")]
        RequireTLS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseNFSMount")]
        ResponseNFSMount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseStorage")]
        ResponseStorage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseSuffix")]
        ResponseSuffix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseType")]
        ResponseType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseURL")]
        ResponseURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RestartTimeout")]
        RestartTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TemporaryStorageSize")]
        TemporaryStorageSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UniqueFilenamePrefix")]
        UniqueFilenamePrefix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":VirtualDirectories")]
        VirtualDirectories,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyHTTPSSourceProtocolHandler : ModifySourceProtocolHandler {
        
        private object[] itemsField;
        
        private ItemsChoiceType129[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowCompression", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowedFeatures", typeof(dmSourceHTTPFeatureType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPVersion", typeof(dmHTTPVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxHdrCount", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxNameHdrLen", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxQueryStringLen", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxTotalHdrLen", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxURLLen", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxValueHdrLen", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PersistentConnections", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType129[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmSourceHTTPFeatureType {
        
        private dmToggle hTTP10Field;
        
        private bool hTTP10FieldSpecified;
        
        private dmToggle hTTP11Field;
        
        private bool hTTP11FieldSpecified;
        
        private dmToggle pOSTField;
        
        private bool pOSTFieldSpecified;
        
        private dmToggle gETField;
        
        private bool gETFieldSpecified;
        
        private dmToggle pUTField;
        
        private bool pUTFieldSpecified;
        
        private dmToggle hEADField;
        
        private bool hEADFieldSpecified;
        
        private dmToggle oPTIONSField;
        
        private bool oPTIONSFieldSpecified;
        
        private dmToggle tRACEField;
        
        private bool tRACEFieldSpecified;
        
        private dmToggle dELETEField;
        
        private bool dELETEFieldSpecified;
        
        private dmToggle cONNECTField;
        
        private bool cONNECTFieldSpecified;
        
        private dmToggle queryStringField;
        
        private bool queryStringFieldSpecified;
        
        private dmToggle fragmentIdentifiersField;
        
        private bool fragmentIdentifiersFieldSpecified;
        
        private dmToggle dotDotField;
        
        private bool dotDotFieldSpecified;
        
        private dmToggle cmdExeField;
        
        private bool cmdExeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-1.0", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP10 {
            get {
                return this.hTTP10Field;
            }
            set {
                this.hTTP10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP10Specified {
            get {
                return this.hTTP10FieldSpecified;
            }
            set {
                this.hTTP10FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTP-1.1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HTTP11 {
            get {
                return this.hTTP11Field;
            }
            set {
                this.hTTP11Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTTP11Specified {
            get {
                return this.hTTP11FieldSpecified;
            }
            set {
                this.hTTP11FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle POST {
            get {
                return this.pOSTField;
            }
            set {
                this.pOSTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool POSTSpecified {
            get {
                return this.pOSTFieldSpecified;
            }
            set {
                this.pOSTFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle GET {
            get {
                return this.gETField;
            }
            set {
                this.gETField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GETSpecified {
            get {
                return this.gETFieldSpecified;
            }
            set {
                this.gETFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle PUT {
            get {
                return this.pUTField;
            }
            set {
                this.pUTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PUTSpecified {
            get {
                return this.pUTFieldSpecified;
            }
            set {
                this.pUTFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle HEAD {
            get {
                return this.hEADField;
            }
            set {
                this.hEADField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HEADSpecified {
            get {
                return this.hEADFieldSpecified;
            }
            set {
                this.hEADFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle OPTIONS {
            get {
                return this.oPTIONSField;
            }
            set {
                this.oPTIONSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OPTIONSSpecified {
            get {
                return this.oPTIONSFieldSpecified;
            }
            set {
                this.oPTIONSFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle TRACE {
            get {
                return this.tRACEField;
            }
            set {
                this.tRACEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TRACESpecified {
            get {
                return this.tRACEFieldSpecified;
            }
            set {
                this.tRACEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle DELETE {
            get {
                return this.dELETEField;
            }
            set {
                this.dELETEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DELETESpecified {
            get {
                return this.dELETEFieldSpecified;
            }
            set {
                this.dELETEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle CONNECT {
            get {
                return this.cONNECTField;
            }
            set {
                this.cONNECTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CONNECTSpecified {
            get {
                return this.cONNECTFieldSpecified;
            }
            set {
                this.cONNECTFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle QueryString {
            get {
                return this.queryStringField;
            }
            set {
                this.queryStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QueryStringSpecified {
            get {
                return this.queryStringFieldSpecified;
            }
            set {
                this.queryStringFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle FragmentIdentifiers {
            get {
                return this.fragmentIdentifiersField;
            }
            set {
                this.fragmentIdentifiersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FragmentIdentifiersSpecified {
            get {
                return this.fragmentIdentifiersFieldSpecified;
            }
            set {
                this.fragmentIdentifiersFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle DotDot {
            get {
                return this.dotDotField;
            }
            set {
                this.dotDotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DotDotSpecified {
            get {
                return this.dotDotFieldSpecified;
            }
            set {
                this.dotDotFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle CmdExe {
            get {
                return this.cmdExeField;
            }
            set {
                this.cmdExeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CmdExeSpecified {
            get {
                return this.cmdExeFieldSpecified;
            }
            set {
                this.cmdExeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType129 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowCompression")]
        AllowCompression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowedFeatures")]
        AllowedFeatures,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPVersion")]
        HTTPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxHdrCount")]
        MaxHdrCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxNameHdrLen")]
        MaxNameHdrLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxQueryStringLen")]
        MaxQueryStringLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxTotalHdrLen")]
        MaxTotalHdrLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxURLLen")]
        MaxURLLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxValueHdrLen")]
        MaxValueHdrLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PersistentConnections")]
        PersistentConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyHTTPSourceProtocolHandler : ModifySourceProtocolHandler {
        
        private object[] itemsField;
        
        private ItemsChoiceType128[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowCompression", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowedFeatures", typeof(dmSourceHTTPFeatureType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPVersion", typeof(dmHTTPVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxHdrCount", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxNameHdrLen", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxQueryStringLen", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxTotalHdrLen", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxURLLen", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxValueHdrLen", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PersistentConnections", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType128[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType128 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowCompression")]
        AllowCompression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowedFeatures")]
        AllowedFeatures,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPVersion")]
        HTTPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxHdrCount")]
        MaxHdrCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxNameHdrLen")]
        MaxNameHdrLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxQueryStringLen")]
        MaxQueryStringLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxTotalHdrLen")]
        MaxTotalHdrLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxURLLen")]
        MaxURLLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxValueHdrLen")]
        MaxValueHdrLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PersistentConnections")]
        PersistentConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWSGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMultiProtocolGateway))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyGatewayBase : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType127[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AllowCompression", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackAttachmentFormat", typeof(dmGatewayAttachmentFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackHTTPVersion", typeof(dmHTTPVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackPersistentTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackendUrl", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("CountMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugHistory", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugMode", typeof(dmDebugMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugTrigger", typeof(dmMSDebugTriggerType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultParamNamespace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoChunkedUpload", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoHostRewriting", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DurationMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FWCred", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FollowRedirects", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontAttachmentFormat", typeof(dmGatewayAttachmentFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontPersistentTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontProtocol", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GatewayParserLimits", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPClientIPLabel", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HeaderInjection", typeof(dmHeaderInjection), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HeaderSuppression", typeof(dmHeaderSuppression), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IncludeResponseTypeEncoding", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoadBalancerHashHeader", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoopDetection", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MIMEBackHeaders", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MIMEFrontHeaders", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxMessageSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MonitorProcessingPolicy", typeof(dmMonitorProcessingPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsAttachmentByteCount", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsAttributeCount", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsElementDepth", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsExternalReferences", typeof(dmExternalRefHandling), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsForbidExternalReferences", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsMaxNodeSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PersistentConnections", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Priority", typeof(dmSchedulerPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProcessHTTPErrors", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PropagateURI", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QueryParamNamespace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestAttachments", typeof(dmAttachmentMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestType", typeof(dmXMLReqRespType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseAttachments", typeof(dmAttachmentMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseType", typeof(dmXMLReqRespType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RootPartNotFirstAction", typeof(dmRootPartNotFirstAction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SOAPSchemaURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ServiceMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StreamOutputToBack", typeof(dmQuarantineMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StreamOutputToFront", typeof(dmQuarantineMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetParameters", typeof(dmStylesheetParameter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRewritePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSABackProtocol", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSADefaultFaultTo", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("WSADefaultReplyTo", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("WSAForce", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSAGenStyle", typeof(dmWSAOriginatedRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSAHTTPAsyncResponseCode", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSAMode", typeof(dmWSAModeType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSARequireAAA", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSARewriteFaultTo", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSARewriteReplyTo", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSARewriteTo", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSAStrip", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSATimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMAAAPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMBackAcksTo", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMBackCreateSequence", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMBackForce", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMDestinationAcceptCreateSequence", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMDestinationAcceptOffers", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMDestinationInOrder", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMDestinationMaximumInOrderQueueLength", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMDestinationMaximumSequences", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMEnabled", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMFrontAcksTo", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMFrontCreateSequence", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMFrontForce", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSequenceExpiration", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSourceExponentialBackoff", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSourceInactivityClose", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSourceMakeOffer", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSourceMaximumQueueLength", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSourceMaximumRetransmissions", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSourceMaximumSequences", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSourceRequestAckCount", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSourceRetransmissionInterval", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMUsesSequenceSSL", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType127[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmGatewayAttachmentFormat {
        
        /// <remarks/>
        dynamic,
        
        /// <remarks/>
        mime,
        
        /// <remarks/>
        dime,
        
        /// <remarks/>
        detect,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmHeaderInjection {
        
        private System.Nullable<dmHTTPHeaderLocationType> directionField;
        
        private string headerTagField;
        
        private string headerTagValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmHTTPHeaderLocationType> Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string HeaderTag {
            get {
                return this.headerTagField;
            }
            set {
                this.headerTagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string HeaderTagValue {
            get {
                return this.headerTagValueField;
            }
            set {
                this.headerTagValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmHTTPHeaderLocationType {
        
        /// <remarks/>
        front,
        
        /// <remarks/>
        back,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmHeaderSuppression {
        
        private System.Nullable<dmHTTPHeaderLocationType> directionField;
        
        private string headerTagField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmHTTPHeaderLocationType> Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string HeaderTag {
            get {
                return this.headerTagField;
            }
            set {
                this.headerTagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmMonitorProcessingPolicy {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("terminate-at-first-throttle")]
        terminateatfirstthrottle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("terminate-at-first-match")]
        terminateatfirstmatch,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmExternalRefHandling {
        
        /// <remarks/>
        forbid,
        
        /// <remarks/>
        ignore,
        
        /// <remarks/>
        allow,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmAttachmentMode {
        
        /// <remarks/>
        strip,
        
        /// <remarks/>
        reject,
        
        /// <remarks/>
        allow,
        
        /// <remarks/>
        streaming,
        
        /// <remarks/>
        unprocessed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmXMLReqRespType {
        
        /// <remarks/>
        soap,
        
        /// <remarks/>
        xml,
        
        /// <remarks/>
        unprocessed,
        
        /// <remarks/>
        preprocessed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmRootPartNotFirstAction {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("process-in-order")]
        processinorder,
        
        /// <remarks/>
        buffer,
        
        /// <remarks/>
        abort,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmStylesheetParameter {
        
        private string parameterNameField;
        
        private string parameterValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ParameterName {
            get {
                return this.parameterNameField;
            }
            set {
                this.parameterNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ParameterValue {
            get {
                return this.parameterValueField;
            }
            set {
                this.parameterValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSAOriginatedRequestType {
        
        /// <remarks/>
        sync,
        
        /// <remarks/>
        async,
        
        /// <remarks/>
        oob,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSAModeType {
        
        /// <remarks/>
        wsa2sync,
        
        /// <remarks/>
        sync2wsa,
        
        /// <remarks/>
        wsa2wsa,
        
        /// <remarks/>
        sync2sync,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType127 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowCompression")]
        AllowCompression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackAttachmentFormat")]
        BackAttachmentFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackHTTPVersion")]
        BackHTTPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackPersistentTimeout")]
        BackPersistentTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackTimeout")]
        BackTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackendUrl")]
        BackendUrl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CountMonitors")]
        CountMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugHistory")]
        DebugHistory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugMode")]
        DebugMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugTrigger")]
        DebugTrigger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultParamNamespace")]
        DefaultParamNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoChunkedUpload")]
        DoChunkedUpload,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoHostRewriting")]
        DoHostRewriting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DurationMonitors")]
        DurationMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FWCred")]
        FWCred,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FollowRedirects")]
        FollowRedirects,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontAttachmentFormat")]
        FrontAttachmentFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontPersistentTimeout")]
        FrontPersistentTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontProtocol")]
        FrontProtocol,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontTimeout")]
        FrontTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GatewayParserLimits")]
        GatewayParserLimits,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPClientIPLabel")]
        HTTPClientIPLabel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HeaderInjection")]
        HeaderInjection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HeaderSuppression")]
        HeaderSuppression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IncludeResponseTypeEncoding")]
        IncludeResponseTypeEncoding,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LoadBalancerHashHeader")]
        LoadBalancerHashHeader,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LoopDetection")]
        LoopDetection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MIMEBackHeaders")]
        MIMEBackHeaders,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MIMEFrontHeaders")]
        MIMEFrontHeaders,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxMessageSize")]
        MaxMessageSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MonitorProcessingPolicy")]
        MonitorProcessingPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsAttachmentByteCount")]
        ParserLimitsAttachmentByteCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsAttributeCount")]
        ParserLimitsAttributeCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsElementDepth")]
        ParserLimitsElementDepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsExternalReferences")]
        ParserLimitsExternalReferences,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsForbidExternalReferences")]
        ParserLimitsForbidExternalReferences,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsMaxNodeSize")]
        ParserLimitsMaxNodeSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PersistentConnections")]
        PersistentConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Priority")]
        Priority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ProcessHTTPErrors")]
        ProcessHTTPErrors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PropagateURI")]
        PropagateURI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QueryParamNamespace")]
        QueryParamNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestAttachments")]
        RequestAttachments,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestType")]
        RequestType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseAttachments")]
        ResponseAttachments,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseType")]
        ResponseType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RootPartNotFirstAction")]
        RootPartNotFirstAction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SOAPSchemaURL")]
        SOAPSchemaURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ServiceMonitors")]
        ServiceMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StreamOutputToBack")]
        StreamOutputToBack,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StreamOutputToFront")]
        StreamOutputToFront,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylesheetParameters")]
        StylesheetParameters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URLRewritePolicy")]
        URLRewritePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSABackProtocol")]
        WSABackProtocol,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSADefaultFaultTo")]
        WSADefaultFaultTo,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSADefaultReplyTo")]
        WSADefaultReplyTo,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSAForce")]
        WSAForce,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSAGenStyle")]
        WSAGenStyle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSAHTTPAsyncResponseCode")]
        WSAHTTPAsyncResponseCode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSAMode")]
        WSAMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSARequireAAA")]
        WSARequireAAA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSARewriteFaultTo")]
        WSARewriteFaultTo,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSARewriteReplyTo")]
        WSARewriteReplyTo,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSARewriteTo")]
        WSARewriteTo,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSAStrip")]
        WSAStrip,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSATimeout")]
        WSATimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMAAAPolicy")]
        WSRMAAAPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMBackAcksTo")]
        WSRMBackAcksTo,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMBackCreateSequence")]
        WSRMBackCreateSequence,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMBackForce")]
        WSRMBackForce,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMDestinationAcceptCreateSequence")]
        WSRMDestinationAcceptCreateSequence,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMDestinationAcceptOffers")]
        WSRMDestinationAcceptOffers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMDestinationInOrder")]
        WSRMDestinationInOrder,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMDestinationMaximumInOrderQueueLength")]
        WSRMDestinationMaximumInOrderQueueLength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMDestinationMaximumSequences")]
        WSRMDestinationMaximumSequences,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMEnabled")]
        WSRMEnabled,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMFrontAcksTo")]
        WSRMFrontAcksTo,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMFrontCreateSequence")]
        WSRMFrontCreateSequence,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMFrontForce")]
        WSRMFrontForce,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSequenceExpiration")]
        WSRMSequenceExpiration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSourceExponentialBackoff")]
        WSRMSourceExponentialBackoff,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSourceInactivityClose")]
        WSRMSourceInactivityClose,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSourceMakeOffer")]
        WSRMSourceMakeOffer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSourceMaximumQueueLength")]
        WSRMSourceMaximumQueueLength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSourceMaximumRetransmissions")]
        WSRMSourceMaximumRetransmissions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSourceMaximumSequences")]
        WSRMSourceMaximumSequences,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSourceRequestAckCount")]
        WSRMSourceRequestAckCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSourceRetransmissionInterval")]
        WSRMSourceRetransmissionInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMUsesSequenceSSL")]
        WSRMUsesSequenceSSL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyWSGateway : ModifyGatewayBase {
        
        private object[] items1Field;
        
        private Items1ChoiceType24[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AAAPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AutoCreateSources", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BaseWSDL", typeof(dmWSBaseWSDL), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DecryptKey", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EndpointRewritePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalEndpointRewrite", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OperationConformancePolicy", typeof(dmWSOperationConformancePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OperationPolicySubjectOptOut", typeof(dmWSOperationPolicySubjectOptOut), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OperationPriority", typeof(dmWSOperationSchedulerPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PolicyParameter", typeof(dmWSPolicyParameters), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReliableMessaging", typeof(dmWSOperationReliableMessaging), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteEndpointRewrite", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteFetchRetry", typeof(dmNetworkRetry), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SOAPActionPolicy", typeof(dmSOAPActionMatchPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmWSGatewayType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UDDISubscriptions", typeof(dmUDDIWSDLSource), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserToggles", typeof(dmWSUserToggles), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLCachePolicy", typeof(dmWSDLCachePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRRSubscriptions", typeof(dmWSRRWSDLSource), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType24[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSBaseWSDL {
        
        private string wSDLSourceLocationField;
        
        private string wSDLNameField;
        
        private dmReference policyAttachmentsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string WSDLSourceLocation {
            get {
                return this.wSDLSourceLocationField;
            }
            set {
                this.wSDLSourceLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string WSDLName {
            get {
                return this.wSDLNameField;
            }
            set {
                this.wSDLNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference PolicyAttachments {
            get {
                return this.policyAttachmentsField;
            }
            set {
                this.policyAttachmentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSOperationConformancePolicy {
        
        private dmReference conformancePolicyField;
        
        private dmWSDLComponentType conformancePolicyWSDLComponentTypeField;
        
        private string conformancePolicyWSDLComponentValueField;
        
        private dmReference conformancePolicySubscriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference ConformancePolicy {
            get {
                return this.conformancePolicyField;
            }
            set {
                this.conformancePolicyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmWSDLComponentType ConformancePolicyWSDLComponentType {
            get {
                return this.conformancePolicyWSDLComponentTypeField;
            }
            set {
                this.conformancePolicyWSDLComponentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ConformancePolicyWSDLComponentValue {
            get {
                return this.conformancePolicyWSDLComponentValueField;
            }
            set {
                this.conformancePolicyWSDLComponentValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference ConformancePolicySubscription {
            get {
                return this.conformancePolicySubscriptionField;
            }
            set {
                this.conformancePolicySubscriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSDLComponentType {
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        subscription,
        
        /// <remarks/>
        wsdl,
        
        /// <remarks/>
        service,
        
        /// <remarks/>
        port,
        
        /// <remarks/>
        operation,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSOperationPolicySubjectOptOut {
        
        private dmPolicySubjectBitmap ignoredSubjectsField;
        
        private dmWSDLComponentType policySubjectOptOutWSDLComponentTypeField;
        
        private string policySubjectOptOutWSDLComponentValueField;
        
        private dmReference policySubjectOptOutSubscriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmPolicySubjectBitmap IgnoredSubjects {
            get {
                return this.ignoredSubjectsField;
            }
            set {
                this.ignoredSubjectsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmWSDLComponentType PolicySubjectOptOutWSDLComponentType {
            get {
                return this.policySubjectOptOutWSDLComponentTypeField;
            }
            set {
                this.policySubjectOptOutWSDLComponentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PolicySubjectOptOutWSDLComponentValue {
            get {
                return this.policySubjectOptOutWSDLComponentValueField;
            }
            set {
                this.policySubjectOptOutWSDLComponentValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference PolicySubjectOptOutSubscription {
            get {
                return this.policySubjectOptOutSubscriptionField;
            }
            set {
                this.policySubjectOptOutSubscriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmPolicySubjectBitmap {
        
        private dmToggle serviceField;
        
        private bool serviceFieldSpecified;
        
        private dmToggle endpointField;
        
        private bool endpointFieldSpecified;
        
        private dmToggle operationField;
        
        private bool operationFieldSpecified;
        
        private dmToggle messageInField;
        
        private bool messageInFieldSpecified;
        
        private dmToggle messageOutField;
        
        private bool messageOutFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServiceSpecified {
            get {
                return this.serviceFieldSpecified;
            }
            set {
                this.serviceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Endpoint {
            get {
                return this.endpointField;
            }
            set {
                this.endpointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndpointSpecified {
            get {
                return this.endpointFieldSpecified;
            }
            set {
                this.endpointFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OperationSpecified {
            get {
                return this.operationFieldSpecified;
            }
            set {
                this.operationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle MessageIn {
            get {
                return this.messageInField;
            }
            set {
                this.messageInField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MessageInSpecified {
            get {
                return this.messageInFieldSpecified;
            }
            set {
                this.messageInFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle MessageOut {
            get {
                return this.messageOutField;
            }
            set {
                this.messageOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MessageOutSpecified {
            get {
                return this.messageOutFieldSpecified;
            }
            set {
                this.messageOutFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSOperationSchedulerPriority {
        
        private System.Nullable<dmSchedulerPriority> schedulerPriorityField;
        
        private dmWSDLComponentType schedulerPriorityWSDLComponentTypeField;
        
        private string schedulerPriorityWSDLComponentValueField;
        
        private dmReference schedulerPrioritySubscriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmSchedulerPriority> SchedulerPriority {
            get {
                return this.schedulerPriorityField;
            }
            set {
                this.schedulerPriorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmWSDLComponentType SchedulerPriorityWSDLComponentType {
            get {
                return this.schedulerPriorityWSDLComponentTypeField;
            }
            set {
                this.schedulerPriorityWSDLComponentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SchedulerPriorityWSDLComponentValue {
            get {
                return this.schedulerPriorityWSDLComponentValueField;
            }
            set {
                this.schedulerPriorityWSDLComponentValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference SchedulerPrioritySubscription {
            get {
                return this.schedulerPrioritySubscriptionField;
            }
            set {
                this.schedulerPrioritySubscriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSPolicyParameters {
        
        private dmReference policyParamParametersField;
        
        private dmWSDLComponentType policyParamWSDLComponentTypeField;
        
        private string policyParamWSDLComponentValueField;
        
        private dmReference policyParamSubscriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference PolicyParamParameters {
            get {
                return this.policyParamParametersField;
            }
            set {
                this.policyParamParametersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmWSDLComponentType PolicyParamWSDLComponentType {
            get {
                return this.policyParamWSDLComponentTypeField;
            }
            set {
                this.policyParamWSDLComponentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PolicyParamWSDLComponentValue {
            get {
                return this.policyParamWSDLComponentValueField;
            }
            set {
                this.policyParamWSDLComponentValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference PolicyParamSubscription {
            get {
                return this.policyParamSubscriptionField;
            }
            set {
                this.policyParamSubscriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSOperationReliableMessaging {
        
        private dmWSRMPolicyBitmap optionsField;
        
        private System.Nullable<dmWSRMPolicyDeliveryAssurance> deliveryAssuranceTypeField;
        
        private dmWSDLComponentType reliableMessagingWSDLComponentTypeField;
        
        private string reliableMessagingWSDLComponentValueField;
        
        private dmReference reliableMessagingSubscriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmWSRMPolicyBitmap Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmWSRMPolicyDeliveryAssurance> DeliveryAssuranceType {
            get {
                return this.deliveryAssuranceTypeField;
            }
            set {
                this.deliveryAssuranceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmWSDLComponentType ReliableMessagingWSDLComponentType {
            get {
                return this.reliableMessagingWSDLComponentTypeField;
            }
            set {
                this.reliableMessagingWSDLComponentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ReliableMessagingWSDLComponentValue {
            get {
                return this.reliableMessagingWSDLComponentValueField;
            }
            set {
                this.reliableMessagingWSDLComponentValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference ReliableMessagingSubscription {
            get {
                return this.reliableMessagingSubscriptionField;
            }
            set {
                this.reliableMessagingSubscriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSRMPolicyBitmap {
        
        private dmToggle optionalField;
        
        private bool optionalFieldSpecified;
        
        private dmToggle sequenceTransportSecurityField;
        
        private bool sequenceTransportSecurityFieldSpecified;
        
        private dmToggle inOrderField;
        
        private bool inOrderFieldSpecified;
        
        private dmToggle twoWayField;
        
        private bool twoWayFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Optional {
            get {
                return this.optionalField;
            }
            set {
                this.optionalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OptionalSpecified {
            get {
                return this.optionalFieldSpecified;
            }
            set {
                this.optionalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle SequenceTransportSecurity {
            get {
                return this.sequenceTransportSecurityField;
            }
            set {
                this.sequenceTransportSecurityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SequenceTransportSecuritySpecified {
            get {
                return this.sequenceTransportSecurityFieldSpecified;
            }
            set {
                this.sequenceTransportSecurityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle InOrder {
            get {
                return this.inOrderField;
            }
            set {
                this.inOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InOrderSpecified {
            get {
                return this.inOrderFieldSpecified;
            }
            set {
                this.inOrderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle TwoWay {
            get {
                return this.twoWayField;
            }
            set {
                this.twoWayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TwoWaySpecified {
            get {
                return this.twoWayFieldSpecified;
            }
            set {
                this.twoWayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSRMPolicyDeliveryAssurance {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("exactly-once")]
        exactlyonce,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmNetworkRetry {
        
        private System.Nullable<dmToggle> automaticRetryField;
        
        private System.Nullable<uint> retryIntervalField;
        
        private System.Nullable<uint> reportingIntervalField;
        
        private System.Nullable<uint> totalRetriesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> AutomaticRetry {
            get {
                return this.automaticRetryField;
            }
            set {
                this.automaticRetryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> RetryInterval {
            get {
                return this.retryIntervalField;
            }
            set {
                this.retryIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> ReportingInterval {
            get {
                return this.reportingIntervalField;
            }
            set {
                this.reportingIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> TotalRetries {
            get {
                return this.totalRetriesField;
            }
            set {
                this.totalRetriesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSOAPActionMatchPolicy {
        
        /// <remarks/>
        lax,
        
        /// <remarks/>
        strict,
        
        /// <remarks/>
        off,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSGatewayType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("static-backend")]
        staticbackend,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dynamic-backend")]
        dynamicbackend,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("static-from-wsdl")]
        staticfromwsdl,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmUDDIWSDLSource {
        
        private dmReference uDDISubscriptionField;
        
        private dmReference uDDIAttachmentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference UDDISubscription {
            get {
                return this.uDDISubscriptionField;
            }
            set {
                this.uDDISubscriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference UDDIAttachment {
            get {
                return this.uDDIAttachmentField;
            }
            set {
                this.uDDIAttachmentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSUserToggles {
        
        private string wSDLNameField;
        
        private string serviceNameField;
        
        private string servicePortNameField;
        
        private string portTypeNameField;
        
        private string bindingNameField;
        
        private string operationNameField;
        
        private dmWSDLUserPolicyToggles togglesField;
        
        private dmReference subscriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string WSDLName {
            get {
                return this.wSDLNameField;
            }
            set {
                this.wSDLNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ServiceName {
            get {
                return this.serviceNameField;
            }
            set {
                this.serviceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ServicePortName {
            get {
                return this.servicePortNameField;
            }
            set {
                this.servicePortNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PortTypeName {
            get {
                return this.portTypeNameField;
            }
            set {
                this.portTypeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string BindingName {
            get {
                return this.bindingNameField;
            }
            set {
                this.bindingNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OperationName {
            get {
                return this.operationNameField;
            }
            set {
                this.operationNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmWSDLUserPolicyToggles Toggles {
            get {
                return this.togglesField;
            }
            set {
                this.togglesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference Subscription {
            get {
                return this.subscriptionField;
            }
            set {
                this.subscriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSDLUserPolicyToggles {
        
        private dmToggle enableField;
        
        private bool enableFieldSpecified;
        
        private dmToggle publishField;
        
        private bool publishFieldSpecified;
        
        private dmToggle verifyFaultsField;
        
        private bool verifyFaultsFieldSpecified;
        
        private dmToggle verifyHeadersField;
        
        private bool verifyHeadersFieldSpecified;
        
        private dmToggle noRequestValidationField;
        
        private bool noRequestValidationFieldSpecified;
        
        private dmToggle noResponseValidationField;
        
        private bool noResponseValidationFieldSpecified;
        
        private dmToggle suppressFaultsElementsForRPCWrappersField;
        
        private bool suppressFaultsElementsForRPCWrappersFieldSpecified;
        
        private dmToggle noWSAField;
        
        private bool noWSAFieldSpecified;
        
        private dmToggle noWSRMField;
        
        private bool noWSRMFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Enable {
            get {
                return this.enableField;
            }
            set {
                this.enableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnableSpecified {
            get {
                return this.enableFieldSpecified;
            }
            set {
                this.enableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Publish {
            get {
                return this.publishField;
            }
            set {
                this.publishField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PublishSpecified {
            get {
                return this.publishFieldSpecified;
            }
            set {
                this.publishFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle VerifyFaults {
            get {
                return this.verifyFaultsField;
            }
            set {
                this.verifyFaultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VerifyFaultsSpecified {
            get {
                return this.verifyFaultsFieldSpecified;
            }
            set {
                this.verifyFaultsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle VerifyHeaders {
            get {
                return this.verifyHeadersField;
            }
            set {
                this.verifyHeadersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VerifyHeadersSpecified {
            get {
                return this.verifyHeadersFieldSpecified;
            }
            set {
                this.verifyHeadersFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle NoRequestValidation {
            get {
                return this.noRequestValidationField;
            }
            set {
                this.noRequestValidationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoRequestValidationSpecified {
            get {
                return this.noRequestValidationFieldSpecified;
            }
            set {
                this.noRequestValidationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle NoResponseValidation {
            get {
                return this.noResponseValidationField;
            }
            set {
                this.noResponseValidationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoResponseValidationSpecified {
            get {
                return this.noResponseValidationFieldSpecified;
            }
            set {
                this.noResponseValidationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle SuppressFaultsElementsForRPCWrappers {
            get {
                return this.suppressFaultsElementsForRPCWrappersField;
            }
            set {
                this.suppressFaultsElementsForRPCWrappersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuppressFaultsElementsForRPCWrappersSpecified {
            get {
                return this.suppressFaultsElementsForRPCWrappersFieldSpecified;
            }
            set {
                this.suppressFaultsElementsForRPCWrappersFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle NoWSA {
            get {
                return this.noWSAField;
            }
            set {
                this.noWSAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoWSASpecified {
            get {
                return this.noWSAFieldSpecified;
            }
            set {
                this.noWSAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle NoWSRM {
            get {
                return this.noWSRMField;
            }
            set {
                this.noWSRMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoWSRMSpecified {
            get {
                return this.noWSRMFieldSpecified;
            }
            set {
                this.noWSRMFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSDLCachePolicy {
        
        private string matchField;
        
        private System.Nullable<uint> tTLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Match {
            get {
                return this.matchField;
            }
            set {
                this.matchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> TTL {
            get {
                return this.tTLField;
            }
            set {
                this.tTLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSRRWSDLSource {
        
        private dmReference wSRRSubscriptionField;
        
        private dmReference wSRRAttachmentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference WSRRSubscription {
            get {
                return this.wSRRSubscriptionField;
            }
            set {
                this.wSRRSubscriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference WSRRAttachment {
            get {
                return this.wSRRAttachmentField;
            }
            set {
                this.wSRRAttachmentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType24 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AAAPolicy")]
        AAAPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AutoCreateSources")]
        AutoCreateSources,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BaseWSDL")]
        BaseWSDL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DecryptKey")]
        DecryptKey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EndpointRewritePolicy")]
        EndpointRewritePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalEndpointRewrite")]
        LocalEndpointRewrite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OperationConformancePolicy")]
        OperationConformancePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OperationPolicySubjectOptOut")]
        OperationPolicySubjectOptOut,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OperationPriority")]
        OperationPriority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PolicyParameter")]
        PolicyParameter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReliableMessaging")]
        ReliableMessaging,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteEndpointRewrite")]
        RemoteEndpointRewrite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteFetchRetry")]
        RemoteFetchRetry,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SOAPActionPolicy")]
        SOAPActionPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylePolicy")]
        StylePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Type")]
        Type,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UDDISubscriptions")]
        UDDISubscriptions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserToggles")]
        UserToggles,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLCachePolicy")]
        WSDLCachePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRRSubscriptions")]
        WSRRSubscriptions,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyMultiProtocolGateway : ModifyGatewayBase {
        
        private object[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StylePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmGatewayType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmGatewayType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("static-backend")]
        staticbackend,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dynamic-backend")]
        dynamicbackend,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("static-from-wsdl")]
        staticfromwsdl,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyLoadBalancerGroup : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType126[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Algorithm", typeof(dmLoadBalanceAlgorithm), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Damp", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LBGroupChecks", typeof(dmLBGroupCheck), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LBGroupMembers", typeof(dmLBGroupMember), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MasqueradeMember", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NeverReturnSickMember", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TryEveryServerBeforeFailing", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType126[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmLoadBalanceAlgorithm {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("round-robin")]
        roundrobin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("weighted-round-robin")]
        weightedroundrobin,
        
        /// <remarks/>
        hash,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("least-connections")]
        leastconnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("first-alive")]
        firstalive,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmLBGroupCheck {
        
        private dmToggle activeField;
        
        private string uRIField;
        
        private ushort portField;
        
        private dmLBHealthCheckType sSLField;
        
        private dmToggle postField;
        
        private string inputField;
        
        private uint timeoutField;
        
        private uint frequencyField;
        
        private string xPathField;
        
        private string filterField;
        
        private dmReference sSLProxyProfileField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string URI {
            get {
                return this.uRIField;
            }
            set {
                this.uRIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmLBHealthCheckType SSL {
            get {
                return this.sSLField;
            }
            set {
                this.sSLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Post {
            get {
                return this.postField;
            }
            set {
                this.postField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string Input {
            get {
                return this.inputField;
            }
            set {
                this.inputField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Timeout {
            get {
                return this.timeoutField;
            }
            set {
                this.timeoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string XPath {
            get {
                return this.xPathField;
            }
            set {
                this.xPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference SSLProxyProfile {
            get {
                return this.sSLProxyProfileField;
            }
            set {
                this.sSLProxyProfileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmLBHealthCheckType {
        
        /// <remarks/>
        Standard,
        
        /// <remarks/>
        LDAP,
        
        /// <remarks/>
        IMSConnect,
        
        /// <remarks/>
        on,
        
        /// <remarks/>
        off,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmLBGroupMember {
        
        private string serverField;
        
        private System.Nullable<uint> weightField;
        
        private System.Nullable<ushort> mappedPortField;
        
        private string activityField;
        
        private System.Nullable<ushort> healthPortField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> MappedPort {
            get {
                return this.mappedPortField;
            }
            set {
                this.mappedPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Activity {
            get {
                return this.activityField;
            }
            set {
                this.activityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> HealthPort {
            get {
                return this.healthPortField;
            }
            set {
                this.healthPortField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType126 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Algorithm")]
        Algorithm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Damp")]
        Damp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LBGroupChecks")]
        LBGroupChecks,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LBGroupMembers")]
        LBGroupMembers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MasqueradeMember")]
        MasqueradeMember,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NeverReturnSickMember")]
        NeverReturnSickMember,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TryEveryServerBeforeFailing")]
        TryEveryServerBeforeFailing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyIncludeConfig : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType125[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("InterfaceDetection", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OnStartup", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType125[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType125 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":InterfaceDetection")]
        InterfaceDetection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OnStartup")]
        OnStartup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URL")]
        URL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyImportPackage : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType124[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DestinationDomain", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ImportFormat", typeof(dmImportFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OnStartup", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OverwriteFiles", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OverwriteObjects", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType124[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmImportFormat {
        
        /// <remarks/>
        ZIP,
        
        /// <remarks/>
        XML,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType124 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DestinationDomain")]
        DestinationDomain,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ImportFormat")]
        ImportFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OnStartup")]
        OnStartup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OverwriteFiles")]
        OverwriteFiles,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OverwriteObjects")]
        OverwriteObjects,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URL")]
        URL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyAccessControlList : ModifyConfigBase {
        
        private dmACE[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AccessControlEntry", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmACE[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmACE {
        
        private dmACEAccess accessField;
        
        private string addressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmACEAccess Access {
            get {
                return this.accessField;
            }
            set {
                this.accessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmACEAccess {
        
        /// <remarks/>
        allow,
        
        /// <remarks/>
        deny,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDynamicSchema))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySchemaExceptionMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDynamicStylesheet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDocumentCryptoMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyXPathRoutingMap))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyDynamicXMLContentMap : ModifyConfigBase {
        
        private string[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySchemaExceptionMap))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyDynamicSchema : ModifyDynamicXMLContentMap {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifySchemaExceptionMap : ModifyDynamicSchema {
        
        private object[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OriginalSchemaURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("SchemaExceptionRules", typeof(dmSchemaExceptionRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmSchemaExceptionRule {
        
        private string xPathField;
        
        private dmSchemaExceptionType exceptionTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string XPath {
            get {
                return this.xPathField;
            }
            set {
                this.xPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmSchemaExceptionType ExceptionType {
            get {
                return this.exceptionTypeField;
            }
            set {
                this.exceptionTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSchemaExceptionType {
        
        /// <remarks/>
        AllowEncrypted,
        
        /// <remarks/>
        RequireEncrypted,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDocumentCryptoMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyXPathRoutingMap))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyDynamicStylesheet : ModifyDynamicXMLContentMap {
        
        private dmNamespaceMapping[] items1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NameSpaceMappings", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmNamespaceMapping[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyDocumentCryptoMap : ModifyDynamicStylesheet {
        
        private object[] items2Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Operation", typeof(dmCryptoOperationType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XPath", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items2 {
            get {
                return this.items2Field;
            }
            set {
                this.items2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCryptoOperationType {
        
        /// <remarks/>
        encrypt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("encrypt-wssec")]
        encryptwssec,
        
        /// <remarks/>
        decrypt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sign-wssec")]
        signwssec,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyXPathRoutingMap : ModifyDynamicStylesheet {
        
        private dmXPathRoutingRule[] items2Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("XPathRoutingRules", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmXPathRoutingRule[] Items2 {
            get {
                return this.items2Field;
            }
            set {
                this.items2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmXPathRoutingRule {
        
        private string xPathField;
        
        private string hostField;
        
        private ushort portField;
        
        private dmToggle sSLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string XPath {
            get {
                return this.xPathField;
            }
            set {
                this.xPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle SSL {
            get {
                return this.sSLField;
            }
            set {
                this.sSLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyHTTPInputConversionMap : ModifyConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DefaultInputEncoding", typeof(dmHTTPInputEncoding), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InputEncoding", typeof(dmInputEncoding), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmHTTPInputEncoding {
        
        /// <remarks/>
        plain,
        
        /// <remarks/>
        urlencoded,
        
        /// <remarks/>
        xml,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("urlencoded-xml")]
        urlencodedxml,
        
        /// <remarks/>
        base64,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("base64-text")]
        base64text,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("base64-xml")]
        base64xml,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmInputEncoding {
        
        private string inputMatchField;
        
        private System.Nullable<dmHTTPInputEncoding> encodingField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string InputMatch {
            get {
                return this.inputMatchField;
            }
            set {
                this.inputMatchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmHTTPInputEncoding> Encoding {
            get {
                return this.encodingField;
            }
            set {
                this.encodingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyWebServiceMonitor : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType123[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EndpointName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EndpointURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("FrontendURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Operations", typeof(dmWSSLMOps), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Transport", typeof(dmWSDLTransport), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType123[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSSLMOps {
        
        private dmOperation operationField;
        
        private dmSLMTarget targetField;
        
        private dmSLMLevel severityField;
        
        private System.Nullable<uint> thresholdField;
        
        private System.Nullable<dmSLMAction> actionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmOperation Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmSLMTarget Target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmSLMLevel Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> Threshold {
            get {
                return this.thresholdField;
            }
            set {
                this.thresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmSLMAction> Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmOperation {
        
        /// <remarks/>
        all,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSLMTarget {
        
        /// <remarks/>
        front,
        
        /// <remarks/>
        rate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSLMLevel {
        
        /// <remarks/>
        low,
        
        /// <remarks/>
        high,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSLMAction {
        
        /// <remarks/>
        log,
        
        /// <remarks/>
        throttle,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSDLTransport {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http-get")]
        httpget,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http-post")]
        httppost,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("soap-doc")]
        soapdoc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("soap-rpc")]
        soaprpc,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType123 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EndpointName")]
        EndpointName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EndpointURL")]
        EndpointURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontendURL")]
        FrontendURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Operations")]
        Operations,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Transport")]
        Transport,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLURL")]
        WSDLURL,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyFilterAction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMessageMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDurationMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCountMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMessageType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMessageMatching))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyMessageFlowControl : ModifyConfigBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyFilterAction : ModifyMessageFlowControl {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BlockInterval", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogLevel", typeof(dmLogLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmFilterActionType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDurationMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCountMonitor))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyMessageMonitor : ModifyMessageFlowControl {
        
        private object[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MessageType", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyDurationMonitor : ModifyMessageMonitor {
        
        private object[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filter", typeof(dmDurationMonitorFilter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Measure", typeof(dmDurationMonitorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmDurationMonitorFilter {
        
        private string nameField;
        
        private uint valueField;
        
        private dmReference actionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyCountMonitor : ModifyMessageMonitor {
        
        private object[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filter", typeof(dmCountMonitorFilter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Header", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxSources", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Measure", typeof(dmCountMonitorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Source", typeof(dmCountMonitorSource), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmCountMonitorFilter {
        
        private string nameField;
        
        private uint intervalField;
        
        private uint rateLimitField;
        
        private uint burstLimitField;
        
        private dmReference actionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Interval {
            get {
                return this.intervalField;
            }
            set {
                this.intervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RateLimit {
            get {
                return this.rateLimitField;
            }
            set {
                this.rateLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint BurstLimit {
            get {
                return this.burstLimitField;
            }
            set {
                this.burstLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCountMonitorSource {
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("each-ip")]
        eachip,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ip-from-header")]
        ipfromheader,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyMessageType : ModifyMessageFlowControl {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Matching", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyMessageMatching : ModifyMessageFlowControl {
        
        private object[] itemsField;
        
        private ItemsChoiceType122[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTPHeader", typeof(dmHTTPHeader), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPHeaderExclude", typeof(dmHTTPHeader), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPMethod", typeof(dmHTTPMethod), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IPAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IPExclude", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType122[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmHTTPHeader {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmHTTPMethod {
        
        /// <remarks/>
        any,
        
        /// <remarks/>
        OPTIONS,
        
        /// <remarks/>
        GET,
        
        /// <remarks/>
        HEAD,
        
        /// <remarks/>
        POST,
        
        /// <remarks/>
        PUT,
        
        /// <remarks/>
        DELETE,
        
        /// <remarks/>
        TRACE,
        
        /// <remarks/>
        CONNECT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType122 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPHeader")]
        HTTPHeader,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPHeaderExclude")]
        HTTPHeaderExclude,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPMethod")]
        HTTPMethod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IPAddress")]
        IPAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IPExclude")]
        IPExclude,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestURL")]
        RequestURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyLogTarget))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyEventlog : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType121[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ArchiveMode", typeof(dmLogFileArchiveMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Cert", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EmailAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EncryptAlgorithm", typeof(dmCryptoEncryptAlgorithm), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EncryptMode", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FeedbackDetection", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Format", typeof(dmLogFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IdentCredential", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IdenticalEventPeriod", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IdenticalEventSuppression", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalFile", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalIdentifier", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogEventCode", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogEventFilter", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogObjects", typeof(dmLogObject), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NFSFile", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NFSMount", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RateLimit", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteDirectory", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteLogin", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemotePassword", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemotePort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rotate", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SMTPDomain", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxyProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SenderAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SignAlgorithm", typeof(dmCryptoSignAlgorithm), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SigningMode", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Size", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SoapVersion", typeof(dmSoapVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SyslogFacility", typeof(dmSyslogFacility), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TimestampFormat", typeof(dmLogTimestampFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmLogType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UploadMethod", typeof(dmLogFileUploadMethod), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UseANSIColor", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType121[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmLogFileArchiveMode {
        
        /// <remarks/>
        rotate,
        
        /// <remarks/>
        upload,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCryptoEncryptAlgorithm {
        
        /// <remarks/>
        smime,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmLogFormat {
        
        /// <remarks/>
        text,
        
        /// <remarks/>
        raw,
        
        /// <remarks/>
        xml,
        
        /// <remarks/>
        cbe,
        
        /// <remarks/>
        csv,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmLogObject {
        
        private string classField;
        
        private string objectField;
        
        private System.Nullable<dmToggle> followReferencesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> FollowReferences {
            get {
                return this.followReferencesField;
            }
            set {
                this.followReferencesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCryptoSignAlgorithm {
        
        /// <remarks/>
        smime,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSoapVersion {
        
        /// <remarks/>
        soap11,
        
        /// <remarks/>
        soap12,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSyslogFacility {
        
        /// <remarks/>
        user,
        
        /// <remarks/>
        security,
        
        /// <remarks/>
        authpriv,
        
        /// <remarks/>
        local0,
        
        /// <remarks/>
        local1,
        
        /// <remarks/>
        local2,
        
        /// <remarks/>
        local3,
        
        /// <remarks/>
        local4,
        
        /// <remarks/>
        local5,
        
        /// <remarks/>
        local6,
        
        /// <remarks/>
        local7,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmLogTimestampFormat {
        
        /// <remarks/>
        syslog,
        
        /// <remarks/>
        numeric,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmLogType {
        
        /// <remarks/>
        console,
        
        /// <remarks/>
        cache,
        
        /// <remarks/>
        syslog,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("syslog-ng")]
        syslogng,
        
        /// <remarks/>
        smtp,
        
        /// <remarks/>
        file,
        
        /// <remarks/>
        soap,
        
        /// <remarks/>
        snmp,
        
        /// <remarks/>
        nfs,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmLogFileUploadMethod {
        
        /// <remarks/>
        ftp,
        
        /// <remarks/>
        scp,
        
        /// <remarks/>
        sftp,
        
        /// <remarks/>
        smtp,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType121 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ArchiveMode")]
        ArchiveMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Cert")]
        Cert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EmailAddress")]
        EmailAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EncryptAlgorithm")]
        EncryptAlgorithm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EncryptMode")]
        EncryptMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FeedbackDetection")]
        FeedbackDetection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Format")]
        Format,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IdentCredential")]
        IdentCredential,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IdenticalEventPeriod")]
        IdenticalEventPeriod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IdenticalEventSuppression")]
        IdenticalEventSuppression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalFile")]
        LocalFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalIdentifier")]
        LocalIdentifier,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogEventCode")]
        LogEventCode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogEventFilter")]
        LogEventFilter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogObjects")]
        LogObjects,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NFSFile")]
        NFSFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NFSMount")]
        NFSMount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RateLimit")]
        RateLimit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteAddress")]
        RemoteAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteDirectory")]
        RemoteDirectory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteLogin")]
        RemoteLogin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemotePassword")]
        RemotePassword,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemotePort")]
        RemotePort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Rotate")]
        Rotate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SMTPDomain")]
        SMTPDomain,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxyProfile")]
        SSLProxyProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SenderAddress")]
        SenderAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SignAlgorithm")]
        SignAlgorithm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SigningMode")]
        SigningMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Size")]
        Size,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SoapVersion")]
        SoapVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SyslogFacility")]
        SyslogFacility,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TimestampFormat")]
        TimestampFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Type")]
        Type,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URL")]
        URL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UploadMethod")]
        UploadMethod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UseANSIColor")]
        UseANSIColor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyLogTarget : ModifyEventlog {
        
        private object[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Backup", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogEvents", typeof(dmLogEvent), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmLogEvent {
        
        private dmReference classField;
        
        private System.Nullable<dmLogLevel> priorityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference Class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmLogLevel> Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyLogLabel : ModifyConfigBase {
        
        private string[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoKerberosKeytab))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoKerberosKDC))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySSLProxyProfile))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoProfile))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoFWCred))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoValCred))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoIdentCred))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoCertificate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoSSKey))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCryptoKey))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCRLFetch))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyCertMonitor))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyCrypto : ModifyConfigBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyCryptoKerberosKeytab : ModifyCrypto {
        
        private object[] itemsField;
        
        private ItemsChoiceType120[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filename", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UseReplayCache", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType120[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType120 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Filename")]
        Filename,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UseReplayCache")]
        UseReplayCache,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyCryptoKerberosKDC : ModifyCrypto {
        
        private object[] itemsField;
        
        private ItemsChoiceType119[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Realm", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Server", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ServerPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UDPTimeout", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UseTCP", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType119[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType119 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Realm")]
        Realm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Server")]
        Server,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ServerPort")]
        ServerPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UDPTimeout")]
        UDPTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UseTCP")]
        UseTCP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifySSLProxyProfile : ModifyCrypto {
        
        private object[] itemsField;
        
        private ItemsChoiceType118[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CacheSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ClientAuthOptional", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ClientCache", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Direction", typeof(dmSSLProxyDirection), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ForwardCryptoProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReverseCryptoProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ServerCaching", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SessionTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType118[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSSLProxyDirection {
        
        /// <remarks/>
        forward,
        
        /// <remarks/>
        reverse,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("two-way")]
        twoway,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType118 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CacheSize")]
        CacheSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ClientAuthOptional")]
        ClientAuthOptional,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ClientCache")]
        ClientCache,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Direction")]
        Direction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ForwardCryptoProfile")]
        ForwardCryptoProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReverseCryptoProfile")]
        ReverseCryptoProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ServerCaching")]
        ServerCaching,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SessionTimeout")]
        SessionTimeout,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyCryptoProfile : ModifyCrypto {
        
        private object[] itemsField;
        
        private ItemsChoiceType117[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Ciphers", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ClientCAList", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IdentCredential", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLOptions", typeof(dmSSLOptionType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ValCredential", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType117[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmSSLOptionType {
        
        private dmToggle openSSLdefaultField;
        
        private bool openSSLdefaultFieldSpecified;
        
        private dmToggle disableSSLv2Field;
        
        private bool disableSSLv2FieldSpecified;
        
        private dmToggle disableSSLv3Field;
        
        private bool disableSSLv3FieldSpecified;
        
        private dmToggle disableTLSv1Field;
        
        private bool disableTLSv1FieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OpenSSL-default", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle OpenSSLdefault {
            get {
                return this.openSSLdefaultField;
            }
            set {
                this.openSSLdefaultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OpenSSLdefaultSpecified {
            get {
                return this.openSSLdefaultFieldSpecified;
            }
            set {
                this.openSSLdefaultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Disable-SSLv2", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle DisableSSLv2 {
            get {
                return this.disableSSLv2Field;
            }
            set {
                this.disableSSLv2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisableSSLv2Specified {
            get {
                return this.disableSSLv2FieldSpecified;
            }
            set {
                this.disableSSLv2FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Disable-SSLv3", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle DisableSSLv3 {
            get {
                return this.disableSSLv3Field;
            }
            set {
                this.disableSSLv3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisableSSLv3Specified {
            get {
                return this.disableSSLv3FieldSpecified;
            }
            set {
                this.disableSSLv3FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Disable-TLSv1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle DisableTLSv1 {
            get {
                return this.disableTLSv1Field;
            }
            set {
                this.disableTLSv1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisableTLSv1Specified {
            get {
                return this.disableTLSv1FieldSpecified;
            }
            set {
                this.disableTLSv1FieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType117 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Ciphers")]
        Ciphers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ClientCAList")]
        ClientCAList,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IdentCredential")]
        IdentCredential,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLOptions")]
        SSLOptions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ValCredential")]
        ValCredential,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyCryptoFWCred : ModifyCrypto {
        
        private dmReference[] itemsField;
        
        private ItemsChoiceType116[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Certificate", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PrivateKey", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SharedSecretKey", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public dmReference[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType116[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType116 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Certificate")]
        Certificate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PrivateKey")]
        PrivateKey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SharedSecretKey")]
        SharedSecretKey,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyCryptoValCred : ModifyCrypto {
        
        private object[] itemsField;
        
        private ItemsChoiceType115[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CRLDPHandling", typeof(dmCRLDPHandling), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CertValidationMode", typeof(dmCryptoValCredCertValidationMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Certificate", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ExplicitPolicy", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InitialPolicySet", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequireCRL", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UseCRL", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType115[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCRLDPHandling {
        
        /// <remarks/>
        ignore,
        
        /// <remarks/>
        require,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCryptoValCredCertValidationMode {
        
        /// <remarks/>
        legacy,
        
        /// <remarks/>
        pkix,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType115 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CRLDPHandling")]
        CRLDPHandling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CertValidationMode")]
        CertValidationMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Certificate")]
        Certificate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ExplicitPolicy")]
        ExplicitPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":InitialPolicySet")]
        InitialPolicySet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequireCRL")]
        RequireCRL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UseCRL")]
        UseCRL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyCryptoIdentCred : ModifyCrypto {
        
        private dmReference[] itemsField;
        
        private ItemsChoiceType114[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CA", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Certificate", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Key", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public dmReference[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType114[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType114 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CA")]
        CA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Certificate")]
        Certificate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Key")]
        Key,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyCryptoCertificate : ModifyCrypto {
        
        private object[] itemsField;
        
        private ItemsChoiceType113[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filename", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("IgnoreExpiration", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Password", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PasswordAlias", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType113[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType113 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Filename")]
        Filename,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IgnoreExpiration")]
        IgnoreExpiration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Password")]
        Password,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PasswordAlias")]
        PasswordAlias,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyCryptoSSKey : ModifyCrypto {
        
        private string[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filename", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyCryptoKey : ModifyCrypto {
        
        private object[] itemsField;
        
        private ItemsChoiceType112[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filename", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("Password", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PasswordAlias", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType112[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType112 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Filename")]
        Filename,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Password")]
        Password,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PasswordAlias")]
        PasswordAlias,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyCRLFetch : ModifyCrypto {
        
        private dmCRLFetchConfig[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CRLFetchConfig", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmCRLFetchConfig[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmCRLFetchConfig {
        
        private string nameField;
        
        private dmCRLFetchType fetchTypeField;
        
        private dmReference issuerValcredField;
        
        private uint refreshIntervalField;
        
        private string cryptographicProfileField;
        
        private string uRLField;
        
        private string remoteAddressField;
        
        private System.Nullable<ushort> remotePortField;
        
        private string dnField;
        
        private string bindDNField;
        
        private string bindPassField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmCRLFetchType FetchType {
            get {
                return this.fetchTypeField;
            }
            set {
                this.fetchTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference IssuerValcred {
            get {
                return this.issuerValcredField;
            }
            set {
                this.issuerValcredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint RefreshInterval {
            get {
                return this.refreshIntervalField;
            }
            set {
                this.refreshIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string CryptographicProfile {
            get {
                return this.cryptographicProfileField;
            }
            set {
                this.cryptographicProfileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string RemoteAddress {
            get {
                return this.remoteAddressField;
            }
            set {
                this.remoteAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> RemotePort {
            get {
                return this.remotePortField;
            }
            set {
                this.remotePortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string DN {
            get {
                return this.dnField;
            }
            set {
                this.dnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string BindDN {
            get {
                return this.bindDNField;
            }
            set {
                this.bindDNField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string BindPass {
            get {
                return this.bindPassField;
            }
            set {
                this.bindPassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCRLFetchType {
        
        /// <remarks/>
        http,
        
        /// <remarks/>
        ldap,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyCertMonitor : ModifyCrypto {
        
        private object[] itemsField;
        
        private ItemsChoiceType111[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DisableExpiredCerts", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogLevel", typeof(dmLogLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PollingInterval", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReminderTime", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType111[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType111 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DisableExpiredCerts")]
        DisableExpiredCerts,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogLevel")]
        LogLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PollingInterval")]
        PollingInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReminderTime")]
        ReminderTime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class Modifyxmltrace : ModifyConfigBase {
        
        private dmXMLTracingMode[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Mode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmXMLTracingMode[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyXMLManager : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType103[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CacheSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CompileOptionsPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DocCacheMaxDocs", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DocCachePolicy", typeof(dmDocCachePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DocCacheSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ExtensionFunctions", typeof(dmExtensionFunction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsAttributeCount", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsBytesScanned", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsElementDepth", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsExternalReferences", typeof(dmExternalRefHandling), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsForbidExternalReferences", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsMaxNodeSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SHA1Caching", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ScheduledRule", typeof(dmScheduledRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SchemaValidation", typeof(dmSchemaValidation), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SearchResults", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StaticDocumentCalls", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRefreshPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserAgent", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("VirtualServers", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType103[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmDocCachePolicy {
        
        private string matchField;
        
        private dmDocCachePolicyType typeField;
        
        private System.Nullable<uint> tTLField;
        
        private uint priorityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Match {
            get {
                return this.matchField;
            }
            set {
                this.matchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmDocCachePolicyType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> TTL {
            get {
                return this.tTLField;
            }
            set {
                this.tTLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmDocCachePolicyType {
        
        /// <remarks/>
        protocol,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("no-cache")]
        nocache,
        
        /// <remarks/>
        @fixed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmExtensionFunction {
        
        private string extensionFunctionNamespaceField;
        
        private string extensionFunctionField;
        
        private string localFunctionNamespaceField;
        
        private string localFunctionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExtensionFunctionNamespace {
            get {
                return this.extensionFunctionNamespaceField;
            }
            set {
                this.extensionFunctionNamespaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExtensionFunction {
            get {
                return this.extensionFunctionField;
            }
            set {
                this.extensionFunctionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LocalFunctionNamespace {
            get {
                return this.localFunctionNamespaceField;
            }
            set {
                this.localFunctionNamespaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LocalFunction {
            get {
                return this.localFunctionField;
            }
            set {
                this.localFunctionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmScheduledRule {
        
        private dmReference ruleField;
        
        private System.Nullable<uint> intervalField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Rule {
            get {
                return this.ruleField;
            }
            set {
                this.ruleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> Interval {
            get {
                return this.intervalField;
            }
            set {
                this.intervalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmSchemaValidation {
        
        private dmReference matchingField;
        
        private dmValidationMode validationModeField;
        
        private string schemaURLField;
        
        private dmReference uRLRewritePolicyField;
        
        private dmReference dynamicSchemaField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Matching {
            get {
                return this.matchingField;
            }
            set {
                this.matchingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmValidationMode ValidationMode {
            get {
                return this.validationModeField;
            }
            set {
                this.validationModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string SchemaURL {
            get {
                return this.schemaURLField;
            }
            set {
                this.schemaURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference URLRewritePolicy {
            get {
                return this.uRLRewritePolicyField;
            }
            set {
                this.uRLRewritePolicyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference DynamicSchema {
            get {
                return this.dynamicSchemaField;
            }
            set {
                this.dynamicSchemaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmValidationMode {
        
        /// <remarks/>
        @default,
        
        /// <remarks/>
        schema,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("schema-rewrite")]
        schemarewrite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("attribute-rewrite")]
        attributerewrite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dynamic-schema")]
        dynamicschema,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType103 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CacheSize")]
        CacheSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CompileOptionsPolicy")]
        CompileOptionsPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DocCacheMaxDocs")]
        DocCacheMaxDocs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DocCachePolicy")]
        DocCachePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DocCacheSize")]
        DocCacheSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ExtensionFunctions")]
        ExtensionFunctions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsAttributeCount")]
        ParserLimitsAttributeCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsBytesScanned")]
        ParserLimitsBytesScanned,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsElementDepth")]
        ParserLimitsElementDepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsExternalReferences")]
        ParserLimitsExternalReferences,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsForbidExternalReferences")]
        ParserLimitsForbidExternalReferences,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsMaxNodeSize")]
        ParserLimitsMaxNodeSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SHA1Caching")]
        SHA1Caching,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ScheduledRule")]
        ScheduledRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SchemaValidation")]
        SchemaValidation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SearchResults")]
        SearchResults,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StaticDocumentCalls")]
        StaticDocumentCalls,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URLRefreshPolicy")]
        URLRefreshPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserAgent")]
        UserAgent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":VirtualServers")]
        VirtualServers,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWebSphereJMSServer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyTibcoEMSServer))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyJMSServer : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType102[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AutoRetry", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultMessageType", typeof(dmJMSMessageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EnableLogging", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaximumMessageSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MemoryThreshold", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Password", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RetryInterval", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SessionsPerConnection", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TotalConnectionLimit", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Transactional", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType102[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmJMSMessageType {
        
        /// <remarks/>
        @byte,
        
        /// <remarks/>
        text,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType102 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AutoRetry")]
        AutoRetry,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultMessageType")]
        DefaultMessageType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EnableLogging")]
        EnableLogging,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaximumMessageSize")]
        MaximumMessageSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MemoryThreshold")]
        MemoryThreshold,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Password")]
        Password,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RetryInterval")]
        RetryInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProfile")]
        SSLProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SessionsPerConnection")]
        SessionsPerConnection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TotalConnectionLimit")]
        TotalConnectionLimit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Transactional")]
        Transactional,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserName")]
        UserName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyWebSphereJMSServer : ModifyJMSServer {
        
        private object[] items1Field;
        
        private Items1ChoiceType23[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Endpoint", typeof(dmWebSphereJMSEndpoint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FIPS", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MessagingBus", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLCipher", typeof(dmWebSphereJMSSSLCipher), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TargetTransportChain", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType23[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWebSphereJMSEndpoint {
        
        private string hostField;
        
        private ushort portField;
        
        private dmWebSphereJMSTransport transportField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmWebSphereJMSTransport Transport {
            get {
                return this.transportField;
            }
            set {
                this.transportField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWebSphereJMSTransport {
        
        /// <remarks/>
        TCP,
        
        /// <remarks/>
        SSL,
        
        /// <remarks/>
        HTTP,
        
        /// <remarks/>
        HTTPS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWebSphereJMSSSLCipher {
        
        /// <remarks/>
        SSL_RSA_WITH_NULL_MD5,
        
        /// <remarks/>
        SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5,
        
        /// <remarks/>
        SSL_RSA_EXPORT_WITH_RC4_40_MD5,
        
        /// <remarks/>
        SSL_RSA_WITH_RC4_128_MD5,
        
        /// <remarks/>
        SSL_RSA_WITH_NULL_SHA,
        
        /// <remarks/>
        SSL_RSA_EXPORT1024_WITH_RC4_56_SHA,
        
        /// <remarks/>
        SSL_RSA_WITH_RC4_128_SHA,
        
        /// <remarks/>
        SSL_RSA_WITH_DES_CBC_SHA,
        
        /// <remarks/>
        SSL_RSA_EXPORT1024_WITH_DES_CBC_SHA,
        
        /// <remarks/>
        SSL_RSA_FIPS_WITH_DES_CBC_SHA,
        
        /// <remarks/>
        SSL_RSA_WITH_3DES_EDE_CBC_SHA,
        
        /// <remarks/>
        SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA,
        
        /// <remarks/>
        TLS_RSA_WITH_DES_CBC_SHA,
        
        /// <remarks/>
        TLS_RSA_WITH_3DES_EDE_CBC_SHA,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType23 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Endpoint")]
        Endpoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FIPS")]
        FIPS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MessagingBus")]
        MessagingBus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLCipher")]
        SSLCipher,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TargetTransportChain")]
        TargetTransportChain,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyTibcoEMSServer : ModifyJMSServer {
        
        private string[] items1Field;
        
        private Items1ChoiceType22[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ConnectionClientID", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HostName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public string[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType22[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType22 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ConnectionClientID")]
        ConnectionClientID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HostName")]
        HostName,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMQGW))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMQQMBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMQQMGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMQQM))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMQproxy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMQhost))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyMQConfiguration : ModifyConfigBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyMQGW : ModifyMQConfiguration {
        
        private object[] itemsField;
        
        private ItemsChoiceType101[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Client", typeof(dmMQclient), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Direction", typeof(dmNodeDirection), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QueueManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Server", typeof(dmMQserver), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType101[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmMQclient {
        
        private string clientGetQueueField;
        
        private string clientPutQueueField;
        
        private System.Nullable<ushort> clientPortField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ClientGetQueue {
            get {
                return this.clientGetQueueField;
            }
            set {
                this.clientGetQueueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ClientPutQueue {
            get {
                return this.clientPutQueueField;
            }
            set {
                this.clientPutQueueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> ClientPort {
            get {
                return this.clientPortField;
            }
            set {
                this.clientPortField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmNodeDirection {
        
        /// <remarks/>
        MQ2HTTP,
        
        /// <remarks/>
        HTTP2MQ,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmMQserver {
        
        private string serverGetQueueField;
        
        private string serverPutQueueField;
        
        private System.Nullable<ushort> serverPortField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ServerGetQueue {
            get {
                return this.serverGetQueueField;
            }
            set {
                this.serverGetQueueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ServerPutQueue {
            get {
                return this.serverPutQueueField;
            }
            set {
                this.serverPutQueueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> ServerPort {
            get {
                return this.serverPortField;
            }
            set {
                this.serverPortField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType101 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Client")]
        Client,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Direction")]
        Direction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QueueManager")]
        QueueManager,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Server")]
        Server,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URL")]
        URL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMQQMGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMQQM))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyMQQMBase : ModifyMQConfiguration {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyMQQMGroup : ModifyMQQMBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType100[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BackupQueueManagers", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PrimaryQueueManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType100[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType100 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackupQueueManagers")]
        BackupQueueManagers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PrimaryQueueManager")]
        PrimaryQueueManager,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyMQQM : ModifyMQQMBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType99[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AlternateUser", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AutoRetry", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AutomaticBackout", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackoutQueueName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackoutThreshold", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CCSID", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CacheTimeout", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ChannelName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ConvertInput", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Heartbeat", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HostName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InitialConnections", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaximumMessageSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QMname", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReportingInterval", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RetryInterval", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxyProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLcipher", typeof(dmMQSSLCiphers), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLkey", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("TotalConnectionLimit", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UnitsOfWork", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType99[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmMQSSLCiphers {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        NULL_MD5,
        
        /// <remarks/>
        NULL_SHA,
        
        /// <remarks/>
        RC4_MD5_EXPORT,
        
        /// <remarks/>
        RC4_MD5_US,
        
        /// <remarks/>
        RC4_SHA_US,
        
        /// <remarks/>
        RC2_MD5_EXPORT,
        
        /// <remarks/>
        DES_SHA_EXPORT,
        
        /// <remarks/>
        RC4_56_SHA_EXPORT1024,
        
        /// <remarks/>
        DES_SHA_EXPORT1024,
        
        /// <remarks/>
        TRIPLE_DES_SHA_US,
        
        /// <remarks/>
        TLS_RSA_WITH_AES_128_CBC_SHA,
        
        /// <remarks/>
        TLS_RSA_WITH_AES_256_CBC_SHA,
        
        /// <remarks/>
        AES_SHA_US,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType99 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AlternateUser")]
        AlternateUser,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AutoRetry")]
        AutoRetry,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AutomaticBackout")]
        AutomaticBackout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackoutQueueName")]
        BackoutQueueName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackoutThreshold")]
        BackoutThreshold,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CCSID")]
        CCSID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CacheTimeout")]
        CacheTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ChannelName")]
        ChannelName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ConvertInput")]
        ConvertInput,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Heartbeat")]
        Heartbeat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HostName")]
        HostName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":InitialConnections")]
        InitialConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaximumMessageSize")]
        MaximumMessageSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QMname")]
        QMname,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReportingInterval")]
        ReportingInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RetryInterval")]
        RetryInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxyProfile")]
        SSLProxyProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLcipher")]
        SSLcipher,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLkey")]
        SSLkey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TotalConnectionLimit")]
        TotalConnectionLimit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UnitsOfWork")]
        UnitsOfWork,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserName")]
        UserName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyMQproxy : ModifyMQConfiguration {
        
        private object[] itemsField;
        
        private ItemsChoiceType98[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BackAttachmentFormat", typeof(dmAttachmentFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackQueueManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Concurrent", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ContentType", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CountMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Credentials", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugHistory", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugMode", typeof(dmDebugMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugTrigger", typeof(dmMQMSDebugTriggerType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultParameterNamespace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DurationMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorStylePolicyRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FirewallExtensions", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontAttachmentFormat", typeof(dmAttachmentFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontQueueManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestAttachments", typeof(dmAttachmentMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestGetQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestPutQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestStylePolicyRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestType", typeof(dmXMLReqRespType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseAttachments", typeof(dmAttachmentMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseGetQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponsePutQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseStylePolicyRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseType", typeof(dmXMLReqRespType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RootPartNotFirstAction", typeof(dmRootPartNotFirstAction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SOAPSchemaURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetParameters", typeof(dmStylesheetParameter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WaitTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType98[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmAttachmentFormat {
        
        /// <remarks/>
        dynamic,
        
        /// <remarks/>
        mime,
        
        /// <remarks/>
        dime,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmMQMSDebugTriggerType {
        
        private System.Nullable<dmProcessingType> ruleTypeField;
        
        private string xPathField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmProcessingType> RuleType {
            get {
                return this.ruleTypeField;
            }
            set {
                this.ruleTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string XPath {
            get {
                return this.xPathField;
            }
            set {
                this.xPathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType98 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackAttachmentFormat")]
        BackAttachmentFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackQueueManager")]
        BackQueueManager,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Concurrent")]
        Concurrent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ContentType")]
        ContentType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CountMonitors")]
        CountMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Credentials")]
        Credentials,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugHistory")]
        DebugHistory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugMode")]
        DebugMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugTrigger")]
        DebugTrigger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultParameterNamespace")]
        DefaultParameterNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DurationMonitors")]
        DurationMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorStylePolicyRule")]
        ErrorStylePolicyRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FirewallExtensions")]
        FirewallExtensions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontAttachmentFormat")]
        FrontAttachmentFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontQueueManager")]
        FrontQueueManager,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestAttachments")]
        RequestAttachments,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestGetQueue")]
        RequestGetQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestPutQueue")]
        RequestPutQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestStylePolicyRule")]
        RequestStylePolicyRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestType")]
        RequestType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseAttachments")]
        ResponseAttachments,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseGetQueue")]
        ResponseGetQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponsePutQueue")]
        ResponsePutQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseStylePolicyRule")]
        ResponseStylePolicyRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseType")]
        ResponseType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RootPartNotFirstAction")]
        RootPartNotFirstAction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SOAPSchemaURL")]
        SOAPSchemaURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylesheetParameters")]
        StylesheetParameters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WaitTimeout")]
        WaitTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyMQhost : ModifyMQConfiguration {
        
        private object[] itemsField;
        
        private ItemsChoiceType97[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AttachmentsMode", typeof(dmAttachmentMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackAttachmentFormat", typeof(dmAttachmentFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CodePage", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ContentType", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CountMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Credentials", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugHistory", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugMode", typeof(dmDebugMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugTrigger", typeof(dmMQMSDebugTriggerType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultParameterNamespace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DurationMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FirewallExtensions", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontAttachmentFormat", typeof(dmAttachmentFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GetQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MessageType", typeof(dmXMLReqRespType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PutQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QueueManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SOAPSchemaURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicyRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetParameters", typeof(dmStylesheetParameter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType97[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType97 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AttachmentsMode")]
        AttachmentsMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackAttachmentFormat")]
        BackAttachmentFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CodePage")]
        CodePage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ContentType")]
        ContentType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CountMonitors")]
        CountMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Credentials")]
        Credentials,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugHistory")]
        DebugHistory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugMode")]
        DebugMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugTrigger")]
        DebugTrigger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultParameterNamespace")]
        DefaultParameterNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DurationMonitors")]
        DurationMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FirewallExtensions")]
        FirewallExtensions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontAttachmentFormat")]
        FrontAttachmentFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GetQueue")]
        GetQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MessageType")]
        MessageType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PutQueue")]
        PutQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QueueManager")]
        QueueManager,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SOAPSchemaURL")]
        SOAPSchemaURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylePolicyRule")]
        StylePolicyRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylesheetParameters")]
        StylesheetParameters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyMatching : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType96[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CombineWithOr", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MatchRules", typeof(dmMatchRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MatchWithPCRE", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType96[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmMatchRule {
        
        private dmMatchType typeField;
        
        private string httpTagField;
        
        private string httpValueField;
        
        private string urlField;
        
        private string errorCodeField;
        
        private string xPATHExpressionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmMatchType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string HttpTag {
            get {
                return this.httpTagField;
            }
            set {
                this.httpTagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string HttpValue {
            get {
                return this.httpValueField;
            }
            set {
                this.httpValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string XPATHExpression {
            get {
                return this.xPATHExpressionField;
            }
            set {
                this.xPATHExpressionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmMatchType {
        
        /// <remarks/>
        url,
        
        /// <remarks/>
        http,
        
        /// <remarks/>
        errorcode,
        
        /// <remarks/>
        xpath,
        
        /// <remarks/>
        fullyqualifiedurl,
        
        /// <remarks/>
        host,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType96 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CombineWithOr")]
        CombineWithOr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MatchRules")]
        MatchRules,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MatchWithPCRE")]
        MatchWithPCRE,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyWSEndpointRewritePolicy : ModifyConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSEndpointLocalRewriteRule", typeof(dmWSEndpointLocalRewriteRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSEndpointPublishRewriteRule", typeof(dmWSEndpointPublishRewriteRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSEndpointRemoteRewriteRule", typeof(dmWSEndpointRemoteRewriteRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSEndpointSubscriptionLocalRule", typeof(dmWSEndpointSubscriptionLocalRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSEndpointSubscriptionPublishRule", typeof(dmWSEndpointSubscriptionPublishRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSEndpointSubscriptionRemoteRule", typeof(dmWSEndpointSubscriptionRemoteRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSEndpointLocalRewriteRule {
        
        private string servicePortMatchRegexpField;
        
        private System.Nullable<dmWSProtocolType> localEndpointProtocolField;
        
        private string localEndpointHostnameField;
        
        private System.Nullable<ushort> localEndpointPortField;
        
        private string localEndpointURIField;
        
        private dmReference frontProtocolField;
        
        private System.Nullable<dmToggle> useFrontProtocolField;
        
        private System.Nullable<dmWSDLBindingProtocol> wSDLBindingProtocolField;
        
        private string frontsidePortSuffixField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ServicePortMatchRegexp {
            get {
                return this.servicePortMatchRegexpField;
            }
            set {
                this.servicePortMatchRegexpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmWSProtocolType> LocalEndpointProtocol {
            get {
                return this.localEndpointProtocolField;
            }
            set {
                this.localEndpointProtocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LocalEndpointHostname {
            get {
                return this.localEndpointHostnameField;
            }
            set {
                this.localEndpointHostnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> LocalEndpointPort {
            get {
                return this.localEndpointPortField;
            }
            set {
                this.localEndpointPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LocalEndpointURI {
            get {
                return this.localEndpointURIField;
            }
            set {
                this.localEndpointURIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference FrontProtocol {
            get {
                return this.frontProtocolField;
            }
            set {
                this.frontProtocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> UseFrontProtocol {
            get {
                return this.useFrontProtocolField;
            }
            set {
                this.useFrontProtocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmWSDLBindingProtocol> WSDLBindingProtocol {
            get {
                return this.wSDLBindingProtocolField;
            }
            set {
                this.wSDLBindingProtocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FrontsidePortSuffix {
            get {
                return this.frontsidePortSuffixField;
            }
            set {
                this.frontsidePortSuffixField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSProtocolType {
        
        /// <remarks/>
        @default,
        
        /// <remarks/>
        http,
        
        /// <remarks/>
        https,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSEndpointPublishRewriteRule {
        
        private string servicePortMatchRegexpField;
        
        private System.Nullable<dmWSProtocolType> publishedEndpointProtocolField;
        
        private string publishedEndpointHostnameField;
        
        private System.Nullable<ushort> publishedEndpointPortField;
        
        private string publishedEndpointURIField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ServicePortMatchRegexp {
            get {
                return this.servicePortMatchRegexpField;
            }
            set {
                this.servicePortMatchRegexpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmWSProtocolType> PublishedEndpointProtocol {
            get {
                return this.publishedEndpointProtocolField;
            }
            set {
                this.publishedEndpointProtocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PublishedEndpointHostname {
            get {
                return this.publishedEndpointHostnameField;
            }
            set {
                this.publishedEndpointHostnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> PublishedEndpointPort {
            get {
                return this.publishedEndpointPortField;
            }
            set {
                this.publishedEndpointPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PublishedEndpointURI {
            get {
                return this.publishedEndpointURIField;
            }
            set {
                this.publishedEndpointURIField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSEndpointRemoteRewriteRule {
        
        private string servicePortMatchRegexpField;
        
        private System.Nullable<dmWSProtocolType> remoteEndpointProtocolField;
        
        private string remoteEndpointHostnameField;
        
        private System.Nullable<ushort> remoteEndpointPortField;
        
        private string remoteEndpointURIField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ServicePortMatchRegexp {
            get {
                return this.servicePortMatchRegexpField;
            }
            set {
                this.servicePortMatchRegexpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmWSProtocolType> RemoteEndpointProtocol {
            get {
                return this.remoteEndpointProtocolField;
            }
            set {
                this.remoteEndpointProtocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RemoteEndpointHostname {
            get {
                return this.remoteEndpointHostnameField;
            }
            set {
                this.remoteEndpointHostnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> RemoteEndpointPort {
            get {
                return this.remoteEndpointPortField;
            }
            set {
                this.remoteEndpointPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string RemoteEndpointURI {
            get {
                return this.remoteEndpointURIField;
            }
            set {
                this.remoteEndpointURIField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSEndpointSubscriptionLocalRule {
        
        private dmReference subscriptionField;
        
        private System.Nullable<dmWSProtocolType> localEndpointProtocolField;
        
        private string localEndpointHostnameField;
        
        private System.Nullable<ushort> localEndpointPortField;
        
        private string localEndpointURIField;
        
        private dmReference frontProtocolField;
        
        private System.Nullable<dmToggle> useFrontProtocolField;
        
        private System.Nullable<dmWSDLBindingProtocol> wSDLBindingProtocolField;
        
        private string frontsidePortSuffixField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference Subscription {
            get {
                return this.subscriptionField;
            }
            set {
                this.subscriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmWSProtocolType> LocalEndpointProtocol {
            get {
                return this.localEndpointProtocolField;
            }
            set {
                this.localEndpointProtocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LocalEndpointHostname {
            get {
                return this.localEndpointHostnameField;
            }
            set {
                this.localEndpointHostnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> LocalEndpointPort {
            get {
                return this.localEndpointPortField;
            }
            set {
                this.localEndpointPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LocalEndpointURI {
            get {
                return this.localEndpointURIField;
            }
            set {
                this.localEndpointURIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference FrontProtocol {
            get {
                return this.frontProtocolField;
            }
            set {
                this.frontProtocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> UseFrontProtocol {
            get {
                return this.useFrontProtocolField;
            }
            set {
                this.useFrontProtocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmWSDLBindingProtocol> WSDLBindingProtocol {
            get {
                return this.wSDLBindingProtocolField;
            }
            set {
                this.wSDLBindingProtocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string FrontsidePortSuffix {
            get {
                return this.frontsidePortSuffixField;
            }
            set {
                this.frontsidePortSuffixField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSEndpointSubscriptionPublishRule {
        
        private dmReference subscriptionField;
        
        private System.Nullable<dmWSProtocolType> publishedEndpointProtocolField;
        
        private string publishedEndpointHostnameField;
        
        private System.Nullable<ushort> publishedEndpointPortField;
        
        private string publishedEndpointURIField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference Subscription {
            get {
                return this.subscriptionField;
            }
            set {
                this.subscriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmWSProtocolType> PublishedEndpointProtocol {
            get {
                return this.publishedEndpointProtocolField;
            }
            set {
                this.publishedEndpointProtocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PublishedEndpointHostname {
            get {
                return this.publishedEndpointHostnameField;
            }
            set {
                this.publishedEndpointHostnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> PublishedEndpointPort {
            get {
                return this.publishedEndpointPortField;
            }
            set {
                this.publishedEndpointPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PublishedEndpointURI {
            get {
                return this.publishedEndpointURIField;
            }
            set {
                this.publishedEndpointURIField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSEndpointSubscriptionRemoteRule {
        
        private dmReference subscriptionField;
        
        private System.Nullable<dmWSProtocolType> remoteEndpointProtocolField;
        
        private string remoteEndpointHostnameField;
        
        private System.Nullable<ushort> remoteEndpointPortField;
        
        private string remoteEndpointURIField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference Subscription {
            get {
                return this.subscriptionField;
            }
            set {
                this.subscriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmWSProtocolType> RemoteEndpointProtocol {
            get {
                return this.remoteEndpointProtocolField;
            }
            set {
                this.remoteEndpointProtocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RemoteEndpointHostname {
            get {
                return this.remoteEndpointHostnameField;
            }
            set {
                this.remoteEndpointHostnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> RemoteEndpointPort {
            get {
                return this.remoteEndpointPortField;
            }
            set {
                this.remoteEndpointPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string RemoteEndpointURI {
            get {
                return this.remoteEndpointURIField;
            }
            set {
                this.remoteEndpointURIField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyURLRewritePolicy : ModifyConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Direction", typeof(dmURLRewriteDirection), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRewriteRule", typeof(dmURLRewriteRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmURLRewriteDirection {
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        request,
        
        /// <remarks/>
        response,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmURLRewriteRule {
        
        private dmURLRewriteType typeField;
        
        private string matchRegexpField;
        
        private string inputReplaceRegexpField;
        
        private string styleReplaceRegexpField;
        
        private System.Nullable<dmToggle> inputUnescapeField;
        
        private System.Nullable<dmToggle> stylesheetUnescapeField;
        
        private string headerField;
        
        private System.Nullable<dmToggle> normalizeURLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmURLRewriteType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MatchRegexp {
            get {
                return this.matchRegexpField;
            }
            set {
                this.matchRegexpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string InputReplaceRegexp {
            get {
                return this.inputReplaceRegexpField;
            }
            set {
                this.inputReplaceRegexpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string StyleReplaceRegexp {
            get {
                return this.styleReplaceRegexpField;
            }
            set {
                this.styleReplaceRegexpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> InputUnescape {
            get {
                return this.inputUnescapeField;
            }
            set {
                this.inputUnescapeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> StylesheetUnescape {
            get {
                return this.stylesheetUnescapeField;
            }
            set {
                this.stylesheetUnescapeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> NormalizeURL {
            get {
                return this.normalizeURLField;
            }
            set {
                this.normalizeURLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmURLRewriteType {
        
        /// <remarks/>
        rewrite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("absolute-rewrite")]
        absoluterewrite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("post-body")]
        postbody,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("header-rewrite")]
        headerrewrite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("content-type")]
        contenttype,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyCompileOptionsPolicy : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType95[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AllowSoapEncArray", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Debug", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DisallowXG4", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MinimumEscaping", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PreferXG4", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Profile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StackSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Stream", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Strict", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TryStream", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ValidateSoapEncArray", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLStrictSOAPVersion", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLValidateBody", typeof(dmWSDLValidationMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLValidateFaults", typeof(dmWSDLValidationMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLValidateHeaders", typeof(dmWSDLValidationMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLWrappedFaults", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSIValidation", typeof(dmWSIValidationMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WildcardsIgnoreXsiType", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XSLTVersion", typeof(dmXSLTVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType95[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSDLValidationMode {
        
        /// <remarks/>
        strict,
        
        /// <remarks/>
        lax,
        
        /// <remarks/>
        skip,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSIValidationMode {
        
        /// <remarks/>
        ignore,
        
        /// <remarks/>
        warn,
        
        /// <remarks/>
        fail,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmXSLTVersion {
        
        /// <remarks/>
        XSLT10,
        
        /// <remarks/>
        XSLT20,
        
        /// <remarks/>
        StylesheetSpecified,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType95 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowSoapEncArray")]
        AllowSoapEncArray,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Debug")]
        Debug,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DisallowXG4")]
        DisallowXG4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MinimumEscaping")]
        MinimumEscaping,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PreferXG4")]
        PreferXG4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Profile")]
        Profile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StackSize")]
        StackSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Stream")]
        Stream,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Strict")]
        Strict,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TryStream")]
        TryStream,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ValidateSoapEncArray")]
        ValidateSoapEncArray,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLStrictSOAPVersion")]
        WSDLStrictSOAPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLValidateBody")]
        WSDLValidateBody,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLValidateFaults")]
        WSDLValidateFaults,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLValidateHeaders")]
        WSDLValidateHeaders,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLWrappedFaults")]
        WSDLWrappedFaults,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSIValidation")]
        WSIValidation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WildcardsIgnoreXsiType")]
        WildcardsIgnoreXsiType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XSLTVersion")]
        XSLTVersion,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyURLRefreshPolicy : ModifyConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("URLRefreshRule", typeof(dmURLRefreshRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmURLRefreshRule {
        
        private dmReference uRLMapField;
        
        private System.Nullable<dmURLRefreshPolicyType> uRLRefreshPolicyField;
        
        private System.Nullable<uint> uRLRefreshIntervalField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference URLMap {
            get {
                return this.uRLMapField;
            }
            set {
                this.uRLMapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmURLRefreshPolicyType> URLRefreshPolicy {
            get {
                return this.uRLRefreshPolicyField;
            }
            set {
                this.uRLRefreshPolicyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> URLRefreshInterval {
            get {
                return this.uRLRefreshIntervalField;
            }
            set {
                this.uRLRefreshIntervalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmURLRefreshPolicyType {
        
        /// <remarks/>
        @default,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("no-cache")]
        nocache,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("no-flush")]
        noflush,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protocol-specified")]
        protocolspecified,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyURLMap : ModifyConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("URLMapRule", typeof(dmURLMapRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmURLMapRule {
        
        private string patternField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Pattern {
            get {
                return this.patternField;
            }
            set {
                this.patternField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyWSStylePolicy : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType94[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DefStylesheetForSoap", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("DefStylesheetForXsl", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("PolicyMaps", typeof(dmWSMPolicyMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType94[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSMPolicyMap {
        
        private dmWSDLComponentType wSDLComponentTypeField;
        
        private string wSDLComponentValueField;
        
        private dmReference matchField;
        
        private dmReference ruleField;
        
        private dmReference subscriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmWSDLComponentType WSDLComponentType {
            get {
                return this.wSDLComponentTypeField;
            }
            set {
                this.wSDLComponentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string WSDLComponentValue {
            get {
                return this.wSDLComponentValueField;
            }
            set {
                this.wSDLComponentValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Match {
            get {
                return this.matchField;
            }
            set {
                this.matchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Rule {
            get {
                return this.ruleField;
            }
            set {
                this.ruleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference Subscription {
            get {
                return this.subscriptionField;
            }
            set {
                this.subscriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType94 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefStylesheetForSoap")]
        DefStylesheetForSoap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefStylesheetForXsl")]
        DefStylesheetForXsl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PolicyMaps")]
        PolicyMaps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyStylePolicy : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType93[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DefStylesheetForSoap", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("DefStylesheetForXsl", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("PolicyMaps", typeof(dmPolicyMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType93[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType93 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefStylesheetForSoap")]
        DefStylesheetForSoap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefStylesheetForXsl")]
        DefStylesheetForXsl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PolicyMaps")]
        PolicyMaps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWSStylePolicyRule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyStylePolicyRule))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyStylePolicyRuleBase : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType92[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Direction", typeof(dmStyleRuleDirection), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InputFormat", typeof(dmStyleRuleFilterFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NonXMLProcessing", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OutputFormat", typeof(dmStyleRuleFilterFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Unprocessed", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType92[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmStyleRuleDirection {
        
        /// <remarks/>
        rule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("request-rule")]
        requestrule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("response-rule")]
        responserule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("error-rule")]
        errorrule,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmStyleRuleFilterFormat {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        gzip,
        
        /// <remarks/>
        pkzip,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType92 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Direction")]
        Direction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":InputFormat")]
        InputFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NonXMLProcessing")]
        NonXMLProcessing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OutputFormat")]
        OutputFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Unprocessed")]
        Unprocessed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyWSStylePolicyRule : ModifyStylePolicyRuleBase {
        
        private dmReference[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Actions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyStylePolicyRule : ModifyStylePolicyRuleBase {
        
        private dmReference[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Actions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyStylePolicyAction : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType91[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AAA", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AsyncAction", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Asynchronous", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AttachmentURI", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CheckpointEvent", typeof(dmCheckpointEvent), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Condition", typeof(dmCondition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Destination", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("DynamicSchema", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DynamicStylesheet", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorInput", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorMode", typeof(dmStyleErrorMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorOutput", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Input", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InputConversion", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IteratorCount", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IteratorExpression", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IteratorType", typeof(dmIteratorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogLevel", typeof(dmLogLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogType", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoopAction", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MultipleOutputs", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NamedInOutLocationType", typeof(dmNamedInOutLocationType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NamedInputs", typeof(dmNamedInOut), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NamedOutputs", typeof(dmNamedInOut), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Output", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OutputType", typeof(dmActionOutputType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Policy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResultsMode", typeof(dmResultsMultiWayMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RetryCount", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RetryInterval", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rule", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMPolicy", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SOAPValidation", typeof(dmSOAPValidation), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SQLDataSource", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SQLSourceType", typeof(dmSQLSourceType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SQLText", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLCred", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SchemaURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetParameters", typeof(dmStylesheetParameter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Timeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Transactional", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Transform", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TxMap", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TxMode", typeof(dmTxMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TxTopLevelMap", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmStyleActionType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Value", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Variable", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("WSDLAttachmentPart", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLMessageDirectionOrName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLOperationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLPortQName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WsdlURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("XPath", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType91[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCheckpointEvent {
        
        /// <remarks/>
        Request,
        
        /// <remarks/>
        Response,
        
        /// <remarks/>
        Fault,
        
        /// <remarks/>
        AuthComplete,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmCondition {
        
        private string expressionField;
        
        private string conditionActionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Expression {
            get {
                return this.expressionField;
            }
            set {
                this.expressionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ConditionAction {
            get {
                return this.conditionActionField;
            }
            set {
                this.conditionActionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmStyleErrorMode {
        
        /// <remarks/>
        abort,
        
        /// <remarks/>
        @continue,
        
        /// <remarks/>
        alternative,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmIteratorType {
        
        /// <remarks/>
        XPATH,
        
        /// <remarks/>
        COUNT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmNamedInOutLocationType {
        
        /// <remarks/>
        @default,
        
        /// <remarks/>
        @explicit,
        
        /// <remarks/>
        dynamic,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmNamedInOut {
        
        private string nameField;
        
        private string contextField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmActionOutputType {
        
        /// <remarks/>
        @default,
        
        /// <remarks/>
        binary,
        
        /// <remarks/>
        xml,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmResultsMultiWayMode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("first-available")]
        firstavailable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("require-all")]
        requireall,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("attempt-all")]
        attemptall,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSOAPValidation {
        
        /// <remarks/>
        body,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("body-or-detail")]
        bodyordetail,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ignore-faults")]
        ignorefaults,
        
        /// <remarks/>
        envelope,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSQLSourceType {
        
        /// <remarks/>
        @static,
        
        /// <remarks/>
        variable,
        
        /// <remarks/>
        stylesheet,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmTxMode {
        
        /// <remarks/>
        @default,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("no-map")]
        nomap,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmStyleActionType {
        
        /// <remarks/>
        validate,
        
        /// <remarks/>
        filter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("route-action")]
        routeaction,
        
        /// <remarks/>
        aaa,
        
        /// <remarks/>
        xformpi,
        
        /// <remarks/>
        xformbin,
        
        /// <remarks/>
        cryptobin,
        
        /// <remarks/>
        xform,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("convert-http")]
        converthttp,
        
        /// <remarks/>
        log,
        
        /// <remarks/>
        results,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("results-async")]
        resultsasync,
        
        /// <remarks/>
        setvar,
        
        /// <remarks/>
        fetch,
        
        /// <remarks/>
        extract,
        
        /// <remarks/>
        rewrite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("route-set")]
        routeset,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("strip-attachments")]
        stripattachments,
        
        /// <remarks/>
        call,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("on-error")]
        onerror,
        
        /// <remarks/>
        checkpoint,
        
        /// <remarks/>
        slm,
        
        /// <remarks/>
        sql,
        
        /// <remarks/>
        conditional,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("for-each")]
        @foreach,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("event-sink")]
        eventsink,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType91 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AAA")]
        AAA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AsyncAction")]
        AsyncAction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Asynchronous")]
        Asynchronous,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AttachmentURI")]
        AttachmentURI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CheckpointEvent")]
        CheckpointEvent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Condition")]
        Condition,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Destination")]
        Destination,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DynamicSchema")]
        DynamicSchema,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DynamicStylesheet")]
        DynamicStylesheet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorInput")]
        ErrorInput,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorMode")]
        ErrorMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorOutput")]
        ErrorOutput,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Input")]
        Input,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":InputConversion")]
        InputConversion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IteratorCount")]
        IteratorCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IteratorExpression")]
        IteratorExpression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IteratorType")]
        IteratorType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogLevel")]
        LogLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogType")]
        LogType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LoopAction")]
        LoopAction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MultipleOutputs")]
        MultipleOutputs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NamedInOutLocationType")]
        NamedInOutLocationType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NamedInputs")]
        NamedInputs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NamedOutputs")]
        NamedOutputs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Output")]
        Output,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OutputType")]
        OutputType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Policy")]
        Policy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResultsMode")]
        ResultsMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RetryCount")]
        RetryCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RetryInterval")]
        RetryInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Rule")]
        Rule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SLMPolicy")]
        SLMPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SOAPValidation")]
        SOAPValidation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SQLDataSource")]
        SQLDataSource,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SQLSourceType")]
        SQLSourceType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SQLText")]
        SQLText,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLCred")]
        SSLCred,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SchemaURL")]
        SchemaURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylesheetParameters")]
        StylesheetParameters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Timeout")]
        Timeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Transactional")]
        Transactional,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Transform")]
        Transform,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TxMap")]
        TxMap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TxMode")]
        TxMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TxTopLevelMap")]
        TxTopLevelMap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Type")]
        Type,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Value")]
        Value,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Variable")]
        Variable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLAttachmentPart")]
        WSDLAttachmentPart,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLMessageDirectionOrName")]
        WSDLMessageDirectionOrName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLOperationName")]
        WSDLOperationName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLPortQName")]
        WSDLPortQName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WsdlURL")]
        WsdlURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XPath")]
        XPath,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDeviceManagementService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMgmtInterface))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWebGUI))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySSHService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyTelnetService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyXSLCoprocService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyHTTPProxyService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyXMLFirewallService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyXSLProxyService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySSLProxyService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyTCPProxyService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyHTTPService))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyService : ModifyConfigBase {
        
        private string[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyMgmtInterface))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyWebGUI))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySSHService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyTelnetService))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyDeviceManagementService : ModifyService {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyMgmtInterface : ModifyDeviceManagementService {
        
        private object[] items1Field;
        
        private Items1ChoiceType21[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mode", typeof(dmXMLMgmtModes), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMPeering", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserAgent", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSManagement", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType21[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmXMLMgmtModes {
        
        private dmToggle anyField;
        
        private bool anyFieldSpecified;
        
        private dmToggle somaField;
        
        private bool somaFieldSpecified;
        
        private dmToggle v2004Field;
        
        private bool v2004FieldSpecified;
        
        private dmToggle ampField;
        
        private bool ampFieldSpecified;
        
        private dmToggle slmField;
        
        private bool slmFieldSpecified;
        
        private dmToggle wsmField;
        
        private bool wsmFieldSpecified;
        
        private dmToggle wsdmField;
        
        private bool wsdmFieldSpecified;
        
        private dmToggle uddisubscriptionField;
        
        private bool uddisubscriptionFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool anySpecified {
            get {
                return this.anyFieldSpecified;
            }
            set {
                this.anyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle soma {
            get {
                return this.somaField;
            }
            set {
                this.somaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool somaSpecified {
            get {
                return this.somaFieldSpecified;
            }
            set {
                this.somaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle v2004 {
            get {
                return this.v2004Field;
            }
            set {
                this.v2004Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool v2004Specified {
            get {
                return this.v2004FieldSpecified;
            }
            set {
                this.v2004FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle amp {
            get {
                return this.ampField;
            }
            set {
                this.ampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ampSpecified {
            get {
                return this.ampFieldSpecified;
            }
            set {
                this.ampFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle slm {
            get {
                return this.slmField;
            }
            set {
                this.slmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool slmSpecified {
            get {
                return this.slmFieldSpecified;
            }
            set {
                this.slmFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle wsm {
            get {
                return this.wsmField;
            }
            set {
                this.wsmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wsmSpecified {
            get {
                return this.wsmFieldSpecified;
            }
            set {
                this.wsmFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle wsdm {
            get {
                return this.wsdmField;
            }
            set {
                this.wsdmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wsdmSpecified {
            get {
                return this.wsdmFieldSpecified;
            }
            set {
                this.wsdmFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uddi-subscription", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle uddisubscription {
            get {
                return this.uddisubscriptionField;
            }
            set {
                this.uddisubscriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uddisubscriptionSpecified {
            get {
                return this.uddisubscriptionFieldSpecified;
            }
            set {
                this.uddisubscriptionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType21 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Mode")]
        Mode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SLMPeering")]
        SLMPeering,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserAgent")]
        UserAgent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSManagement")]
        WSManagement,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyWebGUI : ModifyDeviceManagementService {
        
        private object[] items1Field;
        
        private Items1ChoiceType20[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IdleTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SaveConfigOverwrites", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserAgent", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType20[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType20 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IdleTimeout")]
        IdleTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SaveConfigOverwrites")]
        SaveConfigOverwrites,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserAgent")]
        UserAgent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifySSHService : ModifyDeviceManagementService {
        
        private object[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyTelnetService : ModifyDeviceManagementService {
        
        private object[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyXSLCoprocService : ModifyService {
        
        private object[] items1Field;
        
        private Items1ChoiceType19[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CacheRelativeURL", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ConnectionTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoExtensions", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugHistory", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugMode", typeof(dmDebugMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugTrigger", typeof(dmMSDebugTriggerType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultParamNamespace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IntermediateResultTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Priority", typeof(dmSchedulerPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicyRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRewritePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UseClientURIResolver", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType19[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType19 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CacheRelativeURL")]
        CacheRelativeURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ConnectionTimeout")]
        ConnectionTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CryptoExtensions")]
        CryptoExtensions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugHistory")]
        DebugHistory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugMode")]
        DebugMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugTrigger")]
        DebugTrigger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultParamNamespace")]
        DefaultParamNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IntermediateResultTimeout")]
        IntermediateResultTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Priority")]
        Priority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylePolicyRule")]
        StylePolicyRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URLRewritePolicy")]
        URLRewritePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UseClientURIResolver")]
        UseClientURIResolver,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyXMLFirewallService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyXSLProxyService))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyHTTPProxyService : ModifyService {
        
        private object[] items1Field;
        
        private Items1ChoiceType18[] items1ElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AlwaysShowErrors", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugHistory", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugMode", typeof(dmDebugMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugTrigger", typeof(dmMSDebugTriggerType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultParamNamespace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DisallowEmptyResponse", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DisallowGet", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoChunkedUpload", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoHostRewrite", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPClientIPLabel", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPCompression", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPIncludeResponseTypeEncoding", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPPersistTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPPersistentConnections", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPProxyHost", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPProxyPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPVersion", typeof(dmHTTPClientServerVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HeaderInjection", typeof(dmHeaderInjection), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HeaderSuppression", typeof(dmHeaderSuppression), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Priority", typeof(dmSchedulerPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QueryParamNamespace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemotePort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetParameters", typeof(dmStylesheetParameter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SuppressHTTPWarnings", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType18[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmHTTPClientServerVersion {
        
        private System.Nullable<dmHTTPVersion> frontField;
        
        private System.Nullable<dmHTTPVersion> backField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmHTTPVersion> Front {
            get {
                return this.frontField;
            }
            set {
                this.frontField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmHTTPVersion> Back {
            get {
                return this.backField;
            }
            set {
                this.backField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType18 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AlwaysShowErrors")]
        AlwaysShowErrors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugHistory")]
        DebugHistory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugMode")]
        DebugMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugTrigger")]
        DebugTrigger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultParamNamespace")]
        DefaultParamNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DisallowEmptyResponse")]
        DisallowEmptyResponse,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DisallowGet")]
        DisallowGet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoChunkedUpload")]
        DoChunkedUpload,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoHostRewrite")]
        DoHostRewrite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPClientIPLabel")]
        HTTPClientIPLabel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPCompression")]
        HTTPCompression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPIncludeResponseTypeEncoding")]
        HTTPIncludeResponseTypeEncoding,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPPersistTimeout")]
        HTTPPersistTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPPersistentConnections")]
        HTTPPersistentConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPProxyHost")]
        HTTPProxyHost,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPProxyPort")]
        HTTPProxyPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPTimeout")]
        HTTPTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPVersion")]
        HTTPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HeaderInjection")]
        HeaderInjection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HeaderSuppression")]
        HeaderSuppression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Priority")]
        Priority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QueryParamNamespace")]
        QueryParamNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteAddress")]
        RemoteAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemotePort")]
        RemotePort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylesheetParameters")]
        StylesheetParameters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SuppressHTTPWarnings")]
        SuppressHTTPWarnings,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyXMLFirewallService : ModifyHTTPProxyService {
        
        private object[] items2Field;
        
        private Items2ChoiceType3[] items2ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BackAttachmentFormat", typeof(dmAttachmentFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CountMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DurationMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FWCred", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FirewallParserLimits", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontAttachmentFormat", typeof(dmAttachmentFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MIMEHeaders", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxMessageSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MonitorProcessingPolicy", typeof(dmMonitorProcessingPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsAttachmentByteCount", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsAttributeCount", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsBytesScanned", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsElementDepth", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsExternalReferences", typeof(dmExternalRefHandling), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsForbidExternalReferences", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsMaxNodeSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestAttachments", typeof(dmAttachmentMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestType", typeof(dmXMLReqRespType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseAttachments", typeof(dmAttachmentMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseType", typeof(dmXMLReqRespType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RootPartNotFirstAction", typeof(dmRootPartNotFirstAction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SOAPSchemaURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ServiceMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmFirewallType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRewritePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLFileLocation", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("WSDLResponsePolicy", typeof(dmWSDLResponsePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items2ElementName")]
        public object[] Items2 {
            get {
                return this.items2Field;
            }
            set {
                this.items2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items2ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items2ChoiceType3[] Items2ElementName {
            get {
                return this.items2ElementNameField;
            }
            set {
                this.items2ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmFirewallType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("static-backend")]
        staticbackend,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("loopback-proxy")]
        loopbackproxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dynamic-backend")]
        dynamicbackend,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWSDLResponsePolicy {
        
        /// <remarks/>
        off,
        
        /// <remarks/>
        intercept,
        
        /// <remarks/>
        serve,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items2ChoiceType3 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackAttachmentFormat")]
        BackAttachmentFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CountMonitors")]
        CountMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DurationMonitors")]
        DurationMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FWCred")]
        FWCred,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FirewallParserLimits")]
        FirewallParserLimits,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontAttachmentFormat")]
        FrontAttachmentFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MIMEHeaders")]
        MIMEHeaders,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxMessageSize")]
        MaxMessageSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MonitorProcessingPolicy")]
        MonitorProcessingPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsAttachmentByteCount")]
        ParserLimitsAttachmentByteCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsAttributeCount")]
        ParserLimitsAttributeCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsBytesScanned")]
        ParserLimitsBytesScanned,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsElementDepth")]
        ParserLimitsElementDepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsExternalReferences")]
        ParserLimitsExternalReferences,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsForbidExternalReferences")]
        ParserLimitsForbidExternalReferences,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsMaxNodeSize")]
        ParserLimitsMaxNodeSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestAttachments")]
        RequestAttachments,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestType")]
        RequestType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseAttachments")]
        ResponseAttachments,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseType")]
        ResponseType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RootPartNotFirstAction")]
        RootPartNotFirstAction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SOAPSchemaURL")]
        SOAPSchemaURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ServiceMonitors")]
        ServiceMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylePolicy")]
        StylePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Type")]
        Type,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URLRewritePolicy")]
        URLRewritePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLFileLocation")]
        WSDLFileLocation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLResponsePolicy")]
        WSDLResponsePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyXSLProxyService : ModifyHTTPProxyService {
        
        private object[] items2Field;
        
        private Items2ChoiceType2[] items2ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CountMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DurationMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MonitorProcessingPolicy", typeof(dmMonitorProcessingPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmXSLProxyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRewritePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items2ElementName")]
        public object[] Items2 {
            get {
                return this.items2Field;
            }
            set {
                this.items2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items2ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items2ChoiceType2[] Items2ElementName {
            get {
                return this.items2ElementNameField;
            }
            set {
                this.items2ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmXSLProxyType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("static-backend")]
        staticbackend,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("loopback-proxy")]
        loopbackproxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("strict-proxy")]
        strictproxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dynamic-backend")]
        dynamicbackend,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items2ChoiceType2 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CountMonitors")]
        CountMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DurationMonitors")]
        DurationMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MonitorProcessingPolicy")]
        MonitorProcessingPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylePolicy")]
        StylePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Type")]
        Type,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URLRewritePolicy")]
        URLRewritePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifySSLProxyService : ModifyService {
        
        private object[] items1Field;
        
        private Items1ChoiceType17[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Priority", typeof(dmSchedulerPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemotePort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType17[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType17 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Priority")]
        Priority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteAddress")]
        RemoteAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemotePort")]
        RemotePort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyTCPProxyService : ModifyService {
        
        private object[] items1Field;
        
        private Items1ChoiceType16[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Priority", typeof(dmSchedulerPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemotePort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType16[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType16 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Priority")]
        Priority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteAddress")]
        RemoteAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemotePort")]
        RemotePort,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyHTTPService : ModifyService {
        
        private object[] items1Field;
        
        private Items1ChoiceType15[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BaseDir", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("Identifier", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mode", typeof(dmHTTPServiceMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Priority", typeof(dmSchedulerPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StartPage", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType15[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmHTTPServiceMode {
        
        /// <remarks/>
        normal,
        
        /// <remarks/>
        webgui,
        
        /// <remarks/>
        echo,
        
        /// <remarks/>
        mq,
        
        /// <remarks/>
        filetrace,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType15 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BaseDir")]
        BaseDir,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Identifier")]
        Identifier,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Mode")]
        Mode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Priority")]
        Priority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StartPage")]
        StartPage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyConformancePolicy : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType90[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AssertBP10Conformance", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FixupStylesheets", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("IgnoredRequirements", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogTarget", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("Profiles", typeof(dmConformanceProfiles), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RejectIncludeSummary", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RejectLevel", typeof(dmConformanceRejectLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReportLevel", typeof(dmConformanceReportLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResultIsConformanceReport", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType90[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmConformanceProfiles {
        
        private dmToggle bP10Field;
        
        private bool bP10FieldSpecified;
        
        private dmToggle bP11Field;
        
        private bool bP11FieldSpecified;
        
        private dmToggle aP10Field;
        
        private bool aP10FieldSpecified;
        
        private dmToggle bSP10Field;
        
        private bool bSP10FieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle BP10 {
            get {
                return this.bP10Field;
            }
            set {
                this.bP10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BP10Specified {
            get {
                return this.bP10FieldSpecified;
            }
            set {
                this.bP10FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle BP11 {
            get {
                return this.bP11Field;
            }
            set {
                this.bP11Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BP11Specified {
            get {
                return this.bP11FieldSpecified;
            }
            set {
                this.bP11FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle AP10 {
            get {
                return this.aP10Field;
            }
            set {
                this.aP10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AP10Specified {
            get {
                return this.aP10FieldSpecified;
            }
            set {
                this.aP10FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle BSP10 {
            get {
                return this.bSP10Field;
            }
            set {
                this.bSP10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BSP10Specified {
            get {
                return this.bSP10FieldSpecified;
            }
            set {
                this.bSP10FieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmConformanceRejectLevel {
        
        /// <remarks/>
        never,
        
        /// <remarks/>
        failure,
        
        /// <remarks/>
        warning,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmConformanceReportLevel {
        
        /// <remarks/>
        never,
        
        /// <remarks/>
        failure,
        
        /// <remarks/>
        warning,
        
        /// <remarks/>
        always,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType90 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AssertBP10Conformance")]
        AssertBP10Conformance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FixupStylesheets")]
        FixupStylesheets,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IgnoredRequirements")]
        IgnoredRequirements,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogTarget")]
        LogTarget,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Profiles")]
        Profiles,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RejectIncludeSummary")]
        RejectIncludeSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RejectLevel")]
        RejectLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReportLevel")]
        ReportLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResultIsConformanceReport")]
        ResultIsConformanceReport,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyVLANInterface))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyEthernetInterface))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyIPInterface : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType89[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DefaultGateway", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IPAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SecondaryAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StaticRoutes", typeof(dmStaticRoute), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UseARP", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UseDHCP", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType89[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmStaticRoute {
        
        private string destinationField;
        
        private string gatewayField;
        
        private System.Nullable<uint> metricField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Destination {
            get {
                return this.destinationField;
            }
            set {
                this.destinationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Gateway {
            get {
                return this.gatewayField;
            }
            set {
                this.gatewayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> Metric {
            get {
                return this.metricField;
            }
            set {
                this.metricField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType89 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultGateway")]
        DefaultGateway,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IPAddress")]
        IPAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SecondaryAddress")]
        SecondaryAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StaticRoutes")]
        StaticRoutes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UseARP")]
        UseARP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UseDHCP")]
        UseDHCP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyVLANInterface : ModifyIPInterface {
        
        private object[] items1Field;
        
        private Items1ChoiceType14[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DefaultOutboundPriority", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Identifier", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Interface", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StandbyControls", typeof(dmVLANStandbyControl), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType14[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmVLANStandbyControl {
        
        private System.Nullable<uint> groupField;
        
        private string virtualIPField;
        
        private System.Nullable<dmToggle> preemptField;
        
        private System.Nullable<uint> priorityField;
        
        private System.Nullable<uint> authHighField;
        
        private System.Nullable<uint> authLowField;
        
        private string auxVirtualIPField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VirtualIP {
            get {
                return this.virtualIPField;
            }
            set {
                this.virtualIPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> Preempt {
            get {
                return this.preemptField;
            }
            set {
                this.preemptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> AuthHigh {
            get {
                return this.authHighField;
            }
            set {
                this.authHighField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> AuthLow {
            get {
                return this.authLowField;
            }
            set {
                this.authLowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AuxVirtualIP {
            get {
                return this.auxVirtualIPField;
            }
            set {
                this.auxVirtualIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType14 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultOutboundPriority")]
        DefaultOutboundPriority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Identifier")]
        Identifier,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Interface")]
        Interface,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StandbyControls")]
        StandbyControls,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyEthernetInterface : ModifyIPInterface {
        
        private object[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MACAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MTU", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mode", typeof(dmEthernetMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StandbyControls", typeof(dmStandbyControl), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmStandbyControl {
        
        private System.Nullable<uint> groupField;
        
        private string virtualIPField;
        
        private System.Nullable<dmToggle> preemptField;
        
        private System.Nullable<uint> priorityField;
        
        private System.Nullable<uint> authHighField;
        
        private System.Nullable<uint> authLowField;
        
        private string auxVirtualIPField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VirtualIP {
            get {
                return this.virtualIPField;
            }
            set {
                this.virtualIPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmToggle> Preempt {
            get {
                return this.preemptField;
            }
            set {
                this.preemptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> AuthHigh {
            get {
                return this.authHighField;
            }
            set {
                this.authHighField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> AuthLow {
            get {
                return this.authLowField;
            }
            set {
                this.authLowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AuxVirtualIP {
            get {
                return this.auxVirtualIPField;
            }
            set {
                this.auxVirtualIPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyHTTPUserAgent : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType88[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AddHeaderPolicies", typeof(dmAddHeaderPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowCompressionPolicies", typeof(dmAllowCompressionPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BasicAuthPolicies", typeof(dmBasicAuthPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FTPPolicies", typeof(dmFTPPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Identifier", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxRedirects", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProxyPolicies", typeof(dmProxyPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PubkeyAuthPolicies", typeof(dmPubkeyAuthPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Restrict10Policies", typeof(dmRestrict10Policy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLPolicies", typeof(dmSSLPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SoapActionPolicies", typeof(dmSoapActionPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Timeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UploadChunkedPolicies", typeof(dmUploadChunkedPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType88[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmAddHeaderPolicy {
        
        private string regExpField;
        
        private string addHeaderField;
        
        private string addValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RegExp {
            get {
                return this.regExpField;
            }
            set {
                this.regExpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AddHeader {
            get {
                return this.addHeaderField;
            }
            set {
                this.addHeaderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AddValue {
            get {
                return this.addValueField;
            }
            set {
                this.addValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmAllowCompressionPolicy {
        
        private string regExpField;
        
        private dmToggle allowCompressionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RegExp {
            get {
                return this.regExpField;
            }
            set {
                this.regExpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle AllowCompression {
            get {
                return this.allowCompressionField;
            }
            set {
                this.allowCompressionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmBasicAuthPolicy {
        
        private string regExpField;
        
        private string userNameField;
        
        private string passwordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RegExp {
            get {
                return this.regExpField;
            }
            set {
                this.regExpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmFTPPolicy {
        
        private string regExpField;
        
        private dmFTPPassivePolicy passiveField;
        
        private dmFTPAuthPolicy authTLSField;
        
        private dmFTPCCCPolicy useCCCField;
        
        private dmFTPDataEncryptionPolicy encryptDataField;
        
        private dmFTPDataTypePolicy dataTypeField;
        
        private dmFTPSlashSTOUPolicy slashSTOUField;
        
        private dmReference quotedCommandsField;
        
        private System.Nullable<dmFTPSizeCheckPolicy> sizeCheckField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RegExp {
            get {
                return this.regExpField;
            }
            set {
                this.regExpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmFTPPassivePolicy Passive {
            get {
                return this.passiveField;
            }
            set {
                this.passiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmFTPAuthPolicy AuthTLS {
            get {
                return this.authTLSField;
            }
            set {
                this.authTLSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmFTPCCCPolicy UseCCC {
            get {
                return this.useCCCField;
            }
            set {
                this.useCCCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmFTPDataEncryptionPolicy EncryptData {
            get {
                return this.encryptDataField;
            }
            set {
                this.encryptDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmFTPDataTypePolicy DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmFTPSlashSTOUPolicy SlashSTOU {
            get {
                return this.slashSTOUField;
            }
            set {
                this.slashSTOUField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference QuotedCommands {
            get {
                return this.quotedCommandsField;
            }
            set {
                this.quotedCommandsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmFTPSizeCheckPolicy> SizeCheck {
            get {
                return this.sizeCheckField;
            }
            set {
                this.sizeCheckField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmFTPPassivePolicy {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pasv-off")]
        pasvoff,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pasv-opt")]
        pasvopt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pasv-req")]
        pasvreq,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmFTPAuthPolicy {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("auth-off")]
        authoff,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("auth-tls-opt")]
        authtlsopt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("auth-tls-req")]
        authtlsreq,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmFTPCCCPolicy {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ccc-off")]
        cccoff,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ccc-opt")]
        cccopt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ccc-req")]
        cccreq,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmFTPDataEncryptionPolicy {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("enc-data-off")]
        encdataoff,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("enc-data-opt")]
        encdataopt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("enc-data-req")]
        encdatareq,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmFTPDataTypePolicy {
        
        /// <remarks/>
        ascii,
        
        /// <remarks/>
        binary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmFTPSlashSTOUPolicy {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("slash-stou-off")]
        slashstouoff,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("slash-stou-on")]
        slashstouon,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmFTPSizeCheckPolicy {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("size-check-optional")]
        sizecheckoptional,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("size-check-disabled")]
        sizecheckdisabled,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmProxyPolicy {
        
        private string regExpField;
        
        private dmToggle skipField;
        
        private string remoteAddressField;
        
        private System.Nullable<ushort> remotePortField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RegExp {
            get {
                return this.regExpField;
            }
            set {
                this.regExpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Skip {
            get {
                return this.skipField;
            }
            set {
                this.skipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string RemoteAddress {
            get {
                return this.remoteAddressField;
            }
            set {
                this.remoteAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> RemotePort {
            get {
                return this.remotePortField;
            }
            set {
                this.remotePortField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmPubkeyAuthPolicy {
        
        private string regExpField;
        
        private dmReference cryptoKeyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RegExp {
            get {
                return this.regExpField;
            }
            set {
                this.regExpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference CryptoKey {
            get {
                return this.cryptoKeyField;
            }
            set {
                this.cryptoKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmRestrict10Policy {
        
        private string regExpField;
        
        private dmToggle restrict10Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RegExp {
            get {
                return this.regExpField;
            }
            set {
                this.regExpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Restrict10 {
            get {
                return this.restrict10Field;
            }
            set {
                this.restrict10Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmSSLPolicy {
        
        private string regExpField;
        
        private dmReference sSLProxyProfileField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RegExp {
            get {
                return this.regExpField;
            }
            set {
                this.regExpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference SSLProxyProfile {
            get {
                return this.sSLProxyProfileField;
            }
            set {
                this.sSLProxyProfileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmSoapActionPolicy {
        
        private string regExpField;
        
        private string soapActionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RegExp {
            get {
                return this.regExpField;
            }
            set {
                this.regExpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SoapAction {
            get {
                return this.soapActionField;
            }
            set {
                this.soapActionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmUploadChunkedPolicy {
        
        private string regExpField;
        
        private dmToggle uploadChunkedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RegExp {
            get {
                return this.regExpField;
            }
            set {
                this.regExpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle UploadChunked {
            get {
                return this.uploadChunkedField;
            }
            set {
                this.uploadChunkedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType88 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AddHeaderPolicies")]
        AddHeaderPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowCompressionPolicies")]
        AllowCompressionPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BasicAuthPolicies")]
        BasicAuthPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FTPPolicies")]
        FTPPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Identifier")]
        Identifier,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxRedirects")]
        MaxRedirects,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ProxyPolicies")]
        ProxyPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PubkeyAuthPolicies")]
        PubkeyAuthPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Restrict10Policies")]
        Restrict10Policies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLPolicies")]
        SSLPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SoapActionPolicies")]
        SoapActionPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Timeout")]
        Timeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UploadChunkedPolicies")]
        UploadChunkedPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyHostAlias))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyDNSNameService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyNTPService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyNetworkSettings))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyNetworkConfiguration : ModifyConfigBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyHostAlias : ModifyNetworkConfiguration {
        
        private string[] itemsField;
        
        private ItemsChoiceType87[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IPAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public string[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType87[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType87 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IPAddress")]
        IPAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyDNSNameService : ModifyNetworkConfiguration {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NameServers", typeof(dmNameServer), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SearchDomains", typeof(dmSearchDomain), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StaticHosts", typeof(dmStaticHost), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmNameServer {
        
        private string iPAddressField;
        
        private System.Nullable<ushort> uDPPortField;
        
        private System.Nullable<ushort> tCPPortField;
        
        private System.Nullable<uint> maxRetriesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> UDPPort {
            get {
                return this.uDPPortField;
            }
            set {
                this.uDPPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> TCPPort {
            get {
                return this.tCPPortField;
            }
            set {
                this.tCPPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> MaxRetries {
            get {
                return this.maxRetriesField;
            }
            set {
                this.maxRetriesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmSearchDomain {
        
        private string searchDomainField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SearchDomain {
            get {
                return this.searchDomainField;
            }
            set {
                this.searchDomainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmStaticHost {
        
        private string hostnameField;
        
        private string iPAddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Hostname {
            get {
                return this.hostnameField;
            }
            set {
                this.hostnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyNTPService : ModifyNetworkConfiguration {
        
        private object[] itemsField;
        
        private ItemsChoiceType86[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RefreshInterval", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteServer", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType86[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType86 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RefreshInterval")]
        RefreshInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteServer")]
        RemoteServer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyNetworkSettings : ModifyNetworkConfiguration {
        
        private object[] itemsField;
        
        private ItemsChoiceType85[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AllowAllCrosstalk", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowCrosstalkOnSubnet", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ArpInterval", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ArpRetries", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DestinationRouting", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ECNDisable", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ICMPDisable", typeof(dmICMPReplyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TCPSYNRetries", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TCPSegmentationOffload", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType85[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmICMPReplyType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Echo-Reply")]
        EchoReply,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Timestamp-Reply")]
        TimestampReply,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Info-Reply")]
        InfoReply,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Addressmask-Reply")]
        AddressmaskReply,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType85 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowAllCrosstalk")]
        AllowAllCrosstalk,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowCrosstalkOnSubnet")]
        AllowCrosstalkOnSubnet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ArpInterval")]
        ArpInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ArpRetries")]
        ArpRetries,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DestinationRouting")]
        DestinationRouting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ECNDisable")]
        ECNDisable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ICMPDisable")]
        ICMPDisable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TCPSYNRetries")]
        TCPSYNRetries,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TCPSegmentationOffload")]
        TCPSegmentationOffload,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyShellAlias : ModifyConfigBase {
        
        private string[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("command", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyThrottler : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType84[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EnvironmentalLog", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogLevel", typeof(dmLogLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QnameWarnAt", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Statistics", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TempFSTerminateAt", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TempFSThrottleAt", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TerminateAt", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ThrottleAt", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Timeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType84[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType84 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EnvironmentalLog")]
        EnvironmentalLog,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogLevel")]
        LogLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QnameWarnAt")]
        QnameWarnAt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Statistics")]
        Statistics,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TempFSTerminateAt")]
        TempFSTerminateAt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TempFSThrottleAt")]
        TempFSThrottleAt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TerminateAt")]
        TerminateAt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ThrottleAt")]
        ThrottleAt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Timeout")]
        Timeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyStatistics : ModifyConfigBase {
        
        private uint[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LoadInterval", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyUserGroup : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType83[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AccessPolicies", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CommandGroup", typeof(dmCommandGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType83[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmCommandGroup {
        
        /// <remarks/>
        aaapolicy,
        
        /// <remarks/>
        acl,
        
        /// <remarks/>
        common,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("compile-options")]
        compileoptions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config-management")]
        configmanagement,
        
        /// <remarks/>
        configuration,
        
        /// <remarks/>
        crl,
        
        /// <remarks/>
        crypto,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("device-management")]
        devicemanagement,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("document-crypto-map")]
        documentcryptomap,
        
        /// <remarks/>
        domain,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("failure-notification")]
        failurenotification,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("file-management")]
        filemanagement,
        
        /// <remarks/>
        firewallcred,
        
        /// <remarks/>
        flash,
        
        /// <remarks/>
        httpserv,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("input-conversion")]
        inputconversion,
        
        /// <remarks/>
        @interface,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("load-balancer")]
        loadbalancer,
        
        /// <remarks/>
        logging,
        
        /// <remarks/>
        matching,
        
        /// <remarks/>
        messages,
        
        /// <remarks/>
        monitors,
        
        /// <remarks/>
        mpgw,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mq-host")]
        mqhost,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mq-node")]
        mqnode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mq-qm")]
        mqqm,
        
        /// <remarks/>
        network,
        
        /// <remarks/>
        radius,
        
        /// <remarks/>
        rbm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("schema-exception-map")]
        schemaexceptionmap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("service-monitor")]
        servicemonitor,
        
        /// <remarks/>
        snmp,
        
        /// <remarks/>
        sql,
        
        /// <remarks/>
        sslforwarder,
        
        /// <remarks/>
        stylesheetaction,
        
        /// <remarks/>
        stylesheetpolicy,
        
        /// <remarks/>
        stylesheetrule,
        
        /// <remarks/>
        system,
        
        /// <remarks/>
        tam,
        
        /// <remarks/>
        tcpproxy,
        
        /// <remarks/>
        urlmap,
        
        /// <remarks/>
        urlrefresh,
        
        /// <remarks/>
        urlrewrite,
        
        /// <remarks/>
        useragent,
        
        /// <remarks/>
        usergroup,
        
        /// <remarks/>
        validation,
        
        /// <remarks/>
        webservice,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wsm-agent")]
        wsmagent,
        
        /// <remarks/>
        xmlfirewall,
        
        /// <remarks/>
        xmlmgr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xpath-routing")]
        xpathrouting,
        
        /// <remarks/>
        xslcoproc,
        
        /// <remarks/>
        xslproxy,
        
        /// <remarks/>
        http,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("document-cache")]
        documentcache,
        
        /// <remarks/>
        parserlimit,
        
        /// <remarks/>
        rule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("password-change")]
        passwordchange,
        
        /// <remarks/>
        reserved50,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType83 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AccessPolicies")]
        AccessPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CommandGroup")]
        CommandGroup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyUser : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType82[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AccessLevel", typeof(dmUserAccess), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GroupName", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Password", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SnmpCreds", typeof(dmSnmpCred), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType82[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmUserAccess {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        user,
        
        /// <remarks/>
        privileged,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("group-defined")]
        groupdefined,
        
        /// <remarks/>
        technician,
        
        /// <remarks/>
        expired,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmSnmpCred {
        
        private string engineIDField;
        
        private dmSnmpAuthProtocol authProtocolField;
        
        private System.Nullable<dmSnmpSecretType> authSecretTypeField;
        
        private string authSecretField;
        
        private dmSnmpPrivProtocol privProtocolField;
        
        private System.Nullable<dmSnmpSecretType> privSecretTypeField;
        
        private string privSecretField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string EngineID {
            get {
                return this.engineIDField;
            }
            set {
                this.engineIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmSnmpAuthProtocol AuthProtocol {
            get {
                return this.authProtocolField;
            }
            set {
                this.authProtocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmSnmpSecretType> AuthSecretType {
            get {
                return this.authSecretTypeField;
            }
            set {
                this.authSecretTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string AuthSecret {
            get {
                return this.authSecretField;
            }
            set {
                this.authSecretField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmSnmpPrivProtocol PrivProtocol {
            get {
                return this.privProtocolField;
            }
            set {
                this.privProtocolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmSnmpSecretType> PrivSecretType {
            get {
                return this.privSecretTypeField;
            }
            set {
                this.privSecretTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PrivSecret {
            get {
                return this.privSecretField;
            }
            set {
                this.privSecretField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSnmpAuthProtocol {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        md5,
        
        /// <remarks/>
        sha,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSnmpSecretType {
        
        /// <remarks/>
        password,
        
        /// <remarks/>
        key,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSnmpPrivProtocol {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        des,
        
        /// <remarks/>
        aes,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType82 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AccessLevel")]
        AccessLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GroupName")]
        GroupName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Password")]
        Password,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SnmpCreds")]
        SnmpCreds,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifySNMPSettings : ModifyConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType81[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AccessLevel", typeof(dmSnmpAccessMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ConfigMib", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("Contexts", typeof(dmSnmpContext), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NotifMib", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("Policies", typeof(dmSnmpPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SecurityLevel", typeof(dmSnmpSecurityLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StatusMib", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("Targets", typeof(dmSnmpTarget), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TrapEventCode", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TrapPriority", typeof(dmLogLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Users", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType81[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSnmpAccessMode {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("read-only")]
        @readonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("read-write")]
        readwrite,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmSnmpContext {
        
        private string contextField;
        
        private dmReference domainField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmSnmpPolicy {
        
        private string communityField;
        
        private dmReference domainField;
        
        private dmSnmpAccessMode modeField;
        
        private string hostField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Community {
            get {
                return this.communityField;
            }
            set {
                this.communityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmSnmpAccessMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSnmpSecurityLevel {
        
        /// <remarks/>
        noAuthNoPriv,
        
        /// <remarks/>
        authNoPriv,
        
        /// <remarks/>
        authPriv,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmSnmpTarget {
        
        private string hostField;
        
        private System.Nullable<ushort> portField;
        
        private string communityField;
        
        private System.Nullable<dmSnmpVersion> trapVersionField;
        
        private string securityNameField;
        
        private System.Nullable<dmSnmpSecurityLevel> securityLevelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Community {
            get {
                return this.communityField;
            }
            set {
                this.communityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmSnmpVersion> TrapVersion {
            get {
                return this.trapVersionField;
            }
            set {
                this.trapVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string SecurityName {
            get {
                return this.securityNameField;
            }
            set {
                this.securityNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmSnmpSecurityLevel> SecurityLevel {
            get {
                return this.securityLevelField;
            }
            set {
                this.securityLevelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSnmpVersion {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2c")]
        Item2c,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType81 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AccessLevel")]
        AccessLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ConfigMib")]
        ConfigMib,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Contexts")]
        Contexts,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NotifMib")]
        NotifMib,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Policies")]
        Policies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SecurityLevel")]
        SecurityLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StatusMib")]
        StatusMib,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Targets")]
        Targets,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TrapEventCode")]
        TrapEventCode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TrapPriority")]
        TrapPriority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Users")]
        Users,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyTimeSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifyErrorReportSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ModifySystemSettings))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyDeviceSettings : ModifyConfigBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyTimeSettings : ModifyDeviceSettings {
        
        private object[] itemsField;
        
        private ItemsChoiceType80[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CustomTZName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightOffsetHours", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStartDay", typeof(dmWeekday), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStartMonth", typeof(dmMonth), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStartTimeHours", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStartTimeMinutes", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStartWeek", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStopDay", typeof(dmWeekday), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStopMonth", typeof(dmMonth), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStopTimeHours", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStopTimeMinutes", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStopWeek", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalTimeZone", typeof(dmTimeZone), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OffsetHours", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OffsetMinutes", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TZNameDST", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UTCDirection", typeof(dmTimeDirection), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType80[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmWeekday {
        
        /// <remarks/>
        Sunday,
        
        /// <remarks/>
        Monday,
        
        /// <remarks/>
        Tuesday,
        
        /// <remarks/>
        Wednesday,
        
        /// <remarks/>
        Thursday,
        
        /// <remarks/>
        Friday,
        
        /// <remarks/>
        Saturday,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmMonth {
        
        /// <remarks/>
        January,
        
        /// <remarks/>
        February,
        
        /// <remarks/>
        March,
        
        /// <remarks/>
        April,
        
        /// <remarks/>
        May,
        
        /// <remarks/>
        June,
        
        /// <remarks/>
        July,
        
        /// <remarks/>
        August,
        
        /// <remarks/>
        September,
        
        /// <remarks/>
        October,
        
        /// <remarks/>
        November,
        
        /// <remarks/>
        December,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmTimeZone {
        
        /// <remarks/>
        HST10,
        
        /// <remarks/>
        AKST9AKDT,
        
        /// <remarks/>
        PST8PDT,
        
        /// <remarks/>
        MST7MDT,
        
        /// <remarks/>
        CST6CDT,
        
        /// <remarks/>
        EST5EDT,
        
        /// <remarks/>
        AST4ADT,
        
        /// <remarks/>
        UTC,
        
        /// <remarks/>
        GMT0BST,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CET-1CEST")]
        CET1CEST,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EET-2EEST")]
        EET2EEST,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MKS-3MSD")]
        MKS3MSD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("AST-3")]
        AST3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("KRT-5")]
        KRT5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IST-5:30")]
        IST530,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NOVST-6NOVDT")]
        NOVST6NOVDT,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CST-8")]
        CST8,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WST-8WDT")]
        WST8WDT,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("JST-9")]
        JST9,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CST-9:30CDT")]
        CST930CDT,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EST-10EDT")]
        EST10EDT,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EST-10")]
        EST10,
        
        /// <remarks/>
        Custom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmTimeDirection {
        
        /// <remarks/>
        East,
        
        /// <remarks/>
        West,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType80 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CustomTZName")]
        CustomTZName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightOffsetHours")]
        DaylightOffsetHours,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStartDay")]
        DaylightStartDay,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStartMonth")]
        DaylightStartMonth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStartTimeHours")]
        DaylightStartTimeHours,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStartTimeMinutes")]
        DaylightStartTimeMinutes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStartWeek")]
        DaylightStartWeek,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStopDay")]
        DaylightStopDay,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStopMonth")]
        DaylightStopMonth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStopTimeHours")]
        DaylightStopTimeHours,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStopTimeMinutes")]
        DaylightStopTimeMinutes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStopWeek")]
        DaylightStopWeek,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalTimeZone")]
        LocalTimeZone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OffsetHours")]
        OffsetHours,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OffsetMinutes")]
        OffsetMinutes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TZNameDST")]
        TZNameDST,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UTCDirection")]
        UTCDirection,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyErrorReportSettings : ModifyDeviceSettings {
        
        private object[] itemsField;
        
        private ItemsChoiceType79[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AlwaysOnStartup", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EmailAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InternalState", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocationIdentifier", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SmtpServer", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType79[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType79 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AlwaysOnStartup")]
        AlwaysOnStartup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EmailAddress")]
        EmailAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":InternalState")]
        InternalState,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocationIdentifier")]
        LocationIdentifier,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SmtpServer")]
        SmtpServer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifySystemSettings : ModifyDeviceSettings {
        
        private object[] itemsField;
        
        private ItemsChoiceType78[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Contact", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Description", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Location", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoginMessage", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProductID", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProductOID", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SerialNumber", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Services", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SystemName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType78[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType78 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Contact")]
        Contact,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Description")]
        Description,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Location")]
        Location,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LoginMessage")]
        LoginMessage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ProductID")]
        ProductID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ProductOID")]
        ProductOID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SerialNumber")]
        SerialNumber,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Services")]
        Services,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SystemName")]
        SystemName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifySOAPHeaderDisposition : ModifyAccessControl {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Refine", typeof(dmSOAPHeaderDispositionItem), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmSOAPHeaderDispositionItem {
        
        private string namespaceField;
        
        private string localNameField;
        
        private string childLocalNameField;
        
        private dmSOAPHeaderRefineType actionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LocalName {
            get {
                return this.localNameField;
            }
            set {
                this.localNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ChildLocalName {
            get {
                return this.childLocalNameField;
            }
            set {
                this.childLocalNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmSOAPHeaderRefineType Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmSOAPHeaderRefineType {
        
        /// <remarks/>
        processed,
        
        /// <remarks/>
        unprocessed,
        
        /// <remarks/>
        keep,
        
        /// <remarks/>
        remove,
        
        /// <remarks/>
        fault,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyProcessingMetadata : ModifyAccessControl {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MetaItem", typeof(dmMetaItem), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmMetaItem {
        
        private dmMetadataCategory metaCategoryField;
        
        private string metaNameField;
        
        private string dataSourceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmMetadataCategory MetaCategory {
            get {
                return this.metaCategoryField;
            }
            set {
                this.metaCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MetaName {
            get {
                return this.metaNameField;
            }
            set {
                this.metaNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string DataSource {
            get {
                return this.dataSourceField;
            }
            set {
                this.dataSourceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmMetadataCategory {
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        mq,
        
        /// <remarks/>
        tibco,
        
        /// <remarks/>
        wasjms,
        
        /// <remarks/>
        http,
        
        /// <remarks/>
        CUSTOMIZABLE,
        
        /// <remarks/>
        header,
        
        /// <remarks/>
        variable,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyXACMLPDP : ModifyAccessControl {
        
        private object[] itemsField;
        
        private ItemsChoiceType110[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CacheTTL", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CombiningAlg", typeof(dmXACMLCombiningAlg), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DependentPolicy", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("Directory", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("EqualPolicies", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GeneralPolicy", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType110[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmXACMLCombiningAlg {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("first-applicable")]
        firstapplicable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deny-overrides")]
        denyoverrides,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("permit-overrides")]
        permitoverrides,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("only-one-applicable")]
        onlyoneapplicable,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType110 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CacheTTL")]
        CacheTTL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CombiningAlg")]
        CombiningAlg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DependentPolicy")]
        DependentPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Directory")]
        Directory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EqualPolicies")]
        EqualPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GeneralPolicy")]
        GeneralPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyRADIUSSettings : ModifyAccessControl {
        
        private object[] itemsField;
        
        private ItemsChoiceType109[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AAAServers", typeof(dmRadiusServer), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Id", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Retries", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Servers", typeof(dmRadiusServer), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Timeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType109[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmRadiusServer {
        
        private uint numberField;
        
        private string hostField;
        
        private System.Nullable<ushort> portField;
        
        private string secretField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<ushort> Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Secret {
            get {
                return this.secretField;
            }
            set {
                this.secretField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType109 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AAAServers")]
        AAAServers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Id")]
        Id,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Retries")]
        Retries,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Servers")]
        Servers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Timeout")]
        Timeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyDomain : ModifyAccessControl {
        
        private object[] itemsField;
        
        private ItemsChoiceType107[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ConfigMode", typeof(dmDomainConfigMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DomainUser", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FileMap", typeof(dmDomainFileMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ImportFormat", typeof(dmImportFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ImportURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("MaxChkpoints", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MonitoringMap", typeof(dmDomainMonitoringMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NeighborDomain", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType107[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmDomainConfigMode {
        
        /// <remarks/>
        local,
        
        /// <remarks/>
        import,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmDomainFileMap {
        
        private dmToggle copyFromField;
        
        private bool copyFromFieldSpecified;
        
        private dmToggle copyToField;
        
        private bool copyToFieldSpecified;
        
        private dmToggle deleteField;
        
        private bool deleteFieldSpecified;
        
        private dmToggle displayField;
        
        private bool displayFieldSpecified;
        
        private dmToggle execField;
        
        private bool execFieldSpecified;
        
        private dmToggle subdirField;
        
        private bool subdirFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle CopyFrom {
            get {
                return this.copyFromField;
            }
            set {
                this.copyFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CopyFromSpecified {
            get {
                return this.copyFromFieldSpecified;
            }
            set {
                this.copyFromFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle CopyTo {
            get {
                return this.copyToField;
            }
            set {
                this.copyToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CopyToSpecified {
            get {
                return this.copyToFieldSpecified;
            }
            set {
                this.copyToFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Delete {
            get {
                return this.deleteField;
            }
            set {
                this.deleteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeleteSpecified {
            get {
                return this.deleteFieldSpecified;
            }
            set {
                this.deleteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Display {
            get {
                return this.displayField;
            }
            set {
                this.displayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisplaySpecified {
            get {
                return this.displayFieldSpecified;
            }
            set {
                this.displayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Exec {
            get {
                return this.execField;
            }
            set {
                this.execField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExecSpecified {
            get {
                return this.execFieldSpecified;
            }
            set {
                this.execFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Subdir {
            get {
                return this.subdirField;
            }
            set {
                this.subdirField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubdirSpecified {
            get {
                return this.subdirFieldSpecified;
            }
            set {
                this.subdirFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmDomainMonitoringMap {
        
        private dmToggle auditField;
        
        private bool auditFieldSpecified;
        
        private dmToggle logField;
        
        private bool logFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Audit {
            get {
                return this.auditField;
            }
            set {
                this.auditField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AuditSpecified {
            get {
                return this.auditFieldSpecified;
            }
            set {
                this.auditFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle Log {
            get {
                return this.logField;
            }
            set {
                this.logField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LogSpecified {
            get {
                return this.logFieldSpecified;
            }
            set {
                this.logFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType107 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ConfigMode")]
        ConfigMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DomainUser")]
        DomainUser,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FileMap")]
        FileMap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ImportFormat")]
        ImportFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ImportURL")]
        ImportURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxChkpoints")]
        MaxChkpoints,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MonitoringMap")]
        MonitoringMap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NeighborDomain")]
        NeighborDomain,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyTFIMEndpoint : ModifyAccessControl {
        
        private object[] itemsField;
        
        private ItemsChoiceType106[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mAppliesToAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mCompatibleMode", typeof(dmTFIMMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mIssuer", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mOperation", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mPortType", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mReqCustomURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("mReqToken60Format", typeof(dmTFIMReq60Format), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mReqToken61Format", typeof(dmTFIMReq61Format), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mSSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mSchemaValidate", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mServerPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mServerURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType106[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmTFIMMode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("v6.0")]
        v60,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("v6.1")]
        v61,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmTFIMReq60Format {
        
        /// <remarks/>
        WSUserNameToken,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SAML1.0")]
        SAML10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SAML1.1")]
        SAML11,
        
        /// <remarks/>
        Custom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmTFIMReq61Format {
        
        /// <remarks/>
        WSUserNameToken,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SAML1.0")]
        SAML10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SAML1.1")]
        SAML11,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SAML2.0")]
        SAML20,
        
        /// <remarks/>
        WSKerberosToken,
        
        /// <remarks/>
        WSX509Token,
        
        /// <remarks/>
        BinarySecurityToken,
        
        /// <remarks/>
        CustomToken,
        
        /// <remarks/>
        Custom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType106 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mAppliesToAddress")]
        mAppliesToAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mCompatibleMode")]
        mCompatibleMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mIssuer")]
        mIssuer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mOperation")]
        mOperation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mPortType")]
        mPortType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mReqCustomURL")]
        mReqCustomURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mReqToken60Format")]
        mReqToken60Format,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mReqToken61Format")]
        mReqToken61Format,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mSSLProxy")]
        mSSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mSchemaValidate")]
        mSchemaValidate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mServerPort")]
        mServerPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mServerURL")]
        mServerURL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyTAM : ModifyAccessControl {
        
        private object[] itemsField;
        
        private ItemsChoiceType105[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ConfigurationFile", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("LDAPSSLKeyFile", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("LDAPSSLKeyFileDN", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LDAPSSLKeyFilePassword", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LDAPSSLPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LDAPUseSSL", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReturningUserAttributes", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLKeyFile", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("SSLKeyStashFile", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("TAMAZReplicas", typeof(dmTAMAZReplica), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TAMUseFIPS", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType105[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmTAMAZReplica {
        
        private string tAMAZReplicaField;
        
        private ushort tAMAZReplicaPortField;
        
        private uint tAMAZReplicaWeightField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TAMAZReplica {
            get {
                return this.tAMAZReplicaField;
            }
            set {
                this.tAMAZReplicaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort TAMAZReplicaPort {
            get {
                return this.tAMAZReplicaPortField;
            }
            set {
                this.tAMAZReplicaPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint TAMAZReplicaWeight {
            get {
                return this.tAMAZReplicaWeightField;
            }
            set {
                this.tAMAZReplicaWeightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType105 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ConfigurationFile")]
        ConfigurationFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPSSLKeyFile")]
        LDAPSSLKeyFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPSSLKeyFileDN")]
        LDAPSSLKeyFileDN,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPSSLKeyFilePassword")]
        LDAPSSLKeyFilePassword,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPSSLPort")]
        LDAPSSLPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPUseSSL")]
        LDAPUseSSL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReturningUserAttributes")]
        ReturningUserAttributes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLKeyFile")]
        SSLKeyFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLKeyStashFile")]
        SSLKeyStashFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TAMAZReplicas")]
        TAMAZReplicas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TAMUseFIPS")]
        TAMUseFIPS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ModifyRBMSettings : ModifyAccessControl {
        
        private object[] itemsField;
        
        private ItemsChoiceType104[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AUCacheAllow", typeof(dmAAACacheType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AUCacheTTL", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AUCustomURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("AUHost", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AUInfoURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("AUKerberosKeytab", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AULDAPLoadBalanceGroup", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AULDAPPrefix", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AUMethod", typeof(dmRBMAuthenticateType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AUPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ApplyToCLI", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DisallowUsernameSubstring", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoPasswordAging", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoPasswordHistory", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FallbackLogin", typeof(dmRBMFallbackLoginType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FallbackUser", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LDAPSSLProxyProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LDAPVersion", typeof(dmLDAPVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LDAPsuffix", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MCCustomURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("MCInfoURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("MCMethod", typeof(dmRBMMapType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxPasswordAge", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MinPasswordLength", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NumOldPasswords", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequireDigit", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequireMixedCase", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequireNonAlphaNumeric", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RestrictAdminToSerialPort", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType104[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmRBMAuthenticateType {
        
        /// <remarks/>
        local,
        
        /// <remarks/>
        xmlfile,
        
        /// <remarks/>
        ldap,
        
        /// <remarks/>
        radius,
        
        /// <remarks/>
        spnego,
        
        /// <remarks/>
        custom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmRBMFallbackLoginType {
        
        /// <remarks/>
        disabled,
        
        /// <remarks/>
        local,
        
        /// <remarks/>
        restricted,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmRBMMapType {
        
        /// <remarks/>
        local,
        
        /// <remarks/>
        xmlfile,
        
        /// <remarks/>
        custom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType104 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AUCacheAllow")]
        AUCacheAllow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AUCacheTTL")]
        AUCacheTTL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AUCustomURL")]
        AUCustomURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AUHost")]
        AUHost,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AUInfoURL")]
        AUInfoURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AUKerberosKeytab")]
        AUKerberosKeytab,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AULDAPLoadBalanceGroup")]
        AULDAPLoadBalanceGroup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AULDAPPrefix")]
        AULDAPPrefix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AUMethod")]
        AUMethod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AUPort")]
        AUPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ApplyToCLI")]
        ApplyToCLI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DisallowUsernameSubstring")]
        DisallowUsernameSubstring,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoPasswordAging")]
        DoPasswordAging,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoPasswordHistory")]
        DoPasswordHistory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FallbackLogin")]
        FallbackLogin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FallbackUser")]
        FallbackUser,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPSSLProxyProfile")]
        LDAPSSLProxyProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPVersion")]
        LDAPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPsuffix")]
        LDAPsuffix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MCCustomURL")]
        MCCustomURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MCInfoURL")]
        MCInfoURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MCMethod")]
        MCMethod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxPasswordAge")]
        MaxPasswordAge,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MinPasswordLength")]
        MinPasswordLength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NumOldPasswords")]
        NumOldPasswords,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequireDigit")]
        RequireDigit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequireMixedCase")]
        RequireMixedCase,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequireNonAlphaNumeric")]
        RequireNonAlphaNumeric,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RestrictAdminToSerialPort")]
        RestrictAdminToSerialPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class AnyConfigElement {
        
        private ConfigConfigBase[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AAAPolicy", typeof(ConfigAAAPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AccessControlList", typeof(ConfigAccessControlList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AppSecurityPolicy", typeof(ConfigAppSecurityPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CRLFetch", typeof(ConfigCRLFetch), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CertMonitor", typeof(ConfigCertMonitor), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CompileOptionsPolicy", typeof(ConfigCompileOptionsPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ConformancePolicy", typeof(ConfigConformancePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CountMonitor", typeof(ConfigCountMonitor), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoCertificate", typeof(ConfigCryptoCertificate), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoFWCred", typeof(ConfigCryptoFWCred), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoIdentCred", typeof(ConfigCryptoIdentCred), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoKerberosKDC", typeof(ConfigCryptoKerberosKDC), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoKerberosKeytab", typeof(ConfigCryptoKerberosKeytab), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoKey", typeof(ConfigCryptoKey), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoProfile", typeof(ConfigCryptoProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoSSKey", typeof(ConfigCryptoSSKey), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoValCred", typeof(ConfigCryptoValCred), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DNSNameService", typeof(ConfigDNSNameService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DocumentCryptoMap", typeof(ConfigDocumentCryptoMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Domain", typeof(ConfigDomain), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DurationMonitor", typeof(ConfigDurationMonitor), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorReportSettings", typeof(ConfigErrorReportSettings), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EthernetInterface", typeof(ConfigEthernetInterface), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FTPFilePollerSourceProtocolHandler", typeof(ConfigFTPFilePollerSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FTPQuoteCommands", typeof(ConfigFTPQuoteCommands), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FTPServerSourceProtocolHandler", typeof(ConfigFTPServerSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FilterAction", typeof(ConfigFilterAction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPInputConversionMap", typeof(ConfigHTTPInputConversionMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPSSourceProtocolHandler", typeof(ConfigHTTPSSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPService", typeof(ConfigHTTPService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPSourceProtocolHandler", typeof(ConfigHTTPSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPUserAgent", typeof(ConfigHTTPUserAgent), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HostAlias", typeof(ConfigHostAlias), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IMSConnect", typeof(ConfigIMSConnect), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IMSConnectSourceProtocolHandler", typeof(ConfigIMSConnectSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ImportPackage", typeof(ConfigImportPackage), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IncludeConfig", typeof(ConfigIncludeConfig), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoadBalancerGroup", typeof(ConfigLoadBalancerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogLabel", typeof(ConfigLogLabel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogTarget", typeof(ConfigLogTarget), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQGW", typeof(ConfigMQGW), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQQM", typeof(ConfigMQQM), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQQMGroup", typeof(ConfigMQQMGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQSourceProtocolHandler", typeof(ConfigMQSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQhost", typeof(ConfigMQhost), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MQproxy", typeof(ConfigMQproxy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MTOMPolicy", typeof(ConfigMTOMPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Matching", typeof(ConfigMatching), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MessageMatching", typeof(ConfigMessageMatching), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MessageType", typeof(ConfigMessageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MgmtInterface", typeof(ConfigMgmtInterface), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MultiProtocolGateway", typeof(ConfigMultiProtocolGateway), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NFSClientSettings", typeof(ConfigNFSClientSettings), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NFSDynamicMounts", typeof(ConfigNFSDynamicMounts), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NFSFilePollerSourceProtocolHandler", typeof(ConfigNFSFilePollerSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NFSStaticMount", typeof(ConfigNFSStaticMount), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NTPService", typeof(ConfigNTPService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NameValueProfile", typeof(ConfigNameValueProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NetworkSettings", typeof(ConfigNetworkSettings), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PeerGroup", typeof(ConfigPeerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PolicyAttachments", typeof(ConfigPolicyAttachments), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PolicyParameters", typeof(ConfigPolicyParameters), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProcessingMetadata", typeof(ConfigProcessingMetadata), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RADIUSSettings", typeof(ConfigRADIUSSettings), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RBMSettings", typeof(ConfigRBMSettings), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMAction", typeof(ConfigSLMAction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMCredClass", typeof(ConfigSLMCredClass), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMPolicy", typeof(ConfigSLMPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMRsrcClass", typeof(ConfigSLMRsrcClass), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMSchedule", typeof(ConfigSLMSchedule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SNMPSettings", typeof(ConfigSNMPSettings), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SOAPHeaderDisposition", typeof(ConfigSOAPHeaderDisposition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SQLDataSource", typeof(ConfigSQLDataSource), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSHService", typeof(ConfigSSHService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxyProfile", typeof(ConfigSSLProxyProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxyService", typeof(ConfigSSLProxyService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SchemaExceptionMap", typeof(ConfigSchemaExceptionMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ShellAlias", typeof(ConfigShellAlias), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SimpleCountMonitor", typeof(ConfigSimpleCountMonitor), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StatelessTCPSourceProtocolHandler", typeof(ConfigStatelessTCPSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Statistics", typeof(ConfigStatistics), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicy", typeof(ConfigStylePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicyAction", typeof(ConfigStylePolicyAction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicyRule", typeof(ConfigStylePolicyRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SystemSettings", typeof(ConfigSystemSettings), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TAM", typeof(ConfigTAM), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TCPProxyService", typeof(ConfigTCPProxyService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TFIMEndpoint", typeof(ConfigTFIMEndpoint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TelnetService", typeof(ConfigTelnetService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Throttler", typeof(ConfigThrottler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TibcoEMSServer", typeof(ConfigTibcoEMSServer), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TibcoEMSSourceProtocolHandler", typeof(ConfigTibcoEMSSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TimeSettings", typeof(ConfigTimeSettings), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UDDIRegistry", typeof(ConfigUDDIRegistry), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UDDISubscription", typeof(ConfigUDDISubscription), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLMap", typeof(ConfigURLMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRefreshPolicy", typeof(ConfigURLRefreshPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRewritePolicy", typeof(ConfigURLRewritePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("User", typeof(ConfigUser), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserGroup", typeof(ConfigUserGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("VLANInterface", typeof(ConfigVLANInterface), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSEndpointRewritePolicy", typeof(ConfigWSEndpointRewritePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSGateway", typeof(ConfigWSGateway), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRRServer", typeof(ConfigWSRRServer), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRRSubscription", typeof(ConfigWSRRSubscription), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSStylePolicy", typeof(ConfigWSStylePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSStylePolicyRule", typeof(ConfigWSStylePolicyRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebAppErrorHandlingPolicy", typeof(ConfigWebAppErrorHandlingPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebAppFW", typeof(ConfigWebAppFW), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebAppRequest", typeof(ConfigWebAppRequest), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebAppResponse", typeof(ConfigWebAppResponse), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebAppSessionPolicy", typeof(ConfigWebAppSessionPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebGUI", typeof(ConfigWebGUI), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebServiceMonitor", typeof(ConfigWebServiceMonitor), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebServicesAgent", typeof(ConfigWebServicesAgent), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebSphereJMSServer", typeof(ConfigWebSphereJMSServer), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WebSphereJMSSourceProtocolHandler", typeof(ConfigWebSphereJMSSourceProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XACMLPDP", typeof(ConfigXACMLPDP), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLFirewallService", typeof(ConfigXMLFirewallService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(ConfigXMLManager), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XPathRoutingMap", typeof(ConfigXPathRoutingMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XSLCoprocService", typeof(ConfigXSLCoprocService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XSLProxyService", typeof(ConfigXSLProxyService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XTCProtocolHandler", typeof(ConfigXTCProtocolHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("xmltrace", typeof(Configxmltrace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ConfigConfigBase[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigAAAPolicy : ConfigAccessControl {
        
        private object[] itemsField;
        
        private ItemsChoiceType30[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Authenticate", typeof(dmAAAPAuthenticate), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Authorize", typeof(dmAAAPAuthorize), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AuthorizedCounter", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoSValve", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EnforceSOAPActor", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ExtractIdentity", typeof(dmAAAPExtractIdentity), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ExtractResource", typeof(dmAAAPExtractResource), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LDAPVersion", typeof(dmLDAPVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LDAPsuffix", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LTPAAttributes", typeof(dmLTPAUserAttributeNameAndValue), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogAllowed", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogAllowedLevel", typeof(dmLogLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogRejected", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogRejectedLevel", typeof(dmLogLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MapCredentials", typeof(dmAAAPMapCredentials), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MapResource", typeof(dmAAAPMapResource), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NamespaceMapping", typeof(dmNamespaceMapping), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PingIdentityCompatibility", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PostProcess", typeof(dmAAAPPostProcess), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RejectedCounter", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SAML2MetadataFile", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("SAMLAttribute", typeof(dmSAMLAttributeNameAndValue), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SAMLSigningAlg", typeof(dmCryptoSigningAlgorithm), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SAMLSigningCert", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SAMLSigningHashAlg", typeof(dmCryptoHashAlgorithm), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SAMLSigningKey", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SAMLSourceIDMappingFile", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("SAMLValcred", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TransactionPriority", typeof(dmAAATransactionPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSSecActorRoleID", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSSecureConversationCryptoKey", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType30[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType30 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Authenticate")]
        Authenticate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Authorize")]
        Authorize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AuthorizedCounter")]
        AuthorizedCounter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoSValve")]
        DoSValve,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EnforceSOAPActor")]
        EnforceSOAPActor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ExtractIdentity")]
        ExtractIdentity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ExtractResource")]
        ExtractResource,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPVersion")]
        LDAPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPsuffix")]
        LDAPsuffix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LTPAAttributes")]
        LTPAAttributes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogAllowed")]
        LogAllowed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogAllowedLevel")]
        LogAllowedLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogRejected")]
        LogRejected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogRejectedLevel")]
        LogRejectedLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MapCredentials")]
        MapCredentials,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MapResource")]
        MapResource,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NamespaceMapping")]
        NamespaceMapping,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PingIdentityCompatibility")]
        PingIdentityCompatibility,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PostProcess")]
        PostProcess,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RejectedCounter")]
        RejectedCounter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SAML2MetadataFile")]
        SAML2MetadataFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SAMLAttribute")]
        SAMLAttribute,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SAMLSigningAlg")]
        SAMLSigningAlg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SAMLSigningCert")]
        SAMLSigningCert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SAMLSigningHashAlg")]
        SAMLSigningHashAlg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SAMLSigningKey")]
        SAMLSigningKey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SAMLSourceIDMappingFile")]
        SAMLSourceIDMappingFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SAMLValcred")]
        SAMLValcred,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TransactionPriority")]
        TransactionPriority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSSecActorRoleID")]
        WSSecActorRoleID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSSecureConversationCryptoKey")]
        WSSecureConversationCryptoKey,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSOAPHeaderDisposition))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigProcessingMetadata))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigXACMLPDP))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigRADIUSSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigAAAPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDomain))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigTFIMEndpoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigTAM))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigRBMSettings))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigAccessControl : ConfigConfigBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigIMSConnect))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigPolicyAttachments))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigPolicyParameters))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWSRRServer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigFTPQuoteCommands))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMTOMPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigAppSecurityPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWebAppFW))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWebAppRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWebAppResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigNameValueProfile))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSimpleCountMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWebAppErrorHandlingPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWebAppSessionPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWebServiceSubscription))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWSRRSubscription))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigUDDISubscription))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigUDDIRegistry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSQLDataSource))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigNFSDynamicMounts))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigNFSStaticMount))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigNFSClientSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSLMPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigPeerGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSLMAction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSLMSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSLMRsrcClass))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSLMCredClass))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWebServicesAgent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigIMSConnectSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigFilePollerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigFTPFilePollerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigNFSFilePollerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigJMSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWebSphereJMSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigTibcoEMSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigStatelessTCPSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigXTCProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMQSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigFTPServerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigHTTPSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigHTTPSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigGatewayBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWSGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMultiProtocolGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigLoadBalancerGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigIncludeConfig))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigImportPackage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigAccessControlList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDynamicXMLContentMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDynamicSchema))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSchemaExceptionMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDynamicStylesheet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDocumentCryptoMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigXPathRoutingMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigHTTPInputConversionMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWebServiceMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMessageFlowControl))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigFilterAction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMessageMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDurationMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCountMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMessageType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMessageMatching))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigEventlog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigLogTarget))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigLogLabel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCrypto))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoKerberosKeytab))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoKerberosKDC))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSSLProxyProfile))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoProfile))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoFWCred))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoValCred))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoIdentCred))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoCertificate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoSSKey))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoKey))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCRLFetch))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCertMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigAccessControl))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSOAPHeaderDisposition))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigProcessingMetadata))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigXACMLPDP))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigRADIUSSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigAAAPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDomain))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigTFIMEndpoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigTAM))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigRBMSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Configxmltrace))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigXMLManager))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigJMSServer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWebSphereJMSServer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigTibcoEMSServer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMQConfiguration))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMQGW))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMQQMBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMQQMGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMQQM))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMQproxy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMQhost))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMatching))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWSEndpointRewritePolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigURLRewritePolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCompileOptionsPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigURLRefreshPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigURLMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWSStylePolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigStylePolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigStylePolicyRuleBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWSStylePolicyRule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigStylePolicyRule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigStylePolicyAction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDeviceManagementService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMgmtInterface))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWebGUI))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSSHService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigTelnetService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigXSLCoprocService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigHTTPProxyService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigXMLFirewallService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigXSLProxyService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSSLProxyService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigTCPProxyService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigHTTPService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigConformancePolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigIPInterface))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigVLANInterface))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigEthernetInterface))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigHTTPUserAgent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigNetworkConfiguration))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigHostAlias))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDNSNameService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigNTPService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigNetworkSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigShellAlias))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigThrottler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigStatistics))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigUserGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigUser))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSNMPSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDeviceSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigTimeSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigErrorReportSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSystemSettings))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigConfigBase {
        
        private dmAdminState mAdminStateField;
        
        private bool mAdminStateFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmAdminState mAdminState {
            get {
                return this.mAdminStateField;
            }
            set {
                this.mAdminStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mAdminStateSpecified {
            get {
                return this.mAdminStateFieldSpecified;
            }
            set {
                this.mAdminStateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigIMSConnect : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType76[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ClientID", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Datastore", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EBCDICConversion", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EncodingScheme", typeof(dmEncodingScheme), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Exit", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GenerateClientIDPrefix", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Group", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HostName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IRMTimer", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LtermName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Password", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Port", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TranCode", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType76[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType76 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ClientID")]
        ClientID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Datastore")]
        Datastore,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EBCDICConversion")]
        EBCDICConversion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EncodingScheme")]
        EncodingScheme,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Exit")]
        Exit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GenerateClientIDPrefix")]
        GenerateClientIDPrefix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Group")]
        Group,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HostName")]
        HostName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IRMTimer")]
        IRMTimer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LtermName")]
        LtermName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Password")]
        Password,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Port")]
        Port,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TranCode")]
        TranCode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserName")]
        UserName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigPolicyAttachments : ConfigConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EnforcementMode", typeof(dmPolicyEnforcementMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ExternalPolicy", typeof(dmExternalAttachedPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IgnoredPolicyAttachmentPoints", typeof(dmPolicyAttachmentPoint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PolicyReferences", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigPolicyParameters : ConfigConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PolicyParameter", typeof(dmPolicyParameter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigWSRRServer : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType75[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Password", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SoapURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Username", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType75[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType75 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Password")]
        Password,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SoapURL")]
        SoapURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Username")]
        Username,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigFTPQuoteCommands : ConfigConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FTPQuotedCommands", typeof(dmFTPQuotedCommand), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigMTOMPolicy : ConfigConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IncludeContentType", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mode", typeof(dmMtomMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rule", typeof(dmMtomRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigAppSecurityPolicy : ConfigConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ErrorMaps", typeof(dmPolicyMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestMaps", typeof(dmWebAppRequestPolicyMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseMaps", typeof(dmWebAppResponsePolicyMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigWebAppFW : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType74[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BackHTTPVersion", typeof(dmHTTPVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackPersistentTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugHistory", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugMode", typeof(dmDebugMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugTrigger", typeof(dmMSDebugTriggerType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoChunkedUpload", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoHostRewriting", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FollowRedirects", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontHTTPVersion", typeof(dmHTTPVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontPersistentTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontSide", typeof(dmFrontSide), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPClientIPLabel", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Priority", typeof(dmSchedulerPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemotePort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestSideSecurity", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseSideSecurity", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxyProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StreamOutputToBack", typeof(dmQuarantineMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StreamOutputToFront", typeof(dmQuarantineMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URINormalization", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRewritePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType74[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType74 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackHTTPVersion")]
        BackHTTPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackPersistentTimeout")]
        BackPersistentTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackTimeout")]
        BackTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugHistory")]
        DebugHistory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugMode")]
        DebugMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugTrigger")]
        DebugTrigger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoChunkedUpload")]
        DoChunkedUpload,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoHostRewriting")]
        DoHostRewriting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorPolicy")]
        ErrorPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FollowRedirects")]
        FollowRedirects,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontHTTPVersion")]
        FrontHTTPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontPersistentTimeout")]
        FrontPersistentTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontSide")]
        FrontSide,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontTimeout")]
        FrontTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPClientIPLabel")]
        HTTPClientIPLabel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Priority")]
        Priority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteAddress")]
        RemoteAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemotePort")]
        RemotePort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestSideSecurity")]
        RequestSideSecurity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseSideSecurity")]
        ResponseSideSecurity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxyProfile")]
        SSLProxyProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StreamOutputToBack")]
        StreamOutputToBack,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StreamOutputToFront")]
        StreamOutputToFront,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylePolicy")]
        StylePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URINormalization")]
        URINormalization,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URLRewritePolicy")]
        URLRewritePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigWebAppRequest : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType73[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AAA", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ContentTypes", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CookieProfile", typeof(dmCookieProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HeaderGNVC", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxBodySize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxURISize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MinBodySize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MultipartFormData", typeof(dmMultipartFormDataProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NonXMLPolicy", typeof(dmWebAppNonXMLPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NonXMLRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OKMethods", typeof(dmHTTPRequestMethods), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OKVersions", typeof(dmHTTPVersionMask), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PolicyType", typeof(dmSatisfactionPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QueryStringGNVC", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QueryStringPolicy", typeof(dmARDType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RateLimiter", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SQLInjection", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLPolicy", typeof(dmARDType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SessionManagementProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URIFilterDotDot", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URIFilterExe", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URIFilterFragment", typeof(dmURIFragmentFixupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URIFilterUnicode", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UrlEncodedGNVC", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLPolicy", typeof(dmWebAppXMLPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType73[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType73 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AAA")]
        AAA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ContentTypes")]
        ContentTypes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CookieProfile")]
        CookieProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorPolicy")]
        ErrorPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HeaderGNVC")]
        HeaderGNVC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxBodySize")]
        MaxBodySize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxURISize")]
        MaxURISize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MinBodySize")]
        MinBodySize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MultipartFormData")]
        MultipartFormData,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NonXMLPolicy")]
        NonXMLPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NonXMLRule")]
        NonXMLRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OKMethods")]
        OKMethods,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OKVersions")]
        OKVersions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PolicyType")]
        PolicyType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QueryStringGNVC")]
        QueryStringGNVC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QueryStringPolicy")]
        QueryStringPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RateLimiter")]
        RateLimiter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SQLInjection")]
        SQLInjection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLPolicy")]
        SSLPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SessionManagementProfile")]
        SessionManagementProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URIFilterDotDot")]
        URIFilterDotDot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URIFilterExe")]
        URIFilterExe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URIFilterFragment")]
        URIFilterFragment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URIFilterUnicode")]
        URIFilterUnicode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UrlEncodedGNVC")]
        UrlEncodedGNVC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLPolicy")]
        XMLPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLRule")]
        XMLRule,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigWebAppResponse : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType72[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ContentTypes", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HeaderGNVC", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxBodySize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MinBodySize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NonXMLPolicy", typeof(dmWebAppNonXMLPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NonXMLRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OKCodes", typeof(dmHTTPResponseCodes), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OKVersions", typeof(dmHTTPVersionMask), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PolicyType", typeof(dmSatisfactionPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLPolicy", typeof(dmWebAppXMLPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType72[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType72 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ContentTypes")]
        ContentTypes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorPolicy")]
        ErrorPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HeaderGNVC")]
        HeaderGNVC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxBodySize")]
        MaxBodySize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MinBodySize")]
        MinBodySize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NonXMLPolicy")]
        NonXMLPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NonXMLRule")]
        NonXMLRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OKCodes")]
        OKCodes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OKVersions")]
        OKVersions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PolicyType")]
        PolicyType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLPolicy")]
        XMLPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLRule")]
        XMLRule,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigNameValueProfile : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType71[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DefaultFixup", typeof(dmValidationFixupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultMapValue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultXSS", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxAggregateSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxAttributes", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxNameSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxValueSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ValidationList", typeof(dmValidationType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType71[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType71 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultFixup")]
        DefaultFixup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultMapValue")]
        DefaultMapValue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultXSS")]
        DefaultXSS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxAggregateSize")]
        MaxAggregateSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxAttributes")]
        MaxAttributes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxNameSize")]
        MaxNameSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxValueSize")]
        MaxValueSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ValidationList")]
        ValidationList,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigSimpleCountMonitor : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType70[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Action", typeof(dmFilterActionType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ConcurrentConnections", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxSources", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TPS", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType70[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType70 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Action")]
        Action,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ConcurrentConnections")]
        ConcurrentConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxSources")]
        MaxSources,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TPS")]
        TPS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigWebAppErrorHandlingPolicy : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType69[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ErrorMonitor", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorStylePolicyRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmWebAppErrorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType69[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType69 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorMonitor")]
        ErrorMonitor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorStylePolicyRule")]
        ErrorStylePolicyRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Type")]
        Type,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URL")]
        URL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigWebAppSessionPolicy : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType68[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AddressAgnosticCookie", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AutoRenew", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StartMatches", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Timeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType68[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType68 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AddressAgnosticCookie")]
        AddressAgnosticCookie,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AutoRenew")]
        AutoRenew,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StartMatches")]
        StartMatches,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Timeout")]
        Timeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWSRRSubscription))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigUDDISubscription))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigWebServiceSubscription : ConfigConfigBase {
        
        private string[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigWSRRSubscription : ConfigWebServiceSubscription {
        
        private object[] items1Field;
        
        private Items1ChoiceType13[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Method", typeof(dmWsrrSynchronization), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Namespace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ObjectName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ObjectType", typeof(dmWsrrSubscriptionType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RefreshInterval", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Server", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType13[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType13 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Method")]
        Method,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Namespace")]
        Namespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ObjectName")]
        ObjectName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ObjectType")]
        ObjectType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RefreshInterval")]
        RefreshInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Server")]
        Server,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigUDDISubscription : ConfigWebServiceSubscription {
        
        private object[] items1Field;
        
        private Items1ChoiceType12[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Password", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Registry", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SubscriptionKey", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Username", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType12[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType12 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Password")]
        Password,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Registry")]
        Registry,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SubscriptionKey")]
        SubscriptionKey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Username")]
        Username,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigUDDIRegistry : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType67[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IPAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InquiryURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Port", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PublishURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxyProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SecurityURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SubscriptionURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UseSSL", typeof(dmUDDIUseSSL), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Version", typeof(dmUDDIVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType67[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType67 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IPAddress")]
        IPAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":InquiryURL")]
        InquiryURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Port")]
        Port,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PublishURL")]
        PublishURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLPort")]
        SSLPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxyProfile")]
        SSLProxyProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SecurityURL")]
        SecurityURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SubscriptionURL")]
        SubscriptionURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UseSSL")]
        UseSSL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Version")]
        Version,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigSQLDataSource : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType66[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AllowReadOnly", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DataSourceHost", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DataSourceID", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DataSourcePort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Database", typeof(dmSQLDatabaseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LimitReturnedData", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LimitReturnedDataSize", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Password", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SQLDataSourceConfigNVPairs", typeof(dmSQLDataSourceConfigNVPair), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Username", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType66[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType66 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowReadOnly")]
        AllowReadOnly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DataSourceHost")]
        DataSourceHost,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DataSourceID")]
        DataSourceID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DataSourcePort")]
        DataSourcePort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Database")]
        Database,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LimitReturnedData")]
        LimitReturnedData,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LimitReturnedDataSize")]
        LimitReturnedDataSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Password")]
        Password,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SQLDataSourceConfigNVPairs")]
        SQLDataSourceConfigNVPairs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Username")]
        Username,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigNFSDynamicMounts : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType65[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Authentication", typeof(dmNFSAuthenticationType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IdleUnmountSeconds", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MountTimeoutSeconds", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReadOnly", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReadSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Retransmissions", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Timeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Transport", typeof(dmNFSTransportType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Version", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WriteSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType65[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType65 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Authentication")]
        Authentication,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IdleUnmountSeconds")]
        IdleUnmountSeconds,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MountTimeoutSeconds")]
        MountTimeoutSeconds,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReadOnly")]
        ReadOnly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReadSize")]
        ReadSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Retransmissions")]
        Retransmissions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Timeout")]
        Timeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Transport")]
        Transport,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Version")]
        Version,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WriteSize")]
        WriteSize,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigNFSStaticMount : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType64[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Authentication", typeof(dmNFSAuthenticationType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalFilesystemAccess", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReadOnly", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReadSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Retransmissions", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Timeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Transport", typeof(dmNFSTransportType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Version", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WriteSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("remote", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType64[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType64 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Authentication")]
        Authentication,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalFilesystemAccess")]
        LocalFilesystemAccess,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReadOnly")]
        ReadOnly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReadSize")]
        ReadSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Retransmissions")]
        Retransmissions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Timeout")]
        Timeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Transport")]
        Transport,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Version")]
        Version,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WriteSize")]
        WriteSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":remote")]
        remote,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigNFSClientSettings : ConfigConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("KerberosKeytab", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MountRefreshTime", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigSLMPolicy : ConfigConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExecutionPolicy", typeof(dmSLMExecutionPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PeerGroup", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Statement", typeof(dmSLMStatement), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigPeerGroup : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType63[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmPeerGroupType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType63[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType63 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Type")]
        Type,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URL")]
        URL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigSLMAction : ConfigConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LogLevel", typeof(dmLogLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmSLMActionType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigSLMSchedule : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType62[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DaysOfWeek", typeof(dmWeekdayBitmap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Duration", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StartTime", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType62[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType62 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaysOfWeek")]
        DaysOfWeek,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Duration")]
        Duration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StartTime")]
        StartTime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigSLMRsrcClass : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType61[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RsrcMatchType", typeof(dmSLMMatchType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RsrcType", typeof(dmSLMRsrcType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RsrcValue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Stylesheet", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("Subscription", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRRSubscription", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XPathFilter", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType61[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType61 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RsrcMatchType")]
        RsrcMatchType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RsrcType")]
        RsrcType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RsrcValue")]
        RsrcValue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Stylesheet")]
        Stylesheet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Subscription")]
        Subscription,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRRSubscription")]
        WSRRSubscription,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XPathFilter")]
        XPathFilter,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigSLMCredClass : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType60[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CredMatchType", typeof(dmSLMMatchType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CredType", typeof(dmSLMCredType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CredValue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Header", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Stylesheet", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType60[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType60 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CredMatchType")]
        CredMatchType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CredType")]
        CredType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CredValue")]
        CredValue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Header")]
        Header,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Stylesheet")]
        Stylesheet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigWebServicesAgent : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType59[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BufferMode", typeof(dmWSMBufferMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CaptureMode", typeof(dmWSMCapture), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxMemoryKB", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxRecords", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType59[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType59 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BufferMode")]
        BufferMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CaptureMode")]
        CaptureMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxMemoryKB")]
        MaxMemoryKB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxRecords")]
        MaxRecords,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigIMSConnectSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigFilePollerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigFTPFilePollerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigNFSFilePollerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigJMSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWebSphereJMSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigTibcoEMSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigStatelessTCPSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigXTCProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMQSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigFTPServerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigHTTPSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigHTTPSourceProtocolHandler))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigSourceProtocolHandler : ConfigConfigBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigIMSConnectSourceProtocolHandler : ConfigSourceProtocolHandler {
        
        private object[] itemsField;
        
        private ItemsChoiceType58[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EBCDICInput", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PersistentConnections", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType58[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType58 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EBCDICInput")]
        EBCDICInput,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PersistentConnections")]
        PersistentConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigFTPFilePollerSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigNFSFilePollerSourceProtocolHandler))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigFilePollerSourceProtocolHandler : ConfigSourceProtocolHandler {
        
        private object[] itemsField;
        
        private ItemsChoiceType57[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DelayBetweenPolls", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DeleteOnError", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DeleteOnSuccess", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorRenamePattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GenerateResultFile", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InputFileMatchPattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProcessingRenamePattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProcessingSeizePattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProcessingSeizeTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResultNamePattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SuccessRenamePattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TargetDirectory", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType57[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType57 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DelayBetweenPolls")]
        DelayBetweenPolls,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DeleteOnError")]
        DeleteOnError,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DeleteOnSuccess")]
        DeleteOnSuccess,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorRenamePattern")]
        ErrorRenamePattern,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GenerateResultFile")]
        GenerateResultFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":InputFileMatchPattern")]
        InputFileMatchPattern,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ProcessingRenamePattern")]
        ProcessingRenamePattern,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ProcessingSeizePattern")]
        ProcessingSeizePattern,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ProcessingSeizeTimeout")]
        ProcessingSeizeTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResultNamePattern")]
        ResultNamePattern,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SuccessRenamePattern")]
        SuccessRenamePattern,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TargetDirectory")]
        TargetDirectory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigFTPFilePollerSourceProtocolHandler : ConfigFilePollerSourceProtocolHandler {
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigNFSFilePollerSourceProtocolHandler : ConfigFilePollerSourceProtocolHandler {
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWebSphereJMSSourceProtocolHandler))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigTibcoEMSSourceProtocolHandler))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigJMSSourceProtocolHandler : ConfigSourceProtocolHandler {
        
        private string[] itemsField;
        
        private ItemsChoiceType56[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GetQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PutQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Selector", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public string[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType56[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType56 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GetQueue")]
        GetQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PutQueue")]
        PutQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Selector")]
        Selector,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigWebSphereJMSSourceProtocolHandler : ConfigJMSSourceProtocolHandler {
        
        private object[] items1Field;
        
        private Items1ChoiceType11[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ReplyTopicSpace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestTopicSpace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Server", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType11[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType11 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReplyTopicSpace")]
        ReplyTopicSpace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestTopicSpace")]
        RequestTopicSpace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Server")]
        Server,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigTibcoEMSSourceProtocolHandler : ConfigJMSSourceProtocolHandler {
        
        private dmReference[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Server", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigStatelessTCPSourceProtocolHandler : ConfigSourceProtocolHandler {
        
        private object[] itemsField;
        
        private ItemsChoiceType55[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PersistentConnections", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType55[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType55 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PersistentConnections")]
        PersistentConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigXTCProtocolHandler : ConfigSourceProtocolHandler {
        
        private object[] itemsField;
        
        private ItemsChoiceType54[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CloseOnFault", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemotePort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType54[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType54 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CloseOnFault")]
        CloseOnFault,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteAddress")]
        RemoteAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemotePort")]
        RemotePort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigMQSourceProtocolHandler : ConfigSourceProtocolHandler {
        
        private object[] itemsField;
        
        private ItemsChoiceType53[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CodePage", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ConcurrentConnections", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ContentTypeHeader", typeof(dmMQContentTypeHeader), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ContentTypeXPath", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ExcludeHeaders", typeof(dmMQHeaders), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GetMessageOptions", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GetQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PollingInterval", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PutQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QueueManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType53[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType53 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CodePage")]
        CodePage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ConcurrentConnections")]
        ConcurrentConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ContentTypeHeader")]
        ContentTypeHeader,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ContentTypeXPath")]
        ContentTypeXPath,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ExcludeHeaders")]
        ExcludeHeaders,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GetMessageOptions")]
        GetMessageOptions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GetQueue")]
        GetQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PollingInterval")]
        PollingInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PutQueue")]
        PutQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QueueManager")]
        QueueManager,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigFTPServerSourceProtocolHandler : ConfigSourceProtocolHandler {
        
        private object[] itemsField;
        
        private ItemsChoiceType52[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowCCC", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowCompression", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowREST", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowSTOU", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CertificateAAAPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DataEncryption", typeof(dmFTPDataEncryption), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultDirectory", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FilesystemType", typeof(dmFTPFilesystemType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IdleTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxFilenameLength", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Passive", typeof(dmFTPPassive), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PasswordAAAPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PersistentFilesystemTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequireTLS", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseNFSMount", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseStorage", typeof(dmFTPResponseStorage), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseSuffix", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseType", typeof(dmFTPResponseType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RestartTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TemporaryStorageSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UniqueFilenamePrefix", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("VirtualDirectories", typeof(dmFTPServerVirtualDirectory), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType52[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType52 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowCCC")]
        AllowCCC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowCompression")]
        AllowCompression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowREST")]
        AllowREST,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowSTOU")]
        AllowSTOU,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CertificateAAAPolicy")]
        CertificateAAAPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DataEncryption")]
        DataEncryption,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultDirectory")]
        DefaultDirectory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FilesystemType")]
        FilesystemType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IdleTimeout")]
        IdleTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxFilenameLength")]
        MaxFilenameLength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Passive")]
        Passive,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PasswordAAAPolicy")]
        PasswordAAAPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PersistentFilesystemTimeout")]
        PersistentFilesystemTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequireTLS")]
        RequireTLS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseNFSMount")]
        ResponseNFSMount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseStorage")]
        ResponseStorage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseSuffix")]
        ResponseSuffix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseType")]
        ResponseType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseURL")]
        ResponseURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RestartTimeout")]
        RestartTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TemporaryStorageSize")]
        TemporaryStorageSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UniqueFilenamePrefix")]
        UniqueFilenamePrefix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":VirtualDirectories")]
        VirtualDirectories,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigHTTPSSourceProtocolHandler : ConfigSourceProtocolHandler {
        
        private object[] itemsField;
        
        private ItemsChoiceType51[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowCompression", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowedFeatures", typeof(dmSourceHTTPFeatureType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPVersion", typeof(dmHTTPVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxHdrCount", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxNameHdrLen", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxQueryStringLen", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxTotalHdrLen", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxURLLen", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxValueHdrLen", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PersistentConnections", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType51[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType51 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowCompression")]
        AllowCompression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowedFeatures")]
        AllowedFeatures,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPVersion")]
        HTTPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxHdrCount")]
        MaxHdrCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxNameHdrLen")]
        MaxNameHdrLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxQueryStringLen")]
        MaxQueryStringLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxTotalHdrLen")]
        MaxTotalHdrLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxURLLen")]
        MaxURLLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxValueHdrLen")]
        MaxValueHdrLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PersistentConnections")]
        PersistentConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigHTTPSourceProtocolHandler : ConfigSourceProtocolHandler {
        
        private object[] itemsField;
        
        private ItemsChoiceType50[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowCompression", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowedFeatures", typeof(dmSourceHTTPFeatureType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPVersion", typeof(dmHTTPVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxHdrCount", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxNameHdrLen", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxQueryStringLen", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxTotalHdrLen", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxURLLen", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxValueHdrLen", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PersistentConnections", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType50[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType50 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowCompression")]
        AllowCompression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowedFeatures")]
        AllowedFeatures,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPVersion")]
        HTTPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxHdrCount")]
        MaxHdrCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxNameHdrLen")]
        MaxNameHdrLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxQueryStringLen")]
        MaxQueryStringLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxTotalHdrLen")]
        MaxTotalHdrLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxURLLen")]
        MaxURLLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxValueHdrLen")]
        MaxValueHdrLen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PersistentConnections")]
        PersistentConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWSGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMultiProtocolGateway))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigGatewayBase : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType49[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AllowCompression", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackAttachmentFormat", typeof(dmGatewayAttachmentFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackHTTPVersion", typeof(dmHTTPVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackPersistentTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackendUrl", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("CountMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugHistory", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugMode", typeof(dmDebugMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugTrigger", typeof(dmMSDebugTriggerType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultParamNamespace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoChunkedUpload", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoHostRewriting", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DurationMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FWCred", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FollowRedirects", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontAttachmentFormat", typeof(dmGatewayAttachmentFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontPersistentTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontProtocol", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GatewayParserLimits", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPClientIPLabel", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HeaderInjection", typeof(dmHeaderInjection), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HeaderSuppression", typeof(dmHeaderSuppression), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IncludeResponseTypeEncoding", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoadBalancerHashHeader", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoopDetection", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MIMEBackHeaders", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MIMEFrontHeaders", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxMessageSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MonitorProcessingPolicy", typeof(dmMonitorProcessingPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsAttachmentByteCount", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsAttributeCount", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsElementDepth", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsExternalReferences", typeof(dmExternalRefHandling), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsForbidExternalReferences", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsMaxNodeSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PersistentConnections", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Priority", typeof(dmSchedulerPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProcessHTTPErrors", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PropagateURI", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QueryParamNamespace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestAttachments", typeof(dmAttachmentMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestType", typeof(dmXMLReqRespType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseAttachments", typeof(dmAttachmentMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseType", typeof(dmXMLReqRespType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RootPartNotFirstAction", typeof(dmRootPartNotFirstAction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SOAPSchemaURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ServiceMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StreamOutputToBack", typeof(dmQuarantineMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StreamOutputToFront", typeof(dmQuarantineMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetParameters", typeof(dmStylesheetParameter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRewritePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSABackProtocol", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSADefaultFaultTo", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("WSADefaultReplyTo", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("WSAForce", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSAGenStyle", typeof(dmWSAOriginatedRequestType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSAHTTPAsyncResponseCode", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSAMode", typeof(dmWSAModeType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSARequireAAA", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSARewriteFaultTo", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSARewriteReplyTo", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSARewriteTo", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSAStrip", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSATimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMAAAPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMBackAcksTo", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMBackCreateSequence", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMBackForce", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMDestinationAcceptCreateSequence", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMDestinationAcceptOffers", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMDestinationInOrder", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMDestinationMaximumInOrderQueueLength", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMDestinationMaximumSequences", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMEnabled", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMFrontAcksTo", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMFrontCreateSequence", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMFrontForce", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSequenceExpiration", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSourceExponentialBackoff", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSourceInactivityClose", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSourceMakeOffer", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSourceMaximumQueueLength", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSourceMaximumRetransmissions", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSourceMaximumSequences", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSourceRequestAckCount", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMSourceRetransmissionInterval", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRMUsesSequenceSSL", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType49[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType49 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowCompression")]
        AllowCompression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackAttachmentFormat")]
        BackAttachmentFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackHTTPVersion")]
        BackHTTPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackPersistentTimeout")]
        BackPersistentTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackTimeout")]
        BackTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackendUrl")]
        BackendUrl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CountMonitors")]
        CountMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugHistory")]
        DebugHistory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugMode")]
        DebugMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugTrigger")]
        DebugTrigger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultParamNamespace")]
        DefaultParamNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoChunkedUpload")]
        DoChunkedUpload,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoHostRewriting")]
        DoHostRewriting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DurationMonitors")]
        DurationMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FWCred")]
        FWCred,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FollowRedirects")]
        FollowRedirects,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontAttachmentFormat")]
        FrontAttachmentFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontPersistentTimeout")]
        FrontPersistentTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontProtocol")]
        FrontProtocol,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontTimeout")]
        FrontTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GatewayParserLimits")]
        GatewayParserLimits,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPClientIPLabel")]
        HTTPClientIPLabel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HeaderInjection")]
        HeaderInjection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HeaderSuppression")]
        HeaderSuppression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IncludeResponseTypeEncoding")]
        IncludeResponseTypeEncoding,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LoadBalancerHashHeader")]
        LoadBalancerHashHeader,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LoopDetection")]
        LoopDetection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MIMEBackHeaders")]
        MIMEBackHeaders,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MIMEFrontHeaders")]
        MIMEFrontHeaders,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxMessageSize")]
        MaxMessageSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MonitorProcessingPolicy")]
        MonitorProcessingPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsAttachmentByteCount")]
        ParserLimitsAttachmentByteCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsAttributeCount")]
        ParserLimitsAttributeCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsElementDepth")]
        ParserLimitsElementDepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsExternalReferences")]
        ParserLimitsExternalReferences,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsForbidExternalReferences")]
        ParserLimitsForbidExternalReferences,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsMaxNodeSize")]
        ParserLimitsMaxNodeSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PersistentConnections")]
        PersistentConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Priority")]
        Priority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ProcessHTTPErrors")]
        ProcessHTTPErrors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PropagateURI")]
        PropagateURI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QueryParamNamespace")]
        QueryParamNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestAttachments")]
        RequestAttachments,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestType")]
        RequestType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseAttachments")]
        ResponseAttachments,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseType")]
        ResponseType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RootPartNotFirstAction")]
        RootPartNotFirstAction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SOAPSchemaURL")]
        SOAPSchemaURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ServiceMonitors")]
        ServiceMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StreamOutputToBack")]
        StreamOutputToBack,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StreamOutputToFront")]
        StreamOutputToFront,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylesheetParameters")]
        StylesheetParameters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URLRewritePolicy")]
        URLRewritePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSABackProtocol")]
        WSABackProtocol,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSADefaultFaultTo")]
        WSADefaultFaultTo,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSADefaultReplyTo")]
        WSADefaultReplyTo,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSAForce")]
        WSAForce,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSAGenStyle")]
        WSAGenStyle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSAHTTPAsyncResponseCode")]
        WSAHTTPAsyncResponseCode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSAMode")]
        WSAMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSARequireAAA")]
        WSARequireAAA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSARewriteFaultTo")]
        WSARewriteFaultTo,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSARewriteReplyTo")]
        WSARewriteReplyTo,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSARewriteTo")]
        WSARewriteTo,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSAStrip")]
        WSAStrip,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSATimeout")]
        WSATimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMAAAPolicy")]
        WSRMAAAPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMBackAcksTo")]
        WSRMBackAcksTo,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMBackCreateSequence")]
        WSRMBackCreateSequence,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMBackForce")]
        WSRMBackForce,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMDestinationAcceptCreateSequence")]
        WSRMDestinationAcceptCreateSequence,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMDestinationAcceptOffers")]
        WSRMDestinationAcceptOffers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMDestinationInOrder")]
        WSRMDestinationInOrder,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMDestinationMaximumInOrderQueueLength")]
        WSRMDestinationMaximumInOrderQueueLength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMDestinationMaximumSequences")]
        WSRMDestinationMaximumSequences,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMEnabled")]
        WSRMEnabled,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMFrontAcksTo")]
        WSRMFrontAcksTo,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMFrontCreateSequence")]
        WSRMFrontCreateSequence,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMFrontForce")]
        WSRMFrontForce,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSequenceExpiration")]
        WSRMSequenceExpiration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSourceExponentialBackoff")]
        WSRMSourceExponentialBackoff,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSourceInactivityClose")]
        WSRMSourceInactivityClose,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSourceMakeOffer")]
        WSRMSourceMakeOffer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSourceMaximumQueueLength")]
        WSRMSourceMaximumQueueLength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSourceMaximumRetransmissions")]
        WSRMSourceMaximumRetransmissions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSourceMaximumSequences")]
        WSRMSourceMaximumSequences,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSourceRequestAckCount")]
        WSRMSourceRequestAckCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMSourceRetransmissionInterval")]
        WSRMSourceRetransmissionInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRMUsesSequenceSSL")]
        WSRMUsesSequenceSSL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigWSGateway : ConfigGatewayBase {
        
        private object[] items1Field;
        
        private Items1ChoiceType10[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AAAPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AutoCreateSources", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BaseWSDL", typeof(dmWSBaseWSDL), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DecryptKey", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EndpointRewritePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalEndpointRewrite", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OperationConformancePolicy", typeof(dmWSOperationConformancePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OperationPolicySubjectOptOut", typeof(dmWSOperationPolicySubjectOptOut), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OperationPriority", typeof(dmWSOperationSchedulerPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PolicyParameter", typeof(dmWSPolicyParameters), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReliableMessaging", typeof(dmWSOperationReliableMessaging), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteEndpointRewrite", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteFetchRetry", typeof(dmNetworkRetry), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SOAPActionPolicy", typeof(dmSOAPActionMatchPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmWSGatewayType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UDDISubscriptions", typeof(dmUDDIWSDLSource), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserToggles", typeof(dmWSUserToggles), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLCachePolicy", typeof(dmWSDLCachePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSRRSubscriptions", typeof(dmWSRRWSDLSource), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType10[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType10 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AAAPolicy")]
        AAAPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AutoCreateSources")]
        AutoCreateSources,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BaseWSDL")]
        BaseWSDL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DecryptKey")]
        DecryptKey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EndpointRewritePolicy")]
        EndpointRewritePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalEndpointRewrite")]
        LocalEndpointRewrite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OperationConformancePolicy")]
        OperationConformancePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OperationPolicySubjectOptOut")]
        OperationPolicySubjectOptOut,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OperationPriority")]
        OperationPriority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PolicyParameter")]
        PolicyParameter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReliableMessaging")]
        ReliableMessaging,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteEndpointRewrite")]
        RemoteEndpointRewrite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteFetchRetry")]
        RemoteFetchRetry,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SOAPActionPolicy")]
        SOAPActionPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylePolicy")]
        StylePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Type")]
        Type,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UDDISubscriptions")]
        UDDISubscriptions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserToggles")]
        UserToggles,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLCachePolicy")]
        WSDLCachePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRRSubscriptions")]
        WSRRSubscriptions,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigMultiProtocolGateway : ConfigGatewayBase {
        
        private object[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StylePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmGatewayType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigLoadBalancerGroup : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType48[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Algorithm", typeof(dmLoadBalanceAlgorithm), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Damp", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LBGroupChecks", typeof(dmLBGroupCheck), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LBGroupMembers", typeof(dmLBGroupMember), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MasqueradeMember", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NeverReturnSickMember", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TryEveryServerBeforeFailing", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType48[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType48 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Algorithm")]
        Algorithm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Damp")]
        Damp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LBGroupChecks")]
        LBGroupChecks,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LBGroupMembers")]
        LBGroupMembers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MasqueradeMember")]
        MasqueradeMember,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NeverReturnSickMember")]
        NeverReturnSickMember,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TryEveryServerBeforeFailing")]
        TryEveryServerBeforeFailing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigIncludeConfig : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType47[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("InterfaceDetection", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OnStartup", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType47[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType47 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":InterfaceDetection")]
        InterfaceDetection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OnStartup")]
        OnStartup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URL")]
        URL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigImportPackage : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType46[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DestinationDomain", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ImportFormat", typeof(dmImportFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OnStartup", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OverwriteFiles", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OverwriteObjects", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType46[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType46 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DestinationDomain")]
        DestinationDomain,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ImportFormat")]
        ImportFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OnStartup")]
        OnStartup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OverwriteFiles")]
        OverwriteFiles,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OverwriteObjects")]
        OverwriteObjects,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URL")]
        URL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigAccessControlList : ConfigConfigBase {
        
        private dmACE[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AccessControlEntry", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmACE[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDynamicSchema))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSchemaExceptionMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDynamicStylesheet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDocumentCryptoMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigXPathRoutingMap))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigDynamicXMLContentMap : ConfigConfigBase {
        
        private string[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSchemaExceptionMap))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigDynamicSchema : ConfigDynamicXMLContentMap {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigSchemaExceptionMap : ConfigDynamicSchema {
        
        private object[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OriginalSchemaURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("SchemaExceptionRules", typeof(dmSchemaExceptionRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDocumentCryptoMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigXPathRoutingMap))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigDynamicStylesheet : ConfigDynamicXMLContentMap {
        
        private dmNamespaceMapping[] items1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NameSpaceMappings", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmNamespaceMapping[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigDocumentCryptoMap : ConfigDynamicStylesheet {
        
        private object[] items2Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Operation", typeof(dmCryptoOperationType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XPath", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items2 {
            get {
                return this.items2Field;
            }
            set {
                this.items2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigXPathRoutingMap : ConfigDynamicStylesheet {
        
        private dmXPathRoutingRule[] items2Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("XPathRoutingRules", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmXPathRoutingRule[] Items2 {
            get {
                return this.items2Field;
            }
            set {
                this.items2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigHTTPInputConversionMap : ConfigConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DefaultInputEncoding", typeof(dmHTTPInputEncoding), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InputEncoding", typeof(dmInputEncoding), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigWebServiceMonitor : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType45[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EndpointName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EndpointURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("FrontendURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Operations", typeof(dmWSSLMOps), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Transport", typeof(dmWSDLTransport), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType45[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType45 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EndpointName")]
        EndpointName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EndpointURL")]
        EndpointURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontendURL")]
        FrontendURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Operations")]
        Operations,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Transport")]
        Transport,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLURL")]
        WSDLURL,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigFilterAction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMessageMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDurationMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCountMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMessageType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMessageMatching))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigMessageFlowControl : ConfigConfigBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigFilterAction : ConfigMessageFlowControl {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BlockInterval", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogLevel", typeof(dmLogLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmFilterActionType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDurationMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCountMonitor))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigMessageMonitor : ConfigMessageFlowControl {
        
        private object[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MessageType", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigDurationMonitor : ConfigMessageMonitor {
        
        private object[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filter", typeof(dmDurationMonitorFilter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Measure", typeof(dmDurationMonitorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigCountMonitor : ConfigMessageMonitor {
        
        private object[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filter", typeof(dmCountMonitorFilter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Header", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxSources", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Measure", typeof(dmCountMonitorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Source", typeof(dmCountMonitorSource), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigMessageType : ConfigMessageFlowControl {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Matching", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigMessageMatching : ConfigMessageFlowControl {
        
        private object[] itemsField;
        
        private ItemsChoiceType44[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HTTPHeader", typeof(dmHTTPHeader), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPHeaderExclude", typeof(dmHTTPHeader), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPMethod", typeof(dmHTTPMethod), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IPAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IPExclude", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType44[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType44 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPHeader")]
        HTTPHeader,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPHeaderExclude")]
        HTTPHeaderExclude,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPMethod")]
        HTTPMethod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IPAddress")]
        IPAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IPExclude")]
        IPExclude,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestURL")]
        RequestURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigLogTarget))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigEventlog : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType43[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ArchiveMode", typeof(dmLogFileArchiveMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Cert", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EmailAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EncryptAlgorithm", typeof(dmCryptoEncryptAlgorithm), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EncryptMode", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FeedbackDetection", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Format", typeof(dmLogFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IdentCredential", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IdenticalEventPeriod", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IdenticalEventSuppression", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalFile", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalIdentifier", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogEventCode", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogEventFilter", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogObjects", typeof(dmLogObject), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NFSFile", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NFSMount", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RateLimit", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteDirectory", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteLogin", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemotePassword", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemotePort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rotate", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SMTPDomain", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxyProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SenderAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SignAlgorithm", typeof(dmCryptoSignAlgorithm), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SigningMode", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Size", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SoapVersion", typeof(dmSoapVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SyslogFacility", typeof(dmSyslogFacility), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TimestampFormat", typeof(dmLogTimestampFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmLogType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UploadMethod", typeof(dmLogFileUploadMethod), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UseANSIColor", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType43[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType43 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ArchiveMode")]
        ArchiveMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Cert")]
        Cert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EmailAddress")]
        EmailAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EncryptAlgorithm")]
        EncryptAlgorithm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EncryptMode")]
        EncryptMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FeedbackDetection")]
        FeedbackDetection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Format")]
        Format,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IdentCredential")]
        IdentCredential,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IdenticalEventPeriod")]
        IdenticalEventPeriod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IdenticalEventSuppression")]
        IdenticalEventSuppression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalFile")]
        LocalFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalIdentifier")]
        LocalIdentifier,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogEventCode")]
        LogEventCode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogEventFilter")]
        LogEventFilter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogObjects")]
        LogObjects,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NFSFile")]
        NFSFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NFSMount")]
        NFSMount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RateLimit")]
        RateLimit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteAddress")]
        RemoteAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteDirectory")]
        RemoteDirectory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteLogin")]
        RemoteLogin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemotePassword")]
        RemotePassword,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemotePort")]
        RemotePort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Rotate")]
        Rotate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SMTPDomain")]
        SMTPDomain,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxyProfile")]
        SSLProxyProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SenderAddress")]
        SenderAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SignAlgorithm")]
        SignAlgorithm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SigningMode")]
        SigningMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Size")]
        Size,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SoapVersion")]
        SoapVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SyslogFacility")]
        SyslogFacility,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TimestampFormat")]
        TimestampFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Type")]
        Type,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URL")]
        URL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UploadMethod")]
        UploadMethod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UseANSIColor")]
        UseANSIColor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigLogTarget : ConfigEventlog {
        
        private object[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Backup", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogEvents", typeof(dmLogEvent), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigLogLabel : ConfigConfigBase {
        
        private string[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoKerberosKeytab))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoKerberosKDC))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSSLProxyProfile))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoProfile))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoFWCred))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoValCred))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoIdentCred))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoCertificate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoSSKey))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCryptoKey))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCRLFetch))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigCertMonitor))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigCrypto : ConfigConfigBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigCryptoKerberosKeytab : ConfigCrypto {
        
        private object[] itemsField;
        
        private ItemsChoiceType42[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filename", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UseReplayCache", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType42[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType42 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Filename")]
        Filename,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UseReplayCache")]
        UseReplayCache,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigCryptoKerberosKDC : ConfigCrypto {
        
        private object[] itemsField;
        
        private ItemsChoiceType41[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Realm", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Server", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ServerPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UDPTimeout", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UseTCP", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType41[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType41 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Realm")]
        Realm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Server")]
        Server,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ServerPort")]
        ServerPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UDPTimeout")]
        UDPTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UseTCP")]
        UseTCP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigSSLProxyProfile : ConfigCrypto {
        
        private object[] itemsField;
        
        private ItemsChoiceType40[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CacheSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ClientAuthOptional", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ClientCache", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Direction", typeof(dmSSLProxyDirection), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ForwardCryptoProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReverseCryptoProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ServerCaching", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SessionTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType40[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType40 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CacheSize")]
        CacheSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ClientAuthOptional")]
        ClientAuthOptional,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ClientCache")]
        ClientCache,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Direction")]
        Direction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ForwardCryptoProfile")]
        ForwardCryptoProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReverseCryptoProfile")]
        ReverseCryptoProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ServerCaching")]
        ServerCaching,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SessionTimeout")]
        SessionTimeout,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigCryptoProfile : ConfigCrypto {
        
        private object[] itemsField;
        
        private ItemsChoiceType39[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Ciphers", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ClientCAList", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IdentCredential", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLOptions", typeof(dmSSLOptionType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ValCredential", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType39[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType39 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Ciphers")]
        Ciphers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ClientCAList")]
        ClientCAList,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IdentCredential")]
        IdentCredential,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLOptions")]
        SSLOptions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ValCredential")]
        ValCredential,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigCryptoFWCred : ConfigCrypto {
        
        private dmReference[] itemsField;
        
        private ItemsChoiceType38[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Certificate", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PrivateKey", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SharedSecretKey", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public dmReference[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType38[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType38 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Certificate")]
        Certificate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PrivateKey")]
        PrivateKey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SharedSecretKey")]
        SharedSecretKey,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigCryptoValCred : ConfigCrypto {
        
        private object[] itemsField;
        
        private ItemsChoiceType37[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CRLDPHandling", typeof(dmCRLDPHandling), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CertValidationMode", typeof(dmCryptoValCredCertValidationMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Certificate", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ExplicitPolicy", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InitialPolicySet", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequireCRL", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UseCRL", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType37[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType37 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CRLDPHandling")]
        CRLDPHandling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CertValidationMode")]
        CertValidationMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Certificate")]
        Certificate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ExplicitPolicy")]
        ExplicitPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":InitialPolicySet")]
        InitialPolicySet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequireCRL")]
        RequireCRL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UseCRL")]
        UseCRL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigCryptoIdentCred : ConfigCrypto {
        
        private dmReference[] itemsField;
        
        private ItemsChoiceType36[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CA", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Certificate", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Key", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public dmReference[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType36[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType36 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CA")]
        CA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Certificate")]
        Certificate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Key")]
        Key,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigCryptoCertificate : ConfigCrypto {
        
        private object[] itemsField;
        
        private ItemsChoiceType35[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filename", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("IgnoreExpiration", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Password", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PasswordAlias", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType35[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType35 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Filename")]
        Filename,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IgnoreExpiration")]
        IgnoreExpiration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Password")]
        Password,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PasswordAlias")]
        PasswordAlias,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigCryptoSSKey : ConfigCrypto {
        
        private string[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filename", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigCryptoKey : ConfigCrypto {
        
        private object[] itemsField;
        
        private ItemsChoiceType34[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filename", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("Password", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PasswordAlias", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType34[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType34 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Filename")]
        Filename,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Password")]
        Password,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PasswordAlias")]
        PasswordAlias,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigCRLFetch : ConfigCrypto {
        
        private dmCRLFetchConfig[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CRLFetchConfig", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmCRLFetchConfig[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigCertMonitor : ConfigCrypto {
        
        private object[] itemsField;
        
        private ItemsChoiceType33[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DisableExpiredCerts", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogLevel", typeof(dmLogLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PollingInterval", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReminderTime", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType33[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType33 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DisableExpiredCerts")]
        DisableExpiredCerts,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogLevel")]
        LogLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PollingInterval")]
        PollingInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReminderTime")]
        ReminderTime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class Configxmltrace : ConfigConfigBase {
        
        private dmXMLTracingMode[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Mode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmXMLTracingMode[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigXMLManager : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType25[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CacheSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CompileOptionsPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DocCacheMaxDocs", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DocCachePolicy", typeof(dmDocCachePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DocCacheSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ExtensionFunctions", typeof(dmExtensionFunction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsAttributeCount", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsBytesScanned", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsElementDepth", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsExternalReferences", typeof(dmExternalRefHandling), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsForbidExternalReferences", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsMaxNodeSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SHA1Caching", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ScheduledRule", typeof(dmScheduledRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SchemaValidation", typeof(dmSchemaValidation), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SearchResults", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StaticDocumentCalls", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRefreshPolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserAgent", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("VirtualServers", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType25[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType25 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CacheSize")]
        CacheSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CompileOptionsPolicy")]
        CompileOptionsPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DocCacheMaxDocs")]
        DocCacheMaxDocs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DocCachePolicy")]
        DocCachePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DocCacheSize")]
        DocCacheSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ExtensionFunctions")]
        ExtensionFunctions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsAttributeCount")]
        ParserLimitsAttributeCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsBytesScanned")]
        ParserLimitsBytesScanned,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsElementDepth")]
        ParserLimitsElementDepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsExternalReferences")]
        ParserLimitsExternalReferences,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsForbidExternalReferences")]
        ParserLimitsForbidExternalReferences,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsMaxNodeSize")]
        ParserLimitsMaxNodeSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SHA1Caching")]
        SHA1Caching,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ScheduledRule")]
        ScheduledRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SchemaValidation")]
        SchemaValidation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SearchResults")]
        SearchResults,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StaticDocumentCalls")]
        StaticDocumentCalls,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URLRefreshPolicy")]
        URLRefreshPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserAgent")]
        UserAgent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":VirtualServers")]
        VirtualServers,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWebSphereJMSServer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigTibcoEMSServer))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigJMSServer : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType24[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AutoRetry", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultMessageType", typeof(dmJMSMessageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EnableLogging", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaximumMessageSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MemoryThreshold", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Password", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RetryInterval", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SessionsPerConnection", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TotalConnectionLimit", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Transactional", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType24[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType24 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AutoRetry")]
        AutoRetry,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultMessageType")]
        DefaultMessageType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EnableLogging")]
        EnableLogging,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaximumMessageSize")]
        MaximumMessageSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MemoryThreshold")]
        MemoryThreshold,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Password")]
        Password,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RetryInterval")]
        RetryInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProfile")]
        SSLProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SessionsPerConnection")]
        SessionsPerConnection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TotalConnectionLimit")]
        TotalConnectionLimit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Transactional")]
        Transactional,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserName")]
        UserName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigWebSphereJMSServer : ConfigJMSServer {
        
        private object[] items1Field;
        
        private Items1ChoiceType9[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Endpoint", typeof(dmWebSphereJMSEndpoint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FIPS", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MessagingBus", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLCipher", typeof(dmWebSphereJMSSSLCipher), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TargetTransportChain", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType9[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType9 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Endpoint")]
        Endpoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FIPS")]
        FIPS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MessagingBus")]
        MessagingBus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLCipher")]
        SSLCipher,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TargetTransportChain")]
        TargetTransportChain,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigTibcoEMSServer : ConfigJMSServer {
        
        private string[] items1Field;
        
        private Items1ChoiceType8[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ConnectionClientID", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HostName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public string[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType8[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType8 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ConnectionClientID")]
        ConnectionClientID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HostName")]
        HostName,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMQGW))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMQQMBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMQQMGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMQQM))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMQproxy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMQhost))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigMQConfiguration : ConfigConfigBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigMQGW : ConfigMQConfiguration {
        
        private object[] itemsField;
        
        private ItemsChoiceType23[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Client", typeof(dmMQclient), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Direction", typeof(dmNodeDirection), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QueueManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Server", typeof(dmMQserver), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType23[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType23 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Client")]
        Client,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Direction")]
        Direction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QueueManager")]
        QueueManager,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Server")]
        Server,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URL")]
        URL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMQQMGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMQQM))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigMQQMBase : ConfigMQConfiguration {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigMQQMGroup : ConfigMQQMBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType22[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BackupQueueManagers", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PrimaryQueueManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType22[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType22 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackupQueueManagers")]
        BackupQueueManagers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PrimaryQueueManager")]
        PrimaryQueueManager,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigMQQM : ConfigMQQMBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType21[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AlternateUser", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AutoRetry", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AutomaticBackout", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackoutQueueName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackoutThreshold", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CCSID", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CacheTimeout", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ChannelName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ConvertInput", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Heartbeat", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HostName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InitialConnections", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaximumMessageSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QMname", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReportingInterval", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RetryInterval", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxyProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLcipher", typeof(dmMQSSLCiphers), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLkey", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("TotalConnectionLimit", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UnitsOfWork", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType21[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType21 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AlternateUser")]
        AlternateUser,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AutoRetry")]
        AutoRetry,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AutomaticBackout")]
        AutomaticBackout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackoutQueueName")]
        BackoutQueueName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackoutThreshold")]
        BackoutThreshold,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CCSID")]
        CCSID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CacheTimeout")]
        CacheTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ChannelName")]
        ChannelName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ConvertInput")]
        ConvertInput,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Heartbeat")]
        Heartbeat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HostName")]
        HostName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":InitialConnections")]
        InitialConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaximumMessageSize")]
        MaximumMessageSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QMname")]
        QMname,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReportingInterval")]
        ReportingInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RetryInterval")]
        RetryInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxyProfile")]
        SSLProxyProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLcipher")]
        SSLcipher,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLkey")]
        SSLkey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TotalConnectionLimit")]
        TotalConnectionLimit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UnitsOfWork")]
        UnitsOfWork,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserName")]
        UserName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigMQproxy : ConfigMQConfiguration {
        
        private object[] itemsField;
        
        private ItemsChoiceType20[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BackAttachmentFormat", typeof(dmAttachmentFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackQueueManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Concurrent", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ContentType", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CountMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Credentials", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugHistory", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugMode", typeof(dmDebugMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugTrigger", typeof(dmMQMSDebugTriggerType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultParameterNamespace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DurationMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorStylePolicyRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FirewallExtensions", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontAttachmentFormat", typeof(dmAttachmentFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontQueueManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestAttachments", typeof(dmAttachmentMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestGetQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestPutQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestStylePolicyRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestType", typeof(dmXMLReqRespType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseAttachments", typeof(dmAttachmentMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseGetQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponsePutQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseStylePolicyRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseType", typeof(dmXMLReqRespType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RootPartNotFirstAction", typeof(dmRootPartNotFirstAction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SOAPSchemaURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetParameters", typeof(dmStylesheetParameter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WaitTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType20[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType20 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackAttachmentFormat")]
        BackAttachmentFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackQueueManager")]
        BackQueueManager,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Concurrent")]
        Concurrent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ContentType")]
        ContentType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CountMonitors")]
        CountMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Credentials")]
        Credentials,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugHistory")]
        DebugHistory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugMode")]
        DebugMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugTrigger")]
        DebugTrigger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultParameterNamespace")]
        DefaultParameterNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DurationMonitors")]
        DurationMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorStylePolicyRule")]
        ErrorStylePolicyRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FirewallExtensions")]
        FirewallExtensions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontAttachmentFormat")]
        FrontAttachmentFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontQueueManager")]
        FrontQueueManager,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestAttachments")]
        RequestAttachments,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestGetQueue")]
        RequestGetQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestPutQueue")]
        RequestPutQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestStylePolicyRule")]
        RequestStylePolicyRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestType")]
        RequestType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseAttachments")]
        ResponseAttachments,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseGetQueue")]
        ResponseGetQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponsePutQueue")]
        ResponsePutQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseStylePolicyRule")]
        ResponseStylePolicyRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseType")]
        ResponseType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RootPartNotFirstAction")]
        RootPartNotFirstAction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SOAPSchemaURL")]
        SOAPSchemaURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylesheetParameters")]
        StylesheetParameters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WaitTimeout")]
        WaitTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigMQhost : ConfigMQConfiguration {
        
        private object[] itemsField;
        
        private ItemsChoiceType19[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AttachmentsMode", typeof(dmAttachmentMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BackAttachmentFormat", typeof(dmAttachmentFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CodePage", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ContentType", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CountMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Credentials", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugHistory", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugMode", typeof(dmDebugMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugTrigger", typeof(dmMQMSDebugTriggerType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultParameterNamespace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DurationMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FirewallExtensions", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontAttachmentFormat", typeof(dmAttachmentFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GetQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MessageType", typeof(dmXMLReqRespType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PutQueue", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QueueManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SOAPSchemaURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicyRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetParameters", typeof(dmStylesheetParameter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType19[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType19 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AttachmentsMode")]
        AttachmentsMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackAttachmentFormat")]
        BackAttachmentFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CodePage")]
        CodePage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ContentType")]
        ContentType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CountMonitors")]
        CountMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Credentials")]
        Credentials,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugHistory")]
        DebugHistory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugMode")]
        DebugMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugTrigger")]
        DebugTrigger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultParameterNamespace")]
        DefaultParameterNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DurationMonitors")]
        DurationMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FirewallExtensions")]
        FirewallExtensions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontAttachmentFormat")]
        FrontAttachmentFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GetQueue")]
        GetQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MessageType")]
        MessageType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PutQueue")]
        PutQueue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QueueManager")]
        QueueManager,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SOAPSchemaURL")]
        SOAPSchemaURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylePolicyRule")]
        StylePolicyRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylesheetParameters")]
        StylesheetParameters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigMatching : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType18[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CombineWithOr", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MatchRules", typeof(dmMatchRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MatchWithPCRE", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType18[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType18 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CombineWithOr")]
        CombineWithOr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MatchRules")]
        MatchRules,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MatchWithPCRE")]
        MatchWithPCRE,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigWSEndpointRewritePolicy : ConfigConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSEndpointLocalRewriteRule", typeof(dmWSEndpointLocalRewriteRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSEndpointPublishRewriteRule", typeof(dmWSEndpointPublishRewriteRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSEndpointRemoteRewriteRule", typeof(dmWSEndpointRemoteRewriteRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSEndpointSubscriptionLocalRule", typeof(dmWSEndpointSubscriptionLocalRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSEndpointSubscriptionPublishRule", typeof(dmWSEndpointSubscriptionPublishRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSEndpointSubscriptionRemoteRule", typeof(dmWSEndpointSubscriptionRemoteRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigURLRewritePolicy : ConfigConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Direction", typeof(dmURLRewriteDirection), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRewriteRule", typeof(dmURLRewriteRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigCompileOptionsPolicy : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType17[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AllowSoapEncArray", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Debug", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DisallowXG4", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MinimumEscaping", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PreferXG4", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Profile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StackSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Stream", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Strict", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TryStream", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ValidateSoapEncArray", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLStrictSOAPVersion", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLValidateBody", typeof(dmWSDLValidationMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLValidateFaults", typeof(dmWSDLValidationMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLValidateHeaders", typeof(dmWSDLValidationMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLWrappedFaults", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSIValidation", typeof(dmWSIValidationMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WildcardsIgnoreXsiType", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XSLTVersion", typeof(dmXSLTVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType17[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType17 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowSoapEncArray")]
        AllowSoapEncArray,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Debug")]
        Debug,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DisallowXG4")]
        DisallowXG4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MinimumEscaping")]
        MinimumEscaping,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PreferXG4")]
        PreferXG4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Profile")]
        Profile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StackSize")]
        StackSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Stream")]
        Stream,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Strict")]
        Strict,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TryStream")]
        TryStream,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ValidateSoapEncArray")]
        ValidateSoapEncArray,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLStrictSOAPVersion")]
        WSDLStrictSOAPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLValidateBody")]
        WSDLValidateBody,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLValidateFaults")]
        WSDLValidateFaults,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLValidateHeaders")]
        WSDLValidateHeaders,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLWrappedFaults")]
        WSDLWrappedFaults,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSIValidation")]
        WSIValidation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WildcardsIgnoreXsiType")]
        WildcardsIgnoreXsiType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XSLTVersion")]
        XSLTVersion,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigURLRefreshPolicy : ConfigConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("URLRefreshRule", typeof(dmURLRefreshRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigURLMap : ConfigConfigBase {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("URLMapRule", typeof(dmURLMapRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigWSStylePolicy : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType16[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DefStylesheetForSoap", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("DefStylesheetForXsl", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("PolicyMaps", typeof(dmWSMPolicyMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType16[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType16 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefStylesheetForSoap")]
        DefStylesheetForSoap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefStylesheetForXsl")]
        DefStylesheetForXsl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PolicyMaps")]
        PolicyMaps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigStylePolicy : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType15[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DefStylesheetForSoap", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("DefStylesheetForXsl", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("PolicyMaps", typeof(dmPolicyMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType15[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType15 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefStylesheetForSoap")]
        DefStylesheetForSoap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefStylesheetForXsl")]
        DefStylesheetForXsl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PolicyMaps")]
        PolicyMaps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWSStylePolicyRule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigStylePolicyRule))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigStylePolicyRuleBase : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType14[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Direction", typeof(dmStyleRuleDirection), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InputFormat", typeof(dmStyleRuleFilterFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NonXMLProcessing", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OutputFormat", typeof(dmStyleRuleFilterFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Unprocessed", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType14[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType14 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Direction")]
        Direction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":InputFormat")]
        InputFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NonXMLProcessing")]
        NonXMLProcessing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OutputFormat")]
        OutputFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Unprocessed")]
        Unprocessed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigWSStylePolicyRule : ConfigStylePolicyRuleBase {
        
        private dmReference[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Actions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigStylePolicyRule : ConfigStylePolicyRuleBase {
        
        private dmReference[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Actions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmReference[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigStylePolicyAction : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType13[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AAA", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AsyncAction", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Asynchronous", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AttachmentURI", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CheckpointEvent", typeof(dmCheckpointEvent), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Condition", typeof(dmCondition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Destination", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("DynamicSchema", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DynamicStylesheet", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorInput", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorMode", typeof(dmStyleErrorMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ErrorOutput", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Input", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InputConversion", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IteratorCount", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IteratorExpression", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IteratorType", typeof(dmIteratorType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogLevel", typeof(dmLogLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogType", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoopAction", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MultipleOutputs", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NamedInOutLocationType", typeof(dmNamedInOutLocationType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NamedInputs", typeof(dmNamedInOut), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NamedOutputs", typeof(dmNamedInOut), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Output", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OutputType", typeof(dmActionOutputType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Policy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResultsMode", typeof(dmResultsMultiWayMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RetryCount", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RetryInterval", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Rule", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMPolicy", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SOAPValidation", typeof(dmSOAPValidation), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SQLDataSource", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SQLSourceType", typeof(dmSQLSourceType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SQLText", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLCred", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SchemaURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetParameters", typeof(dmStylesheetParameter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Timeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Transactional", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Transform", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TxMap", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TxMode", typeof(dmTxMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TxTopLevelMap", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmStyleActionType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Value", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Variable", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("WSDLAttachmentPart", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLMessageDirectionOrName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLOperationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLPortQName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WsdlURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("XPath", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType13[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType13 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AAA")]
        AAA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AsyncAction")]
        AsyncAction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Asynchronous")]
        Asynchronous,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AttachmentURI")]
        AttachmentURI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CheckpointEvent")]
        CheckpointEvent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Condition")]
        Condition,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Destination")]
        Destination,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DynamicSchema")]
        DynamicSchema,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DynamicStylesheet")]
        DynamicStylesheet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorInput")]
        ErrorInput,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorMode")]
        ErrorMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorOutput")]
        ErrorOutput,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Input")]
        Input,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":InputConversion")]
        InputConversion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IteratorCount")]
        IteratorCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IteratorExpression")]
        IteratorExpression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IteratorType")]
        IteratorType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogLevel")]
        LogLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogType")]
        LogType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LoopAction")]
        LoopAction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MultipleOutputs")]
        MultipleOutputs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NamedInOutLocationType")]
        NamedInOutLocationType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NamedInputs")]
        NamedInputs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NamedOutputs")]
        NamedOutputs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Output")]
        Output,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OutputType")]
        OutputType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Policy")]
        Policy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResultsMode")]
        ResultsMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RetryCount")]
        RetryCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RetryInterval")]
        RetryInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Rule")]
        Rule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SLMPolicy")]
        SLMPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SOAPValidation")]
        SOAPValidation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SQLDataSource")]
        SQLDataSource,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SQLSourceType")]
        SQLSourceType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SQLText")]
        SQLText,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLCred")]
        SSLCred,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SchemaURL")]
        SchemaURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylesheetParameters")]
        StylesheetParameters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Timeout")]
        Timeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Transactional")]
        Transactional,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Transform")]
        Transform,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TxMap")]
        TxMap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TxMode")]
        TxMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TxTopLevelMap")]
        TxTopLevelMap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Type")]
        Type,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Value")]
        Value,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Variable")]
        Variable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLAttachmentPart")]
        WSDLAttachmentPart,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLMessageDirectionOrName")]
        WSDLMessageDirectionOrName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLOperationName")]
        WSDLOperationName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLPortQName")]
        WSDLPortQName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WsdlURL")]
        WsdlURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XPath")]
        XPath,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDeviceManagementService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMgmtInterface))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWebGUI))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSSHService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigTelnetService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigXSLCoprocService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigHTTPProxyService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigXMLFirewallService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigXSLProxyService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSSLProxyService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigTCPProxyService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigHTTPService))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigService : ConfigConfigBase {
        
        private string[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigMgmtInterface))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigWebGUI))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSSHService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigTelnetService))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigDeviceManagementService : ConfigService {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigMgmtInterface : ConfigDeviceManagementService {
        
        private object[] items1Field;
        
        private Items1ChoiceType7[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mode", typeof(dmXMLMgmtModes), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SLMPeering", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserAgent", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSManagement", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType7[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType7 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Mode")]
        Mode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SLMPeering")]
        SLMPeering,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserAgent")]
        UserAgent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSManagement")]
        WSManagement,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigWebGUI : ConfigDeviceManagementService {
        
        private object[] items1Field;
        
        private Items1ChoiceType6[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IdleTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SaveConfigOverwrites", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserAgent", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType6[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType6 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IdleTimeout")]
        IdleTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SaveConfigOverwrites")]
        SaveConfigOverwrites,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserAgent")]
        UserAgent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigSSHService : ConfigDeviceManagementService {
        
        private object[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigTelnetService : ConfigDeviceManagementService {
        
        private object[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigXSLCoprocService : ConfigService {
        
        private object[] items1Field;
        
        private Items1ChoiceType5[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CacheRelativeURL", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ConnectionTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CryptoExtensions", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugHistory", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugMode", typeof(dmDebugMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugTrigger", typeof(dmMSDebugTriggerType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultParamNamespace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IntermediateResultTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Priority", typeof(dmSchedulerPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicyRule", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRewritePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UseClientURIResolver", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType5[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType5 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CacheRelativeURL")]
        CacheRelativeURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ConnectionTimeout")]
        ConnectionTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CryptoExtensions")]
        CryptoExtensions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugHistory")]
        DebugHistory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugMode")]
        DebugMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugTrigger")]
        DebugTrigger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultParamNamespace")]
        DefaultParamNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IntermediateResultTimeout")]
        IntermediateResultTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Priority")]
        Priority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylePolicyRule")]
        StylePolicyRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URLRewritePolicy")]
        URLRewritePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UseClientURIResolver")]
        UseClientURIResolver,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigXMLFirewallService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigXSLProxyService))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigHTTPProxyService : ConfigService {
        
        private object[] items1Field;
        
        private Items1ChoiceType4[] items1ElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AlwaysShowErrors", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugHistory", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugMode", typeof(dmDebugMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DebugTrigger", typeof(dmMSDebugTriggerType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DefaultParamNamespace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DisallowEmptyResponse", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DisallowGet", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoChunkedUpload", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoHostRewrite", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPClientIPLabel", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPCompression", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPIncludeResponseTypeEncoding", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPPersistTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPPersistentConnections", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPProxyHost", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPProxyPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPTimeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HTTPVersion", typeof(dmHTTPClientServerVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HeaderInjection", typeof(dmHeaderInjection), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("HeaderSuppression", typeof(dmHeaderSuppression), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Priority", typeof(dmSchedulerPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QueryParamNamespace", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemotePort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylesheetParameters", typeof(dmStylesheetParameter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SuppressHTTPWarnings", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType4[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType4 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AlwaysShowErrors")]
        AlwaysShowErrors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugHistory")]
        DebugHistory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugMode")]
        DebugMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DebugTrigger")]
        DebugTrigger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultParamNamespace")]
        DefaultParamNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DisallowEmptyResponse")]
        DisallowEmptyResponse,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DisallowGet")]
        DisallowGet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoChunkedUpload")]
        DoChunkedUpload,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoHostRewrite")]
        DoHostRewrite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPClientIPLabel")]
        HTTPClientIPLabel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPCompression")]
        HTTPCompression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPIncludeResponseTypeEncoding")]
        HTTPIncludeResponseTypeEncoding,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPPersistTimeout")]
        HTTPPersistTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPPersistentConnections")]
        HTTPPersistentConnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPProxyHost")]
        HTTPProxyHost,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPProxyPort")]
        HTTPProxyPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPTimeout")]
        HTTPTimeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPVersion")]
        HTTPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HeaderInjection")]
        HeaderInjection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HeaderSuppression")]
        HeaderSuppression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Priority")]
        Priority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QueryParamNamespace")]
        QueryParamNamespace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteAddress")]
        RemoteAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemotePort")]
        RemotePort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylesheetParameters")]
        StylesheetParameters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SuppressHTTPWarnings")]
        SuppressHTTPWarnings,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigXMLFirewallService : ConfigHTTPProxyService {
        
        private object[] items2Field;
        
        private Items2ChoiceType1[] items2ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BackAttachmentFormat", typeof(dmAttachmentFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CountMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DurationMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FWCred", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FirewallParserLimits", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FrontAttachmentFormat", typeof(dmAttachmentFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MIMEHeaders", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxMessageSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MonitorProcessingPolicy", typeof(dmMonitorProcessingPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsAttachmentByteCount", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsAttributeCount", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsBytesScanned", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsElementDepth", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsExternalReferences", typeof(dmExternalRefHandling), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsForbidExternalReferences", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ParserLimitsMaxNodeSize", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestAttachments", typeof(dmAttachmentMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequestType", typeof(dmXMLReqRespType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseAttachments", typeof(dmAttachmentMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResponseType", typeof(dmXMLReqRespType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RootPartNotFirstAction", typeof(dmRootPartNotFirstAction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SOAPSchemaURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ServiceMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmFirewallType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRewritePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("WSDLFileLocation", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("WSDLResponsePolicy", typeof(dmWSDLResponsePolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items2ElementName")]
        public object[] Items2 {
            get {
                return this.items2Field;
            }
            set {
                this.items2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items2ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items2ChoiceType1[] Items2ElementName {
            get {
                return this.items2ElementNameField;
            }
            set {
                this.items2ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items2ChoiceType1 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BackAttachmentFormat")]
        BackAttachmentFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CountMonitors")]
        CountMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DurationMonitors")]
        DurationMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FWCred")]
        FWCred,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FirewallParserLimits")]
        FirewallParserLimits,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FrontAttachmentFormat")]
        FrontAttachmentFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MIMEHeaders")]
        MIMEHeaders,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxMessageSize")]
        MaxMessageSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MonitorProcessingPolicy")]
        MonitorProcessingPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsAttachmentByteCount")]
        ParserLimitsAttachmentByteCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsAttributeCount")]
        ParserLimitsAttributeCount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsBytesScanned")]
        ParserLimitsBytesScanned,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsElementDepth")]
        ParserLimitsElementDepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsExternalReferences")]
        ParserLimitsExternalReferences,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsForbidExternalReferences")]
        ParserLimitsForbidExternalReferences,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ParserLimitsMaxNodeSize")]
        ParserLimitsMaxNodeSize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestAttachments")]
        RequestAttachments,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequestType")]
        RequestType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseAttachments")]
        ResponseAttachments,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResponseType")]
        ResponseType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RootPartNotFirstAction")]
        RootPartNotFirstAction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SOAPSchemaURL")]
        SOAPSchemaURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ServiceMonitors")]
        ServiceMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylePolicy")]
        StylePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Type")]
        Type,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URLRewritePolicy")]
        URLRewritePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLFileLocation")]
        WSDLFileLocation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSDLResponsePolicy")]
        WSDLResponsePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigXSLProxyService : ConfigHTTPProxyService {
        
        private object[] items2Field;
        
        private Items2ChoiceType[] items2ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CountMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DurationMonitors", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MonitorProcessingPolicy", typeof(dmMonitorProcessingPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StylePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Type", typeof(dmXSLProxyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("URLRewritePolicy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("XMLManager", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items2ElementName")]
        public object[] Items2 {
            get {
                return this.items2Field;
            }
            set {
                this.items2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items2ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items2ChoiceType[] Items2ElementName {
            get {
                return this.items2ElementNameField;
            }
            set {
                this.items2ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items2ChoiceType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CountMonitors")]
        CountMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DurationMonitors")]
        DurationMonitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MonitorProcessingPolicy")]
        MonitorProcessingPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylePolicy")]
        StylePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Type")]
        Type,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URLRewritePolicy")]
        URLRewritePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigSSLProxyService : ConfigService {
        
        private object[] items1Field;
        
        private Items1ChoiceType3[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Priority", typeof(dmSchedulerPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemotePort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType3[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType3 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Priority")]
        Priority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteAddress")]
        RemoteAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemotePort")]
        RemotePort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxy")]
        SSLProxy,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigTCPProxyService : ConfigService {
        
        private object[] items1Field;
        
        private Items1ChoiceType2[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Priority", typeof(dmSchedulerPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemotePort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType2[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType2 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Priority")]
        Priority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteAddress")]
        RemoteAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemotePort")]
        RemotePort,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigHTTPService : ConfigService {
        
        private object[] items1Field;
        
        private Items1ChoiceType1[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACL", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BaseDir", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("Identifier", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mode", typeof(dmHTTPServiceMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Priority", typeof(dmSchedulerPriority), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StartPage", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType1[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType1 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ACL")]
        ACL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BaseDir")]
        BaseDir,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Identifier")]
        Identifier,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Mode")]
        Mode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Priority")]
        Priority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StartPage")]
        StartPage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigConformancePolicy : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType12[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AssertBP10Conformance", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FixupStylesheets", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("IgnoredRequirements", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogTarget", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("Profiles", typeof(dmConformanceProfiles), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RejectIncludeSummary", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RejectLevel", typeof(dmConformanceRejectLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReportLevel", typeof(dmConformanceReportLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ResultIsConformanceReport", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType12[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType12 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AssertBP10Conformance")]
        AssertBP10Conformance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FixupStylesheets")]
        FixupStylesheets,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IgnoredRequirements")]
        IgnoredRequirements,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogTarget")]
        LogTarget,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Profiles")]
        Profiles,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RejectIncludeSummary")]
        RejectIncludeSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RejectLevel")]
        RejectLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReportLevel")]
        ReportLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ResultIsConformanceReport")]
        ResultIsConformanceReport,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigVLANInterface))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigEthernetInterface))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigIPInterface : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType11[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DefaultGateway", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("IPAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SecondaryAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StaticRoutes", typeof(dmStaticRoute), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UseARP", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UseDHCP", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType11[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType11 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultGateway")]
        DefaultGateway,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IPAddress")]
        IPAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SecondaryAddress")]
        SecondaryAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StaticRoutes")]
        StaticRoutes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UseARP")]
        UseARP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UseDHCP")]
        UseDHCP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigVLANInterface : ConfigIPInterface {
        
        private object[] items1Field;
        
        private Items1ChoiceType[] items1ElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DefaultOutboundPriority", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Identifier", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Interface", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StandbyControls", typeof(dmVLANStandbyControl), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum Items1ChoiceType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DefaultOutboundPriority")]
        DefaultOutboundPriority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Identifier")]
        Identifier,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Interface")]
        Interface,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StandbyControls")]
        StandbyControls,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigEthernetInterface : ConfigIPInterface {
        
        private object[] items1Field;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MACAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MTU", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Mode", typeof(dmEthernetMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StandbyControls", typeof(dmStandbyControl), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigHTTPUserAgent : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType10[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AddHeaderPolicies", typeof(dmAddHeaderPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowCompressionPolicies", typeof(dmAllowCompressionPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("BasicAuthPolicies", typeof(dmBasicAuthPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FTPPolicies", typeof(dmFTPPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Identifier", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxRedirects", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProxyPolicies", typeof(dmProxyPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PubkeyAuthPolicies", typeof(dmPubkeyAuthPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Restrict10Policies", typeof(dmRestrict10Policy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLPolicies", typeof(dmSSLPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SoapActionPolicies", typeof(dmSoapActionPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Timeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UploadChunkedPolicies", typeof(dmUploadChunkedPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType10[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType10 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AddHeaderPolicies")]
        AddHeaderPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowCompressionPolicies")]
        AllowCompressionPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":BasicAuthPolicies")]
        BasicAuthPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FTPPolicies")]
        FTPPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Identifier")]
        Identifier,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxRedirects")]
        MaxRedirects,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ProxyPolicies")]
        ProxyPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PubkeyAuthPolicies")]
        PubkeyAuthPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Restrict10Policies")]
        Restrict10Policies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLPolicies")]
        SSLPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SoapActionPolicies")]
        SoapActionPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Timeout")]
        Timeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UploadChunkedPolicies")]
        UploadChunkedPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigHostAlias))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigDNSNameService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigNTPService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigNetworkSettings))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigNetworkConfiguration : ConfigConfigBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigHostAlias : ConfigNetworkConfiguration {
        
        private string[] itemsField;
        
        private ItemsChoiceType9[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IPAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public string[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType9[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType9 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IPAddress")]
        IPAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigDNSNameService : ConfigNetworkConfiguration {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NameServers", typeof(dmNameServer), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SearchDomains", typeof(dmSearchDomain), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StaticHosts", typeof(dmStaticHost), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigNTPService : ConfigNetworkConfiguration {
        
        private object[] itemsField;
        
        private ItemsChoiceType8[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RefreshInterval", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RemoteServer", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType8[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType8 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RefreshInterval")]
        RefreshInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RemoteServer")]
        RemoteServer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigNetworkSettings : ConfigNetworkConfiguration {
        
        private object[] itemsField;
        
        private ItemsChoiceType7[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AllowAllCrosstalk", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AllowCrosstalkOnSubnet", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ArpInterval", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ArpRetries", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DestinationRouting", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ECNDisable", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ICMPDisable", typeof(dmICMPReplyType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TCPSYNRetries", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TCPSegmentationOffload", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType7[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType7 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowAllCrosstalk")]
        AllowAllCrosstalk,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AllowCrosstalkOnSubnet")]
        AllowCrosstalkOnSubnet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ArpInterval")]
        ArpInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ArpRetries")]
        ArpRetries,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DestinationRouting")]
        DestinationRouting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ECNDisable")]
        ECNDisable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ICMPDisable")]
        ICMPDisable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TCPSYNRetries")]
        TCPSYNRetries,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TCPSegmentationOffload")]
        TCPSegmentationOffload,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigShellAlias : ConfigConfigBase {
        
        private string[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("command", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigThrottler : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType6[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EnvironmentalLog", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LogLevel", typeof(dmLogLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("QnameWarnAt", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Statistics", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TempFSTerminateAt", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TempFSThrottleAt", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TerminateAt", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ThrottleAt", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Timeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType6[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType6 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EnvironmentalLog")]
        EnvironmentalLog,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogLevel")]
        LogLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":QnameWarnAt")]
        QnameWarnAt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Statistics")]
        Statistics,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TempFSTerminateAt")]
        TempFSTerminateAt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TempFSThrottleAt")]
        TempFSThrottleAt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TerminateAt")]
        TerminateAt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ThrottleAt")]
        ThrottleAt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Timeout")]
        Timeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigStatistics : ConfigConfigBase {
        
        private uint[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LoadInterval", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigUserGroup : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType5[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AccessPolicies", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CommandGroup", typeof(dmCommandGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType5[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType5 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AccessPolicies")]
        AccessPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CommandGroup")]
        CommandGroup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigUser : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType4[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AccessLevel", typeof(dmUserAccess), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GroupName", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Password", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SnmpCreds", typeof(dmSnmpCred), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType4[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType4 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AccessLevel")]
        AccessLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GroupName")]
        GroupName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Password")]
        Password,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SnmpCreds")]
        SnmpCreds,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigSNMPSettings : ConfigConfigBase {
        
        private object[] itemsField;
        
        private ItemsChoiceType3[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AccessLevel", typeof(dmSnmpAccessMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ConfigMib", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("Contexts", typeof(dmSnmpContext), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NotifMib", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("Policies", typeof(dmSnmpPolicy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SecurityLevel", typeof(dmSnmpSecurityLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("StatusMib", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("Targets", typeof(dmSnmpTarget), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TrapEventCode", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TrapPriority", typeof(dmLogLevel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Users", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType3[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType3 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AccessLevel")]
        AccessLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ConfigMib")]
        ConfigMib,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Contexts")]
        Contexts,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalAddress")]
        LocalAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalPort")]
        LocalPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NotifMib")]
        NotifMib,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Policies")]
        Policies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SecurityLevel")]
        SecurityLevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StatusMib")]
        StatusMib,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Targets")]
        Targets,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TrapEventCode")]
        TrapEventCode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TrapPriority")]
        TrapPriority,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Users")]
        Users,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigTimeSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigErrorReportSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigSystemSettings))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigDeviceSettings : ConfigConfigBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigTimeSettings : ConfigDeviceSettings {
        
        private object[] itemsField;
        
        private ItemsChoiceType2[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CustomTZName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightOffsetHours", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStartDay", typeof(dmWeekday), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStartMonth", typeof(dmMonth), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStartTimeHours", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStartTimeMinutes", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStartWeek", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStopDay", typeof(dmWeekday), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStopMonth", typeof(dmMonth), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStopTimeHours", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStopTimeMinutes", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DaylightStopWeek", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocalTimeZone", typeof(dmTimeZone), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OffsetHours", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("OffsetMinutes", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TZNameDST", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UTCDirection", typeof(dmTimeDirection), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType2[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType2 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CustomTZName")]
        CustomTZName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightOffsetHours")]
        DaylightOffsetHours,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStartDay")]
        DaylightStartDay,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStartMonth")]
        DaylightStartMonth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStartTimeHours")]
        DaylightStartTimeHours,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStartTimeMinutes")]
        DaylightStartTimeMinutes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStartWeek")]
        DaylightStartWeek,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStopDay")]
        DaylightStopDay,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStopMonth")]
        DaylightStopMonth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStopTimeHours")]
        DaylightStopTimeHours,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStopTimeMinutes")]
        DaylightStopTimeMinutes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DaylightStopWeek")]
        DaylightStopWeek,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocalTimeZone")]
        LocalTimeZone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OffsetHours")]
        OffsetHours,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":OffsetMinutes")]
        OffsetMinutes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TZNameDST")]
        TZNameDST,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UTCDirection")]
        UTCDirection,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigErrorReportSettings : ConfigDeviceSettings {
        
        private object[] itemsField;
        
        private ItemsChoiceType1[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AlwaysOnStartup", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("EmailAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("InternalState", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LocationIdentifier", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SmtpServer", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType1[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType1 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AlwaysOnStartup")]
        AlwaysOnStartup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EmailAddress")]
        EmailAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":InternalState")]
        InternalState,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LocationIdentifier")]
        LocationIdentifier,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SmtpServer")]
        SmtpServer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigSystemSettings : ConfigDeviceSettings {
        
        private object[] itemsField;
        
        private ItemsChoiceType[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Contact", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Description", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Location", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoginMessage", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProductID", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ProductOID", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SerialNumber", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Services", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SystemName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Contact")]
        Contact,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Description")]
        Description,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Location")]
        Location,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LoginMessage")]
        LoginMessage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ProductID")]
        ProductID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ProductOID")]
        ProductOID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SerialNumber")]
        SerialNumber,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Services")]
        Services,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SystemName")]
        SystemName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigSOAPHeaderDisposition : ConfigAccessControl {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Refine", typeof(dmSOAPHeaderDispositionItem), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigProcessingMetadata : ConfigAccessControl {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MetaItem", typeof(dmMetaItem), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigXACMLPDP : ConfigAccessControl {
        
        private object[] itemsField;
        
        private ItemsChoiceType32[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CacheTTL", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CombiningAlg", typeof(dmXACMLCombiningAlg), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DependentPolicy", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("Directory", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("EqualPolicies", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("GeneralPolicy", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType32[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType32 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CacheTTL")]
        CacheTTL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CombiningAlg")]
        CombiningAlg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DependentPolicy")]
        DependentPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Directory")]
        Directory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EqualPolicies")]
        EqualPolicies,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":GeneralPolicy")]
        GeneralPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigRADIUSSettings : ConfigAccessControl {
        
        private object[] itemsField;
        
        private ItemsChoiceType31[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AAAServers", typeof(dmRadiusServer), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Id", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Retries", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Servers", typeof(dmRadiusServer), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Timeout", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType31[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType31 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AAAServers")]
        AAAServers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Id")]
        Id,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Retries")]
        Retries,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Servers")]
        Servers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Timeout")]
        Timeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigDomain : ConfigAccessControl {
        
        private object[] itemsField;
        
        private ItemsChoiceType29[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ConfigMode", typeof(dmDomainConfigMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DomainUser", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FileMap", typeof(dmDomainFileMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ImportFormat", typeof(dmImportFormat), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ImportURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("MaxChkpoints", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MonitoringMap", typeof(dmDomainMonitoringMap), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NeighborDomain", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType29[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType29 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ConfigMode")]
        ConfigMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DomainUser")]
        DomainUser,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FileMap")]
        FileMap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ImportFormat")]
        ImportFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ImportURL")]
        ImportURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxChkpoints")]
        MaxChkpoints,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MonitoringMap")]
        MonitoringMap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NeighborDomain")]
        NeighborDomain,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigTFIMEndpoint : ConfigAccessControl {
        
        private object[] itemsField;
        
        private ItemsChoiceType28[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mAppliesToAddress", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mCompatibleMode", typeof(dmTFIMMode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mIssuer", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mOperation", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mPortType", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mReqCustomURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("mReqToken60Format", typeof(dmTFIMReq60Format), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mReqToken61Format", typeof(dmTFIMReq61Format), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mSSLProxy", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mSchemaValidate", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mServerPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mServerURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType28[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType28 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mAppliesToAddress")]
        mAppliesToAddress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mCompatibleMode")]
        mCompatibleMode,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mIssuer")]
        mIssuer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mOperation")]
        mOperation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mPortType")]
        mPortType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mReqCustomURL")]
        mReqCustomURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mReqToken60Format")]
        mReqToken60Format,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mReqToken61Format")]
        mReqToken61Format,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mSSLProxy")]
        mSSLProxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mSchemaValidate")]
        mSchemaValidate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mServerPort")]
        mServerPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":mServerURL")]
        mServerURL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigTAM : ConfigAccessControl {
        
        private object[] itemsField;
        
        private ItemsChoiceType27[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ConfigurationFile", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("LDAPSSLKeyFile", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("LDAPSSLKeyFileDN", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LDAPSSLKeyFilePassword", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LDAPSSLPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LDAPUseSSL", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ReturningUserAttributes", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("SSLKeyFile", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("SSLKeyStashFile", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("TAMAZReplicas", typeof(dmTAMAZReplica), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("TAMUseFIPS", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType27[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType27 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ConfigurationFile")]
        ConfigurationFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPSSLKeyFile")]
        LDAPSSLKeyFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPSSLKeyFileDN")]
        LDAPSSLKeyFileDN,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPSSLKeyFilePassword")]
        LDAPSSLKeyFilePassword,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPSSLPort")]
        LDAPSSLPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPUseSSL")]
        LDAPUseSSL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ReturningUserAttributes")]
        ReturningUserAttributes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLKeyFile")]
        SSLKeyFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLKeyStashFile")]
        SSLKeyStashFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TAMAZReplicas")]
        TAMAZReplicas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TAMUseFIPS")]
        TAMUseFIPS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class ConfigRBMSettings : ConfigAccessControl {
        
        private object[] itemsField;
        
        private ItemsChoiceType26[] itemsElementNameField;
        
        private string nameField;
        
        private bool localField;
        
        private bool localFieldSpecified;
        
        private bool intrinsicField;
        
        private bool intrinsicFieldSpecified;
        
        private bool readonlyField;
        
        private bool readonlyFieldSpecified;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AUCacheAllow", typeof(dmAAACacheType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AUCacheTTL", typeof(uint), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AUCustomURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("AUHost", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AUInfoURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("AUKerberosKeytab", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AULDAPLoadBalanceGroup", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AULDAPPrefix", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AUMethod", typeof(dmRBMAuthenticateType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("AUPort", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("ApplyToCLI", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DisallowUsernameSubstring", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoPasswordAging", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DoPasswordHistory", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FallbackLogin", typeof(dmRBMFallbackLoginType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FallbackUser", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LDAPSSLProxyProfile", typeof(dmReference), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LDAPVersion", typeof(dmLDAPVersion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LDAPsuffix", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MCCustomURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("MCInfoURL", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("MCMethod", typeof(dmRBMMapType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MaxPasswordAge", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("MinPasswordLength", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("NumOldPasswords", typeof(ushort), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequireDigit", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequireMixedCase", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RequireNonAlphaNumeric", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("RestrictAdminToSerialPort", typeof(dmToggle), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("UserSummary", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType26[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool local {
            get {
                return this.localField;
            }
            set {
                this.localField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localSpecified {
            get {
                return this.localFieldSpecified;
            }
            set {
                this.localFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intrinsic {
            get {
                return this.intrinsicField;
            }
            set {
                this.intrinsicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intrinsicSpecified {
            get {
                return this.intrinsicFieldSpecified;
            }
            set {
                this.intrinsicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("read-only")]
        public bool @readonly {
            get {
                return this.readonlyField;
            }
            set {
                this.readonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readonlySpecified {
            get {
                return this.readonlyFieldSpecified;
            }
            set {
                this.readonlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool externalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType26 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AUCacheAllow")]
        AUCacheAllow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AUCacheTTL")]
        AUCacheTTL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AUCustomURL")]
        AUCustomURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AUHost")]
        AUHost,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AUInfoURL")]
        AUInfoURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AUKerberosKeytab")]
        AUKerberosKeytab,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AULDAPLoadBalanceGroup")]
        AULDAPLoadBalanceGroup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AULDAPPrefix")]
        AULDAPPrefix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AUMethod")]
        AUMethod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AUPort")]
        AUPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ApplyToCLI")]
        ApplyToCLI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DisallowUsernameSubstring")]
        DisallowUsernameSubstring,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoPasswordAging")]
        DoPasswordAging,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DoPasswordHistory")]
        DoPasswordHistory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FallbackLogin")]
        FallbackLogin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FallbackUser")]
        FallbackUser,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPSSLProxyProfile")]
        LDAPSSLProxyProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPVersion")]
        LDAPVersion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LDAPsuffix")]
        LDAPsuffix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MCCustomURL")]
        MCCustomURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MCInfoURL")]
        MCInfoURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MCMethod")]
        MCMethod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MaxPasswordAge")]
        MaxPasswordAge,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MinPasswordLength")]
        MinPasswordLength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NumOldPasswords")]
        NumOldPasswords,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequireDigit")]
        RequireDigit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequireMixedCase")]
        RequireMixedCase,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RequireNonAlphaNumeric")]
        RequireNonAlphaNumeric,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RestrictAdminToSerialPort")]
        RestrictAdminToSerialPort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserSummary")]
        UserSummary,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmTraceEvent {
        
        private System.Nullable<dmTraceClass> classField;
        
        private System.Nullable<dmTraceLevel> priorityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmTraceClass> Class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmTraceLevel> Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmTraceClass {
        
        /// <remarks/>
        evtlog,
        
        /// <remarks/>
        webgui,
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        crl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cache-service")]
        cacheservice,
        
        /// <remarks/>
        dispatcher,
        
        /// <remarks/>
        dhcp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("document-handler")]
        documenthandler,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("resource-fetcher")]
        resourcefetcher,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ethernet-fix")]
        ethernetfix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("file-store")]
        filestore,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("first-level")]
        firstlevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http-latency")]
        httplatency,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http-parser")]
        httpparser,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http-proxy")]
        httpproxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http-rewriter")]
        httprewriter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http-server")]
        httpserver,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http-useragent")]
        httpuseragent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("identity-processor")]
        identityprocessor,
        
        /// <remarks/>
        @interface,
        
        /// <remarks/>
        ldap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mac-fix")]
        macfix,
        
        /// <remarks/>
        main,
        
        /// <remarks/>
        management,
        
        /// <remarks/>
        monitor,
        
        /// <remarks/>
        match,
        
        /// <remarks/>
        mime,
        
        /// <remarks/>
        multistep,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("name-service")]
        nameservice,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ntp-service")]
        ntpservice,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("packet-capture")]
        packetcapture,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("payload-processor")]
        payloadprocessor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ping-service")]
        pingservice,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rewrite-policy")]
        rewritepolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rule-processor")]
        ruleprocessor,
        
        /// <remarks/>
        schema,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("server-manager")]
        servermanager,
        
        /// <remarks/>
        shell,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("simple-forwarder")]
        simpleforwarder,
        
        /// <remarks/>
        snmp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("soap-envelope")]
        soapenvelope,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("soap-processor")]
        soapprocessor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("soap-validator")]
        soapvalidator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ssh-handler")]
        sshhandler,
        
        /// <remarks/>
        ssl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ssl-forwarder")]
        sslforwarder,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("standby-control")]
        standbycontrol,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("statistics-service")]
        statisticsservice,
        
        /// <remarks/>
        status,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stylesheet-policy")]
        stylesheetpolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stylesheet-service")]
        stylesheetservice,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stream-cache")]
        streamcache,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("telnet-handler")]
        telnethandler,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("thread-manager")]
        threadmanager,
        
        /// <remarks/>
        throttler,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("url-opener")]
        urlopener,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("user-session")]
        usersession,
        
        /// <remarks/>
        watchdog,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xpl-doc")]
        xpldoc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xsl-coproc")]
        xslcoproc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xsl-processor")]
        xslprocessor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("jit-feeder")]
        jitfeeder,
        
        /// <remarks/>
        xslt,
        
        /// <remarks/>
        mq,
        
        /// <remarks/>
        tam,
        
        /// <remarks/>
        acl,
        
        /// <remarks/>
        crypto,
        
        /// <remarks/>
        compiler,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml-fetcher")]
        xmlfetcher,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dynamic-schema-loader")]
        dynamicschemaloader,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cert-monitor")]
        certmonitor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("post-fetcher")]
        postfetcher,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("savefile-processor")]
        savefileprocessor,
        
        /// <remarks/>
        ocsp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ws-proxy")]
        wsproxy,
        
        /// <remarks/>
        mpgw,
        
        /// <remarks/>
        kerberos,
        
        /// <remarks/>
        slm,
        
        /// <remarks/>
        sql,
        
        /// <remarks/>
        netegrity,
        
        /// <remarks/>
        supervisor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network-file")]
        networkfile,
        
        /// <remarks/>
        icap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("webapp-firewall")]
        webappfirewall,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http-convert")]
        httpconvert,
        
        /// <remarks/>
        jms,
        
        /// <remarks/>
        xacml,
        
        /// <remarks/>
        ltpa,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("file-poller")]
        filepoller,
        
        /// <remarks/>
        tfim,
        
        /// <remarks/>
        uddisub,
        
        /// <remarks/>
        wsrr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("secure-conversation")]
        secureconversation,
        
        /// <remarks/>
        fap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("serialize-processor")]
        serializeprocessor,
        
        /// <remarks/>
        wsrm,
        
        /// <remarks/>
        ims,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmTraceLevel {
        
        /// <remarks/>
        emerg,
        
        /// <remarks/>
        alert,
        
        /// <remarks/>
        critic,
        
        /// <remarks/>
        error,
        
        /// <remarks/>
        warn,
        
        /// <remarks/>
        notice,
        
        /// <remarks/>
        info,
        
        /// <remarks/>
        debug,
        
        /// <remarks/>
        debug1,
        
        /// <remarks/>
        debug2,
        
        /// <remarks/>
        debug3,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmAgentConfigType {
        
        private string propNameField;
        
        private string propValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PropName {
            get {
                return this.propNameField;
            }
            set {
                this.propNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string PropValue {
            get {
                return this.propValueField;
            }
            set {
                this.propValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmAccessPolicyType {
        
        private string deviceIPField;
        
        private dmReference domainField;
        
        private dmResourceType typeField;
        
        private string nameField;
        
        private string localAddressField;
        
        private string localPortField;
        
        private string directoryField;
        
        private string filenameField;
        
        private dmAccessType accessField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string DeviceIP {
            get {
                return this.deviceIPField;
            }
            set {
                this.deviceIPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmReference Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmResourceType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LocalAddress {
            get {
                return this.localAddressField;
            }
            set {
                this.localAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LocalPort {
            get {
                return this.localPortField;
            }
            set {
                this.localPortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Directory {
            get {
                return this.directoryField;
            }
            set {
                this.directoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public dmAccessType Access {
            get {
                return this.accessField;
            }
            set {
                this.accessField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum dmResourceType {
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        login,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("login/serial")]
        loginserial,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("login/telnet")]
        logintelnet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("login/ssh")]
        loginssh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("login/web-mgmt")]
        loginwebmgmt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("login/xml-mgmt")]
        loginxmlmgmt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wsm/endpoint")]
        wsmendpoint,
        
        /// <remarks/>
        device,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("device/boot-image")]
        devicebootimage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("device/boot-update")]
        devicebootupdate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("device/create-dir")]
        devicecreatedir,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("device/delete-file")]
        devicedeletefile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("device/boot-delete")]
        devicebootdelete,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("device/fetch-file")]
        devicefetchfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("device/boot-switch")]
        devicebootswitch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("device/move-file")]
        devicemovefile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("device/remove-dir")]
        deviceremovedir,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("device/sendfile")]
        devicesendfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("device/time-date")]
        devicetimedate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("device/shutdown")]
        deviceshutdown,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("device/watchdog-image")]
        devicewatchdogimage,
        
        /// <remarks/>
        network,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/dns")]
        networkdns,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/interface")]
        networkinterface,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/ftp-quote-command-list")]
        networkftpquotecommandlist,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/host-alias")]
        networkhostalias,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/ims")]
        networkims,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/loadbalancer-group")]
        networkloadbalancergroup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/mq-qm")]
        networkmqqm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/mq-qm-group")]
        networkmqqmgroup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/network")]
        networknetwork,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/nfs-client")]
        networknfsclient,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/nfs-dynamic-mounts")]
        networknfsdynamicmounts,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/nfs-static-mount")]
        networknfsstaticmount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/ntp-service")]
        networkntpservice,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/peer-group")]
        networkpeergroup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/sqlsource")]
        networksqlsource,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/tibems-server")]
        networktibemsserver,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/user-agent")]
        networkuseragent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/vlan")]
        networkvlan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("network/wasjms-server")]
        networkwasjmsserver,
        
        /// <remarks/>
        protocol,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protocol/ftppoller")]
        protocolftppoller,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protocol/ftp-server")]
        protocolftpserver,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protocol/http")]
        protocolhttp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protocol/https")]
        protocolhttps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protocol/imsconnect")]
        protocolimsconnect,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protocol/mq")]
        protocolmq,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protocol/nfspoller")]
        protocolnfspoller,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protocol/xtc")]
        protocolxtc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protocol/tcp")]
        protocoltcp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protocol/tibems")]
        protocoltibems,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("protocol/wasjms")]
        protocolwasjms,
        
        /// <remarks/>
        services,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("services/httpserv")]
        serviceshttpserv,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("services/multiprotocol-gateway")]
        servicesmultiprotocolgateway,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("services/sslforwarder")]
        servicessslforwarder,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("services/wsrr-synchronize")]
        serviceswsrrsynchronize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("services/tcpproxy")]
        servicestcpproxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("services/uddi-subscription")]
        servicesuddisubscription,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("services/web-app-firewall")]
        serviceswebappfirewall,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("services/ws-proxy")]
        serviceswsproxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("services/mq-gateway")]
        servicesmqgateway,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("services/mq-host")]
        servicesmqhost,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("services/mq-proxy")]
        servicesmqproxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("services/wsrr-subscription")]
        serviceswsrrsubscription,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("services/xmlfirewall")]
        servicesxmlfirewall,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("services/xslcoproc")]
        servicesxslcoproc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("services/xslproxy")]
        servicesxslproxy,
        
        /// <remarks/>
        xml,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/aaapolicy")]
        xmlaaapolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/compile-options")]
        xmlcompileoptions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/conformancepolicy")]
        xmlconformancepolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/document-crypto-map")]
        xmldocumentcryptomap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/input-conversion-map")]
        xmlinputconversionmap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/matching")]
        xmlmatching,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/mtom")]
        xmlmtom,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/action")]
        xmlaction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/metadata")]
        xmlmetadata,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/stylepolicy")]
        xmlstylepolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/rule")]
        xmlrule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/schema-exception-map")]
        xmlschemaexceptionmap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/soap-disposition")]
        xmlsoapdisposition,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/urlmap")]
        xmlurlmap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/urlrefresh")]
        xmlurlrefresh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/urlrewrite")]
        xmlurlrewrite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/xmlmgr")]
        xmlxmlmgr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml/xpath-routing")]
        xmlxpathrouting,
        
        /// <remarks/>
        wsm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wsm/wsm-endpointrewrite")]
        wsmwsmendpointrewrite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wsm/wsm-stylepolicy")]
        wsmwsmstylepolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wsm/wsm-rule")]
        wsmwsmrule,
        
        /// <remarks/>
        policy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("policy/policy-attachments")]
        policypolicyattachments,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("policy/policy-parameters")]
        policypolicyparameters,
        
        /// <remarks/>
        webapp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("webapp/security-policy")]
        webappsecuritypolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("webapp/error-policy")]
        webapperrorpolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("webapp/name-value-profile")]
        webappnamevalueprofile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("webapp/rate-limiter")]
        webappratelimiter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("webapp/session-management")]
        webappsessionmanagement,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("webapp/request-profile")]
        webapprequestprofile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("webapp/response-profile")]
        webappresponseprofile,
        
        /// <remarks/>
        monitor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("monitor/monitor-count")]
        monitormonitorcount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("monitor/monitor-duration")]
        monitormonitorduration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("monitor/monitor-action")]
        monitormonitoraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("monitor/message-matching")]
        monitormessagematching,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("monitor/message-type")]
        monitormessagetype,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("monitor/slm-action")]
        monitorslmaction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("monitor/slm-cred")]
        monitorslmcred,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("monitor/slm-policy")]
        monitorslmpolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("monitor/slm-rsrc")]
        monitorslmrsrc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("monitor/slm-schedule")]
        monitorslmschedule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("monitor/service-monitor")]
        monitorservicemonitor,
        
        /// <remarks/>
        crypto,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/add-password-map")]
        cryptoaddpasswordmap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/crypto-hsm-clone-kwk")]
        cryptocryptohsmclonekwk,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/tam")]
        cryptotam,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/valcredgen")]
        cryptovalcredgen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/crl")]
        cryptocrl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/cert")]
        cryptocert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/cert-monitor")]
        cryptocertmonitor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/fwcred")]
        cryptofwcred,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/idcred")]
        cryptoidcred,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/key")]
        cryptokey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/profile")]
        cryptoprofile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/sskey")]
        cryptosskey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/valcred")]
        cryptovalcred,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/hsm-delete-key")]
        cryptohsmdeletekey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/crypto-export")]
        cryptocryptoexport,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/device-cert")]
        cryptodevicecert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/keygen")]
        cryptokeygen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/crypto-hsm-reinit")]
        cryptocryptohsmreinit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/crypto-import")]
        cryptocryptoimport,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/kerberos-kdc")]
        cryptokerberoskdc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/kerberos-keytab")]
        cryptokerberoskeytab,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/no-password-map")]
        cryptonopasswordmap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/password-map")]
        cryptopasswordmap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/sslproxy")]
        cryptosslproxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crypto/test-password-map")]
        cryptotestpasswordmap,
        
        /// <remarks/>
        mgmt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mgmt/ssh")]
        mgmtssh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mgmt/telnet")]
        mgmttelnet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mgmt/web-mgmt")]
        mgmtwebmgmt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mgmt/wsm-agent")]
        mgmtwsmagent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mgmt/xml-mgmt")]
        mgmtxmlmgmt,
        
        /// <remarks/>
        access,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("access/acl")]
        accessacl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("access/change-password")]
        accesschangepassword,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("access/disconnect")]
        accessdisconnect,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("access/force-password-change")]
        accessforcepasswordchange,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("access/tam")]
        accesstam,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("access/tfim")]
        accesstfim,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("access/radius")]
        accessradius,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("access/rbm")]
        accessrbm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("access/snmp")]
        accesssnmp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("access/username")]
        accessusername,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("access/usergroup")]
        accessusergroup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("access/xacml-pdp")]
        accessxacmlpdp,
        
        /// <remarks/>
        config,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config/domain")]
        configdomain,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config/backup")]
        configbackup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config/exec-config")]
        configexecconfig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config/import-package")]
        configimportpackage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config/import-execute")]
        configimportexecute,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config/include-config")]
        configincludeconfig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config/remove-chkpoint")]
        configremovechkpoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config/restart-domain")]
        configrestartdomain,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config/rollback-chkpoint")]
        configrollbackchkpoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config/save-chkpoint")]
        configsavechkpoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config/save-config")]
        configsaveconfig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config/saveinternlstate")]
        configsaveinternlstate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config/select-config")]
        configselectconfig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config/alias")]
        configalias,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config/uddi-registry")]
        configuddiregistry,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config/undo-config")]
        configundoconfig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config/wsrr-server")]
        configwsrrserver,
        
        /// <remarks/>
        logging,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("logging/category")]
        loggingcategory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("logging/target")]
        loggingtarget,
        
        /// <remarks/>
        system,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("system/trusted-host")]
        systemtrustedhost,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("system/no-trusted-host")]
        systemnotrustedhost,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("system/failure-notification")]
        systemfailurenotification,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("system/statistics")]
        systemstatistics,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("system/system")]
        systemsystem,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("system/throttle")]
        systemthrottle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("system/timezone")]
        systemtimezone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("system/file-capture")]
        systemfilecapture,
        
        /// <remarks/>
        cache,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cache/cache-schema")]
        cachecacheschema,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cache/cache-stylesheet")]
        cachecachestylesheet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cache/compile-wsdl")]
        cachecompilewsdl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cache/flush-aaa")]
        cacheflushaaa,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cache/flush-arp")]
        cacheflusharp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cache/flush-dns")]
        cacheflushdns,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cache/flush-document")]
        cacheflushdocument,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cache/flush-pdp")]
        cacheflushpdp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cache/flush-rbm")]
        cacheflushrbm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cache/flush-stylesheet")]
        cacheflushstylesheet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cache/refresh-document")]
        cacherefreshdocument,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cache/refresh-stylesheet")]
        cacherefreshstylesheet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cache/remove-stylesheet")]
        cacheremovestylesheet,
        
        /// <remarks/>
        debug,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("debug/error-report")]
        debugerrorreport,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("debug/send-logevent")]
        debugsendlogevent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("debug/ping")]
        debugping,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("debug/send-error-report")]
        debugsenderrorreport,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("debug/set-loglevel")]
        debugsetloglevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("debug/set-rbmlog")]
        debugsetrbmlog,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("debug/set-system-var")]
        debugsetsystemvar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("debug/ssltrace")]
        debugssltrace,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("debug/packet-capture")]
        debugpacketcapture,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("debug/vlan-packet-capture")]
        debugvlanpacketcapture,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("debug/tcp-connection-test")]
        debugtcpconnectiontest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("debug/test-radius")]
        debugtestradius,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("debug/test-urlmap")]
        debugtesturlmap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("debug/test-urlrefresh")]
        debugtesturlrefresh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("debug/test-urlrewrite")]
        debugtesturlrewrite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("debug/file-capture")]
        debugfilecapture,
        
        /// <remarks/>
        file,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("file/local")]
        filelocal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("file/temporary")]
        filetemporary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("file/store")]
        filestore,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("file/config")]
        fileconfig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("file/image")]
        fileimage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("file/logstore")]
        filelogstore,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("file/logtemp")]
        filelogtemp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("file/audit")]
        fileaudit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("file/tasktemplates")]
        filetasktemplates,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("file/cert")]
        filecert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("file/pubcert")]
        filepubcert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("file/sharedcert")]
        filesharedcert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("file/export")]
        fileexport,
        
        /// <remarks/>
        status_Main,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/active-services")]
        statusactiveservices,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/active-users")]
        statusactiveusers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/date-time")]
        statusdatetime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/logging-target")]
        statusloggingtarget,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/object-status")]
        statusobjectstatus,
        
        /// <remarks/>
        status_Configuration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/chkpoints")]
        statuschkpoints,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/domain-status")]
        statusdomainstatus,
        
        /// <remarks/>
        status_System,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/cpu")]
        statuscpu,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/sensors-fans")]
        statussensorsfans,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/environment")]
        statusenvironment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/filessystem")]
        statusfilessystem,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/firmware")]
        statusfirmware,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/library-version")]
        statuslibraryversion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/license")]
        statuslicense,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/memory")]
        statusmemory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/system")]
        statussystem,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/firmware-version")]
        statusfirmwareversion,
        
        /// <remarks/>
        status_IPNetwork,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/arp")]
        statusarp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/dns-cache-host")]
        statusdnscachehost,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/dns-search-domain")]
        statusdnssearchdomain,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/dns-name-server")]
        statusdnsnameserver,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/dns-static-host")]
        statusdnsstatichost,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/interface")]
        statusinterface,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/loadbalancer-status")]
        statusloadbalancerstatus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/networkinterface")]
        statusnetworkinterface,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/routing2")]
        statusrouting2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/receive-packets2")]
        statusreceivepackets2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/receive-kbps2")]
        statusreceivekbps2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/standby")]
        statusstandby,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/tcp-table")]
        statustcptable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/tcp-connections")]
        statustcpconnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/transmit-packets2")]
        statustransmitpackets2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/transmit-kbps2")]
        statustransmitkbps2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/vlan")]
        statusvlan,
        
        /// <remarks/>
        status_OtherNetwork,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/qm")]
        statusqm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/file-poller")]
        statusfilepoller,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/imsconnect")]
        statusimsconnect,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/mqqm")]
        statusmqqm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/mq")]
        statusmq,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/nfs-mount")]
        statusnfsmount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/ntp-refresh")]
        statusntprefresh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/snmp-status")]
        statussnmpstatus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/sql")]
        statussql,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/tibco-ems")]
        statustibcoems,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/wasjms")]
        statuswasjms,
        
        /// <remarks/>
        status_Connection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/accepted-connections")]
        statusacceptedconnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/http-connections")]
        statushttpconnections,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/http-transactions")]
        statushttptransactions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/http-mean-transaction")]
        statushttpmeantransaction,
        
        /// <remarks/>
        status_XMLAware,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/document-cache")]
        statusdocumentcache,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/document-status")]
        statusdocumentstatus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/stylesheet-cache")]
        statusstylesheetcache,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/stylesheet-mean-execution")]
        statusstylesheetmeanexecution,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/stylesheet-executions")]
        statusstylesheetexecutions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/stylesheet-profiles")]
        statusstylesheetprofiles,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/stylesheet-status")]
        statusstylesheetstatus,
        
        /// <remarks/>
        status_Wsm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/uddi-subscription-key-status")]
        statusuddisubscriptionkeystatus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/uddi-subscription-service-status")]
        statusuddisubscriptionservicestatus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/uddi-subscription-status")]
        statusuddisubscriptionstatus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/ws-operation-metrics")]
        statuswsoperationmetrics,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/ws-operation-status")]
        statuswsoperationstatus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/ws-wsdl-status")]
        statuswswsdlstatus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/wsm-agent-status")]
        statuswsmagentstatus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/wsm-spooler")]
        statuswsmspooler,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/wsrr-subscription-service-status")]
        statuswsrrsubscriptionservicestatus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/wsrr-subscription-status")]
        statuswsrrsubscriptionstatus,
        
        /// <remarks/>
        status_Webapp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/webappfirewall-accepted")]
        statuswebappfirewallaccepted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/webappfirewall-rejected")]
        statuswebappfirewallrejected,
        
        /// <remarks/>
        status_Monitor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/message-count-filters")]
        statusmessagecountfilters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/message-counts")]
        statusmessagecounts,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/message-duration-filters")]
        statusmessagedurationfilters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/message-durations")]
        statusmessagedurations,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/message-sources")]
        statusmessagesources,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/slm-peering")]
        statusslmpeering,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/slm-summary")]
        statusslmsummary,
        
        /// <remarks/>
        status_Crypto,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/crypto-engine")]
        statuscryptoengine,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/hsm-keys")]
        statushsmkeys,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("status/trusted-hosts")]
        statustrustedhosts,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmAccessType {
        
        private dmToggle nONEField;
        
        private bool nONEFieldSpecified;
        
        private dmToggle rField;
        
        private bool rFieldSpecified;
        
        private dmToggle wField;
        
        private bool wFieldSpecified;
        
        private dmToggle aField;
        
        private bool aFieldSpecified;
        
        private dmToggle dField;
        
        private bool dFieldSpecified;
        
        private dmToggle xField;
        
        private bool xFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle NONE {
            get {
                return this.nONEField;
            }
            set {
                this.nONEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NONESpecified {
            get {
                return this.nONEFieldSpecified;
            }
            set {
                this.nONEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle r {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rSpecified {
            get {
                return this.rFieldSpecified;
            }
            set {
                this.rFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle w {
            get {
                return this.wField;
            }
            set {
                this.wField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wSpecified {
            get {
                return this.wFieldSpecified;
            }
            set {
                this.wFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle a {
            get {
                return this.aField;
            }
            set {
                this.aField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool aSpecified {
            get {
                return this.aFieldSpecified;
            }
            set {
                this.aFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle d {
            get {
                return this.dField;
            }
            set {
                this.dField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dSpecified {
            get {
                return this.dFieldSpecified;
            }
            set {
                this.dFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool xSpecified {
            get {
                return this.xFieldSpecified;
            }
            set {
                this.xFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmDomainURLMap {
        
        private dmToggle httpField;
        
        private bool httpFieldSpecified;
        
        private dmToggle httpsField;
        
        private bool httpsFieldSpecified;
        
        private dmToggle snmpField;
        
        private bool snmpFieldSpecified;
        
        private dmToggle ftpField;
        
        private bool ftpFieldSpecified;
        
        private dmToggle mailtoField;
        
        private bool mailtoFieldSpecified;
        
        private dmToggle mqField;
        
        private bool mqFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle http {
            get {
                return this.httpField;
            }
            set {
                this.httpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool httpSpecified {
            get {
                return this.httpFieldSpecified;
            }
            set {
                this.httpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle https {
            get {
                return this.httpsField;
            }
            set {
                this.httpsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool httpsSpecified {
            get {
                return this.httpsFieldSpecified;
            }
            set {
                this.httpsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle snmp {
            get {
                return this.snmpField;
            }
            set {
                this.snmpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool snmpSpecified {
            get {
                return this.snmpFieldSpecified;
            }
            set {
                this.snmpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle ftp {
            get {
                return this.ftpField;
            }
            set {
                this.ftpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ftpSpecified {
            get {
                return this.ftpFieldSpecified;
            }
            set {
                this.ftpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle mailto {
            get {
                return this.mailtoField;
            }
            set {
                this.mailtoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mailtoSpecified {
            get {
                return this.mailtoFieldSpecified;
            }
            set {
                this.mailtoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dmToggle mq {
            get {
                return this.mqField;
            }
            set {
                this.mqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mqSpecified {
            get {
                return this.mqFieldSpecified;
            }
            set {
                this.mqFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmWSSecureConversationState {
        
        private string identifierField;
        
        private System.Nullable<uint> startTimeField;
        
        private System.Nullable<uint> expiryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<uint> Expiry {
            get {
                return this.expiryField;
            }
            set {
                this.expiryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmQName {
        
        private string uRIField;
        
        private string localNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string URI {
            get {
                return this.uRIField;
            }
            set {
                this.uRIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string LocalName {
            get {
                return this.localNameField;
            }
            set {
                this.localNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public partial class dmTAMActionResourceMap {
        
        private string resourceField;
        
        private System.Nullable<dmTAMActionType> actionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string Resource {
            get {
                return this.resourceField;
            }
            set {
                this.resourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<dmTAMActionType> Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="base64-binary", Namespace="http://www.datapower.com/schemas/management")]
    public partial class base64binary {
        
        private byte[] valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="base64Binary")]
        public byte[] Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemsChoiceType77 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AAAPolicy")]
        AAAPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AccessControlList")]
        AccessControlList,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":AppSecurityPolicy")]
        AppSecurityPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CRLFetch")]
        CRLFetch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CertMonitor")]
        CertMonitor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CompileOptionsPolicy")]
        CompileOptionsPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ConformancePolicy")]
        ConformancePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CountMonitor")]
        CountMonitor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CryptoCertificate")]
        CryptoCertificate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CryptoFWCred")]
        CryptoFWCred,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CryptoIdentCred")]
        CryptoIdentCred,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CryptoKerberosKDC")]
        CryptoKerberosKDC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CryptoKerberosKeytab")]
        CryptoKerberosKeytab,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CryptoKey")]
        CryptoKey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CryptoProfile")]
        CryptoProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CryptoSSKey")]
        CryptoSSKey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":CryptoValCred")]
        CryptoValCred,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DNSNameService")]
        DNSNameService,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DocumentCryptoMap")]
        DocumentCryptoMap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Domain")]
        Domain,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":DurationMonitor")]
        DurationMonitor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ErrorReportSettings")]
        ErrorReportSettings,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":EthernetInterface")]
        EthernetInterface,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FTPFilePollerSourceProtocolHandler")]
        FTPFilePollerSourceProtocolHandler,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FTPQuoteCommands")]
        FTPQuoteCommands,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FTPServerSourceProtocolHandler")]
        FTPServerSourceProtocolHandler,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":FilterAction")]
        FilterAction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPInputConversionMap")]
        HTTPInputConversionMap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPSSourceProtocolHandler")]
        HTTPSSourceProtocolHandler,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPService")]
        HTTPService,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPSourceProtocolHandler")]
        HTTPSourceProtocolHandler,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HTTPUserAgent")]
        HTTPUserAgent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":HostAlias")]
        HostAlias,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IMSConnect")]
        IMSConnect,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IMSConnectSourceProtocolHandler")]
        IMSConnectSourceProtocolHandler,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ImportPackage")]
        ImportPackage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":IncludeConfig")]
        IncludeConfig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LoadBalancerGroup")]
        LoadBalancerGroup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogLabel")]
        LogLabel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":LogTarget")]
        LogTarget,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MQGW")]
        MQGW,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MQQM")]
        MQQM,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MQQMGroup")]
        MQQMGroup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MQSourceProtocolHandler")]
        MQSourceProtocolHandler,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MQhost")]
        MQhost,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MQproxy")]
        MQproxy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MTOMPolicy")]
        MTOMPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Matching")]
        Matching,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MessageMatching")]
        MessageMatching,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MessageType")]
        MessageType,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MgmtInterface")]
        MgmtInterface,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":MultiProtocolGateway")]
        MultiProtocolGateway,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NFSClientSettings")]
        NFSClientSettings,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NFSDynamicMounts")]
        NFSDynamicMounts,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NFSFilePollerSourceProtocolHandler")]
        NFSFilePollerSourceProtocolHandler,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NFSStaticMount")]
        NFSStaticMount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NTPService")]
        NTPService,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NameValueProfile")]
        NameValueProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":NetworkSettings")]
        NetworkSettings,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PeerGroup")]
        PeerGroup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PolicyAttachments")]
        PolicyAttachments,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":PolicyParameters")]
        PolicyParameters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ProcessingMetadata")]
        ProcessingMetadata,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RADIUSSettings")]
        RADIUSSettings,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":RBMSettings")]
        RBMSettings,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SLMAction")]
        SLMAction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SLMCredClass")]
        SLMCredClass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SLMPolicy")]
        SLMPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SLMRsrcClass")]
        SLMRsrcClass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SLMSchedule")]
        SLMSchedule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SNMPSettings")]
        SNMPSettings,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SOAPHeaderDisposition")]
        SOAPHeaderDisposition,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SQLDataSource")]
        SQLDataSource,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSHService")]
        SSHService,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxyProfile")]
        SSLProxyProfile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SSLProxyService")]
        SSLProxyService,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SchemaExceptionMap")]
        SchemaExceptionMap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":ShellAlias")]
        ShellAlias,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SimpleCountMonitor")]
        SimpleCountMonitor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StatelessTCPSourceProtocolHandler")]
        StatelessTCPSourceProtocolHandler,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Statistics")]
        Statistics,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylePolicy")]
        StylePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylePolicyAction")]
        StylePolicyAction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":StylePolicyRule")]
        StylePolicyRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":SystemSettings")]
        SystemSettings,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TAM")]
        TAM,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TCPProxyService")]
        TCPProxyService,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TFIMEndpoint")]
        TFIMEndpoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TelnetService")]
        TelnetService,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":Throttler")]
        Throttler,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TibcoEMSServer")]
        TibcoEMSServer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TibcoEMSSourceProtocolHandler")]
        TibcoEMSSourceProtocolHandler,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":TimeSettings")]
        TimeSettings,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UDDIRegistry")]
        UDDIRegistry,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UDDISubscription")]
        UDDISubscription,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URLMap")]
        URLMap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URLRefreshPolicy")]
        URLRefreshPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":URLRewritePolicy")]
        URLRewritePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":User")]
        User,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":UserGroup")]
        UserGroup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":VLANInterface")]
        VLANInterface,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSEndpointRewritePolicy")]
        WSEndpointRewritePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSGateway")]
        WSGateway,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRRServer")]
        WSRRServer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSRRSubscription")]
        WSRRSubscription,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSStylePolicy")]
        WSStylePolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WSStylePolicyRule")]
        WSStylePolicyRule,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WebAppErrorHandlingPolicy")]
        WebAppErrorHandlingPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WebAppFW")]
        WebAppFW,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WebAppRequest")]
        WebAppRequest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WebAppResponse")]
        WebAppResponse,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WebAppSessionPolicy")]
        WebAppSessionPolicy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WebGUI")]
        WebGUI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WebServiceMonitor")]
        WebServiceMonitor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WebServicesAgent")]
        WebServicesAgent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WebSphereJMSServer")]
        WebSphereJMSServer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":WebSphereJMSSourceProtocolHandler")]
        WebSphereJMSSourceProtocolHandler,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XACMLPDP")]
        XACMLPDP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLFirewallService")]
        XMLFirewallService,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XMLManager")]
        XMLManager,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XPathRoutingMap")]
        XPathRoutingMap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XSLCoprocService")]
        XSLCoprocService,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XSLProxyService")]
        XSLProxyService,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":XTCProtocolHandler")]
        XTCProtocolHandler,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(":xmltrace")]
        xmltrace,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestDobackup {
        
        private string usercommentField;
        
        private requestDobackupDomain[] domainField;
        
        private exportformat formatField;
        
        private bool formatFieldSpecified;
        
        private bool persistedField;
        
        private bool persistedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("user-comment")]
        public string usercomment {
            get {
                return this.usercommentField;
            }
            set {
                this.usercommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("domain")]
        public requestDobackupDomain[] domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public exportformat format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool formatSpecified {
            get {
                return this.formatFieldSpecified;
            }
            set {
                this.formatFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool persisted {
            get {
                return this.persistedField;
            }
            set {
                this.persistedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool persistedSpecified {
            get {
                return this.persistedFieldSpecified;
            }
            set {
                this.persistedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestDobackupDomain {
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="export-format", Namespace="http://www.datapower.com/schemas/management")]
    public enum exportformat {
        
        /// <remarks/>
        ZIP,
        
        /// <remarks/>
        XML,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestDoexport {
        
        private string usercommentField;
        
        private requestDoexportObject[] objectField;
        
        private exportformat formatField;
        
        private bool formatFieldSpecified;
        
        private bool allfilesField;
        
        private bool allfilesFieldSpecified;
        
        private bool persistedField;
        
        private bool persistedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("user-comment")]
        public string usercomment {
            get {
                return this.usercommentField;
            }
            set {
                this.usercommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("object")]
        public requestDoexportObject[] @object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public exportformat format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool formatSpecified {
            get {
                return this.formatFieldSpecified;
            }
            set {
                this.formatFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("all-files")]
        public bool allfiles {
            get {
                return this.allfilesField;
            }
            set {
                this.allfilesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allfilesSpecified {
            get {
                return this.allfilesFieldSpecified;
            }
            set {
                this.allfilesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool persisted {
            get {
                return this.persistedField;
            }
            set {
                this.persistedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool persistedSpecified {
            get {
                return this.persistedFieldSpecified;
            }
            set {
                this.persistedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestDoexportObject {
        
        private string classField;
        
        private string nameField;
        
        private bool refobjectsField;
        
        private bool refobjectsFieldSpecified;
        
        private bool reffilesField;
        
        private bool reffilesFieldSpecified;
        
        private bool includedebugField;
        
        private bool includedebugFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("ref-objects")]
        public bool refobjects {
            get {
                return this.refobjectsField;
            }
            set {
                this.refobjectsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool refobjectsSpecified {
            get {
                return this.refobjectsFieldSpecified;
            }
            set {
                this.refobjectsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("ref-files")]
        public bool reffiles {
            get {
                return this.reffilesField;
            }
            set {
                this.reffilesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reffilesSpecified {
            get {
                return this.reffilesFieldSpecified;
            }
            set {
                this.reffilesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("include-debug")]
        public bool includedebug {
            get {
                return this.includedebugField;
            }
            set {
                this.includedebugField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool includedebugSpecified {
            get {
                return this.includedebugFieldSpecified;
            }
            set {
                this.includedebugFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestDoimport {
        
        private base64binary inputfileField;
        
        private requestDoimportObject[] objectField;
        
        private requestDoimportFile[] fileField;
        
        private exportformat sourcetypeField;
        
        private bool sourcetypeFieldSpecified;
        
        private bool dryrunField;
        
        private bool dryrunFieldSpecified;
        
        private bool overwritefilesField;
        
        private bool overwritefilesFieldSpecified;
        
        private bool overwriteobjectsField;
        
        private bool overwriteobjectsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("input-file")]
        public base64binary inputfile {
            get {
                return this.inputfileField;
            }
            set {
                this.inputfileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("object")]
        public requestDoimportObject[] @object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("file")]
        public requestDoimportFile[] file {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("source-type")]
        public exportformat sourcetype {
            get {
                return this.sourcetypeField;
            }
            set {
                this.sourcetypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sourcetypeSpecified {
            get {
                return this.sourcetypeFieldSpecified;
            }
            set {
                this.sourcetypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("dry-run")]
        public bool dryrun {
            get {
                return this.dryrunField;
            }
            set {
                this.dryrunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dryrunSpecified {
            get {
                return this.dryrunFieldSpecified;
            }
            set {
                this.dryrunFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("overwrite-files")]
        public bool overwritefiles {
            get {
                return this.overwritefilesField;
            }
            set {
                this.overwritefilesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool overwritefilesSpecified {
            get {
                return this.overwritefilesFieldSpecified;
            }
            set {
                this.overwritefilesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("overwrite-objects")]
        public bool overwriteobjects {
            get {
                return this.overwriteobjectsField;
            }
            set {
                this.overwriteobjectsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool overwriteobjectsSpecified {
            get {
                return this.overwriteobjectsFieldSpecified;
            }
            set {
                this.overwriteobjectsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestDoimportObject {
        
        private string classField;
        
        private string nameField;
        
        private bool overwriteField;
        
        private bool overwriteFieldSpecified;
        
        private bool importdebugField;
        
        private bool importdebugFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool overwrite {
            get {
                return this.overwriteField;
            }
            set {
                this.overwriteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool overwriteSpecified {
            get {
                return this.overwriteFieldSpecified;
            }
            set {
                this.overwriteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("import-debug")]
        public bool importdebug {
            get {
                return this.importdebugField;
            }
            set {
                this.importdebugField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool importdebugSpecified {
            get {
                return this.importdebugFieldSpecified;
            }
            set {
                this.importdebugFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestDoimportFile {
        
        private string nameField;
        
        private bool overwriteField;
        
        private bool overwriteFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool overwrite {
            get {
                return this.overwriteField;
            }
            set {
                this.overwriteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool overwriteSpecified {
            get {
                return this.overwriteFieldSpecified;
            }
            set {
                this.overwriteFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestDorestore {
        
        private base64binary inputfileField;
        
        private requestDorestoreDomain[] domainField;
        
        private exportformat sourcetypeField;
        
        private bool sourcetypeFieldSpecified;
        
        private bool dryrunField;
        
        private bool dryrunFieldSpecified;
        
        private bool overwritefilesField;
        
        private bool overwritefilesFieldSpecified;
        
        private bool overwriteobjectsField;
        
        private bool overwriteobjectsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("input-file")]
        public base64binary inputfile {
            get {
                return this.inputfileField;
            }
            set {
                this.inputfileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("domain")]
        public requestDorestoreDomain[] domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("source-type")]
        public exportformat sourcetype {
            get {
                return this.sourcetypeField;
            }
            set {
                this.sourcetypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sourcetypeSpecified {
            get {
                return this.sourcetypeFieldSpecified;
            }
            set {
                this.sourcetypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("dry-run")]
        public bool dryrun {
            get {
                return this.dryrunField;
            }
            set {
                this.dryrunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dryrunSpecified {
            get {
                return this.dryrunFieldSpecified;
            }
            set {
                this.dryrunFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("overwrite-files")]
        public bool overwritefiles {
            get {
                return this.overwritefilesField;
            }
            set {
                this.overwritefilesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool overwritefilesSpecified {
            get {
                return this.overwritefilesFieldSpecified;
            }
            set {
                this.overwritefilesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("overwrite-objects")]
        public bool overwriteobjects {
            get {
                return this.overwriteobjectsField;
            }
            set {
                this.overwriteobjectsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool overwriteobjectsSpecified {
            get {
                return this.overwriteobjectsFieldSpecified;
            }
            set {
                this.overwriteobjectsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestDorestoreDomain {
        
        private string nameField;
        
        private bool importdomainField;
        
        private bool importdomainFieldSpecified;
        
        private bool resetdomainField;
        
        private bool resetdomainFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("import-domain")]
        public bool importdomain {
            get {
                return this.importdomainField;
            }
            set {
                this.importdomainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool importdomainSpecified {
            get {
                return this.importdomainFieldSpecified;
            }
            set {
                this.importdomainFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("reset-domain")]
        public bool resetdomain {
            get {
                return this.resetdomainField;
            }
            set {
                this.resetdomainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resetdomainSpecified {
            get {
                return this.resetdomainFieldSpecified;
            }
            set {
                this.resetdomainFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestGetconfig {
        
        private ConfigEnum classField;
        
        private bool classFieldSpecified;
        
        private string nameField;
        
        private bool recursiveField;
        
        private bool recursiveFieldSpecified;
        
        private bool persistedField;
        
        private bool persistedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ConfigEnum @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classSpecified {
            get {
                return this.classFieldSpecified;
            }
            set {
                this.classFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool recursive {
            get {
                return this.recursiveField;
            }
            set {
                this.recursiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool recursiveSpecified {
            get {
                return this.recursiveFieldSpecified;
            }
            set {
                this.recursiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool persisted {
            get {
                return this.persistedField;
            }
            set {
                this.persistedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool persistedSpecified {
            get {
                return this.persistedFieldSpecified;
            }
            set {
                this.persistedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum ConfigEnum {
        
        /// <remarks/>
        SystemSettings,
        
        /// <remarks/>
        ErrorReportSettings,
        
        /// <remarks/>
        TimeSettings,
        
        /// <remarks/>
        SNMPSettings,
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        UserGroup,
        
        /// <remarks/>
        Statistics,
        
        /// <remarks/>
        Throttler,
        
        /// <remarks/>
        ShellAlias,
        
        /// <remarks/>
        NetworkSettings,
        
        /// <remarks/>
        NTPService,
        
        /// <remarks/>
        DNSNameService,
        
        /// <remarks/>
        HostAlias,
        
        /// <remarks/>
        HTTPUserAgent,
        
        /// <remarks/>
        EthernetInterface,
        
        /// <remarks/>
        VLANInterface,
        
        /// <remarks/>
        ConformancePolicy,
        
        /// <remarks/>
        HTTPService,
        
        /// <remarks/>
        TCPProxyService,
        
        /// <remarks/>
        SSLProxyService,
        
        /// <remarks/>
        XSLProxyService,
        
        /// <remarks/>
        XMLFirewallService,
        
        /// <remarks/>
        XSLCoprocService,
        
        /// <remarks/>
        TelnetService,
        
        /// <remarks/>
        SSHService,
        
        /// <remarks/>
        WebGUI,
        
        /// <remarks/>
        MgmtInterface,
        
        /// <remarks/>
        StylePolicyAction,
        
        /// <remarks/>
        StylePolicyRule,
        
        /// <remarks/>
        WSStylePolicyRule,
        
        /// <remarks/>
        StylePolicy,
        
        /// <remarks/>
        WSStylePolicy,
        
        /// <remarks/>
        URLMap,
        
        /// <remarks/>
        URLRefreshPolicy,
        
        /// <remarks/>
        CompileOptionsPolicy,
        
        /// <remarks/>
        URLRewritePolicy,
        
        /// <remarks/>
        WSEndpointRewritePolicy,
        
        /// <remarks/>
        Matching,
        
        /// <remarks/>
        MQhost,
        
        /// <remarks/>
        MQproxy,
        
        /// <remarks/>
        MQQM,
        
        /// <remarks/>
        MQQMGroup,
        
        /// <remarks/>
        MQGW,
        
        /// <remarks/>
        TibcoEMSServer,
        
        /// <remarks/>
        WebSphereJMSServer,
        
        /// <remarks/>
        XMLManager,
        
        /// <remarks/>
        xmltrace,
        
        /// <remarks/>
        RBMSettings,
        
        /// <remarks/>
        TAM,
        
        /// <remarks/>
        TFIMEndpoint,
        
        /// <remarks/>
        Domain,
        
        /// <remarks/>
        AAAPolicy,
        
        /// <remarks/>
        RADIUSSettings,
        
        /// <remarks/>
        XACMLPDP,
        
        /// <remarks/>
        ProcessingMetadata,
        
        /// <remarks/>
        SOAPHeaderDisposition,
        
        /// <remarks/>
        CertMonitor,
        
        /// <remarks/>
        CRLFetch,
        
        /// <remarks/>
        CryptoKey,
        
        /// <remarks/>
        CryptoSSKey,
        
        /// <remarks/>
        CryptoCertificate,
        
        /// <remarks/>
        CryptoIdentCred,
        
        /// <remarks/>
        CryptoValCred,
        
        /// <remarks/>
        CryptoFWCred,
        
        /// <remarks/>
        CryptoProfile,
        
        /// <remarks/>
        SSLProxyProfile,
        
        /// <remarks/>
        CryptoKerberosKDC,
        
        /// <remarks/>
        CryptoKerberosKeytab,
        
        /// <remarks/>
        LogLabel,
        
        /// <remarks/>
        LogTarget,
        
        /// <remarks/>
        MessageMatching,
        
        /// <remarks/>
        MessageType,
        
        /// <remarks/>
        CountMonitor,
        
        /// <remarks/>
        DurationMonitor,
        
        /// <remarks/>
        FilterAction,
        
        /// <remarks/>
        WebServiceMonitor,
        
        /// <remarks/>
        HTTPInputConversionMap,
        
        /// <remarks/>
        XPathRoutingMap,
        
        /// <remarks/>
        DocumentCryptoMap,
        
        /// <remarks/>
        SchemaExceptionMap,
        
        /// <remarks/>
        AccessControlList,
        
        /// <remarks/>
        ImportPackage,
        
        /// <remarks/>
        IncludeConfig,
        
        /// <remarks/>
        LoadBalancerGroup,
        
        /// <remarks/>
        MultiProtocolGateway,
        
        /// <remarks/>
        WSGateway,
        
        /// <remarks/>
        HTTPSourceProtocolHandler,
        
        /// <remarks/>
        HTTPSSourceProtocolHandler,
        
        /// <remarks/>
        FTPServerSourceProtocolHandler,
        
        /// <remarks/>
        MQSourceProtocolHandler,
        
        /// <remarks/>
        XTCProtocolHandler,
        
        /// <remarks/>
        StatelessTCPSourceProtocolHandler,
        
        /// <remarks/>
        TibcoEMSSourceProtocolHandler,
        
        /// <remarks/>
        WebSphereJMSSourceProtocolHandler,
        
        /// <remarks/>
        NFSFilePollerSourceProtocolHandler,
        
        /// <remarks/>
        FTPFilePollerSourceProtocolHandler,
        
        /// <remarks/>
        IMSConnectSourceProtocolHandler,
        
        /// <remarks/>
        WebServicesAgent,
        
        /// <remarks/>
        SLMCredClass,
        
        /// <remarks/>
        SLMRsrcClass,
        
        /// <remarks/>
        SLMSchedule,
        
        /// <remarks/>
        SLMAction,
        
        /// <remarks/>
        PeerGroup,
        
        /// <remarks/>
        SLMPolicy,
        
        /// <remarks/>
        NFSClientSettings,
        
        /// <remarks/>
        NFSStaticMount,
        
        /// <remarks/>
        NFSDynamicMounts,
        
        /// <remarks/>
        SQLDataSource,
        
        /// <remarks/>
        UDDIRegistry,
        
        /// <remarks/>
        UDDISubscription,
        
        /// <remarks/>
        WSRRSubscription,
        
        /// <remarks/>
        WebAppSessionPolicy,
        
        /// <remarks/>
        WebAppErrorHandlingPolicy,
        
        /// <remarks/>
        SimpleCountMonitor,
        
        /// <remarks/>
        NameValueProfile,
        
        /// <remarks/>
        WebAppResponse,
        
        /// <remarks/>
        WebAppRequest,
        
        /// <remarks/>
        WebAppFW,
        
        /// <remarks/>
        AppSecurityPolicy,
        
        /// <remarks/>
        MTOMPolicy,
        
        /// <remarks/>
        FTPQuoteCommands,
        
        /// <remarks/>
        WSRRServer,
        
        /// <remarks/>
        PolicyParameters,
        
        /// <remarks/>
        PolicyAttachments,
        
        /// <remarks/>
        IMSConnect,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestGetconformancereport {
        
        private ConfigEnum classField;
        
        private bool classFieldSpecified;
        
        private string nameField;
        
        private string profileField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ConfigEnum @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classSpecified {
            get {
                return this.classFieldSpecified;
            }
            set {
                this.classFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string profile {
            get {
                return this.profileField;
            }
            set {
                this.profileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestGetdiff {
        
        private object[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("from", typeof(requestGetdiffFrom))]
        [System.Xml.Serialization.XmlElementAttribute("object", typeof(requestGetdiffObject))]
        [System.Xml.Serialization.XmlElementAttribute("to", typeof(requestGetdiffTO))]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestGetdiffFrom {
        
        private object itemField;
        
        private ItemChoiceType itemElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("backup", typeof(base64binary))]
        [System.Xml.Serialization.XmlElementAttribute("export", typeof(base64binary))]
        [System.Xml.Serialization.XmlElementAttribute("object", typeof(requestGetdiffFromObject))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestGetdiffFromObject {
        
        private string classField;
        
        private string nameField;
        
        private bool recursiveField;
        
        private bool recursiveFieldSpecified;
        
        private bool persistedField;
        
        private bool persistedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool recursive {
            get {
                return this.recursiveField;
            }
            set {
                this.recursiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool recursiveSpecified {
            get {
                return this.recursiveFieldSpecified;
            }
            set {
                this.recursiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool persisted {
            get {
                return this.persistedField;
            }
            set {
                this.persistedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool persistedSpecified {
            get {
                return this.persistedFieldSpecified;
            }
            set {
                this.persistedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemChoiceType {
        
        /// <remarks/>
        backup,
        
        /// <remarks/>
        export,
        
        /// <remarks/>
        @object,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestGetdiffObject {
        
        private string classField;
        
        private string nameField;
        
        private bool recursiveField;
        
        private bool recursiveFieldSpecified;
        
        private bool frompersistedField;
        
        private bool frompersistedFieldSpecified;
        
        private bool topersistedField;
        
        private bool topersistedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool recursive {
            get {
                return this.recursiveField;
            }
            set {
                this.recursiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool recursiveSpecified {
            get {
                return this.recursiveFieldSpecified;
            }
            set {
                this.recursiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("from-persisted")]
        public bool frompersisted {
            get {
                return this.frompersistedField;
            }
            set {
                this.frompersistedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool frompersistedSpecified {
            get {
                return this.frompersistedFieldSpecified;
            }
            set {
                this.frompersistedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("to-persisted")]
        public bool topersisted {
            get {
                return this.topersistedField;
            }
            set {
                this.topersistedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool topersistedSpecified {
            get {
                return this.topersistedFieldSpecified;
            }
            set {
                this.topersistedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestGetdiffTO {
        
        private object itemField;
        
        private ItemChoiceType1 itemElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("backup", typeof(base64binary))]
        [System.Xml.Serialization.XmlElementAttribute("export", typeof(base64binary))]
        [System.Xml.Serialization.XmlElementAttribute("object", typeof(requestGetdiffTOObject))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType1 ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestGetdiffTOObject {
        
        private string classField;
        
        private string nameField;
        
        private bool recursiveField;
        
        private bool recursiveFieldSpecified;
        
        private bool persistedField;
        
        private bool persistedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool recursive {
            get {
                return this.recursiveField;
            }
            set {
                this.recursiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool recursiveSpecified {
            get {
                return this.recursiveFieldSpecified;
            }
            set {
                this.recursiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool persisted {
            get {
                return this.persistedField;
            }
            set {
                this.persistedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool persistedSpecified {
            get {
                return this.persistedFieldSpecified;
            }
            set {
                this.persistedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management", IncludeInSchema=false)]
    public enum ItemChoiceType1 {
        
        /// <remarks/>
        backup,
        
        /// <remarks/>
        export,
        
        /// <remarks/>
        @object,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestGetfile {
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestGetfilestore {
        
        private filestorelocation locationField;
        
        private bool locationFieldSpecified;
        
        private bool annotatedField;
        
        private bool annotatedFieldSpecified;
        
        private bool layoutonlyField;
        
        private bool layoutonlyFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public filestorelocation location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool locationSpecified {
            get {
                return this.locationFieldSpecified;
            }
            set {
                this.locationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool annotated {
            get {
                return this.annotatedField;
            }
            set {
                this.annotatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool annotatedSpecified {
            get {
                return this.annotatedFieldSpecified;
            }
            set {
                this.annotatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("layout-only")]
        public bool layoutonly {
            get {
                return this.layoutonlyField;
            }
            set {
                this.layoutonlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool layoutonlySpecified {
            get {
                return this.layoutonlyFieldSpecified;
            }
            set {
                this.layoutonlyFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="filestore-location", Namespace="http://www.datapower.com/schemas/management")]
    public enum filestorelocation {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("local:")]
        local,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("store:")]
        store,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("export:")]
        export,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cert:")]
        cert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sharedcert:")]
        sharedcert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pubcert:")]
        pubcert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("image:")]
        image,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("config:")]
        config,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("logtemp:")]
        logtemp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("logstore:")]
        logstore,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("temporary:")]
        temporary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tasktemplates:")]
        tasktemplates,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestGetlog {
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestGetsamlart {
        
        private string userField;
        
        private string passwordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestGetstatus {
        
        private StatusEnum classField;
        
        private bool classFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public StatusEnum @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classSpecified {
            get {
                return this.classFieldSpecified;
            }
            set {
                this.classFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/management")]
    public enum StatusEnum {
        
        /// <remarks/>
        ActiveUsers,
        
        /// <remarks/>
        ARPStatus,
        
        /// <remarks/>
        DateTimeStatus,
        
        /// <remarks/>
        Version,
        
        /// <remarks/>
        FirmwareVersion,
        
        /// <remarks/>
        LibraryVersion,
        
        /// <remarks/>
        MemoryStatus,
        
        /// <remarks/>
        FilesystemStatus,
        
        /// <remarks/>
        RoutingStatus,
        
        /// <remarks/>
        RoutingStatus2,
        
        /// <remarks/>
        StylesheetStatus,
        
        /// <remarks/>
        StylesheetStatusSimpleIndex,
        
        /// <remarks/>
        StylesheetCachingSummary,
        
        /// <remarks/>
        DocumentStatus,
        
        /// <remarks/>
        DocumentStatusSimpleIndex,
        
        /// <remarks/>
        DocumentCachingSummary,
        
        /// <remarks/>
        PortStatus,
        
        /// <remarks/>
        NetworkInterfaceStatus,
        
        /// <remarks/>
        EthernetInterfaceStatus,
        
        /// <remarks/>
        VlanInterfaceStatus,
        
        /// <remarks/>
        TCPTable,
        
        /// <remarks/>
        TCPSummary,
        
        /// <remarks/>
        ConnectionsAccepted,
        
        /// <remarks/>
        CPUUsage,
        
        /// <remarks/>
        StylesheetExecutions,
        
        /// <remarks/>
        StylesheetExecutionsSimpleIndex,
        
        /// <remarks/>
        StylesheetMeanExecutionTime,
        
        /// <remarks/>
        StylesheetMeanExecutionTimeSimpleIndex,
        
        /// <remarks/>
        HTTPConnectionsRequested,
        
        /// <remarks/>
        HTTPConnectionsReused,
        
        /// <remarks/>
        HTTPConnectionsCreated,
        
        /// <remarks/>
        HTTPConnectionsReturned,
        
        /// <remarks/>
        HTTPConnectionsOffered,
        
        /// <remarks/>
        HTTPConnectionsDestroyed,
        
        /// <remarks/>
        HTTPConnections,
        
        /// <remarks/>
        StandbyStatus,
        
        /// <remarks/>
        LoadBalancerStatus,
        
        /// <remarks/>
        ReceiveKbpsThroughput,
        
        /// <remarks/>
        NetworkReceiveDataThroughput,
        
        /// <remarks/>
        ReceivePacketThroughput,
        
        /// <remarks/>
        NetworkReceivePacketThroughput,
        
        /// <remarks/>
        TransmitKbpsThroughput,
        
        /// <remarks/>
        NetworkTransmitDataThroughput,
        
        /// <remarks/>
        TransmitPacketThroughput,
        
        /// <remarks/>
        NetworkTransmitPacketThroughput,
        
        /// <remarks/>
        LogTargetStatus,
        
        /// <remarks/>
        StylesheetProfiles,
        
        /// <remarks/>
        StylesheetProfilesSimpleIndex,
        
        /// <remarks/>
        SystemUsage,
        
        /// <remarks/>
        HTTPTransactions,
        
        /// <remarks/>
        HTTPMeanTransactionTime,
        
        /// <remarks/>
        EnvironmentalSensors,
        
        /// <remarks/>
        MessageCounts,
        
        /// <remarks/>
        MessageCountFilters,
        
        /// <remarks/>
        MessageSources,
        
        /// <remarks/>
        MessageDurations,
        
        /// <remarks/>
        MessageDurationFilters,
        
        /// <remarks/>
        ObjectStatus,
        
        /// <remarks/>
        LicenseStatus,
        
        /// <remarks/>
        MQStatus,
        
        /// <remarks/>
        MQQMstatus,
        
        /// <remarks/>
        DynamicQueueManager,
        
        /// <remarks/>
        DNSNameServerStatus,
        
        /// <remarks/>
        DNSSearchDomainStatus,
        
        /// <remarks/>
        DNSStaticHostStatus,
        
        /// <remarks/>
        NTPRefreshStatus,
        
        /// <remarks/>
        CryptoEngineStatus,
        
        /// <remarks/>
        HSMKeyStatus,
        
        /// <remarks/>
        DomainStatus,
        
        /// <remarks/>
        WSWSDLStatus,
        
        /// <remarks/>
        WSWSDLStatusSimpleIndex,
        
        /// <remarks/>
        WSOperationsStatus,
        
        /// <remarks/>
        WSOperationsStatusSimpleIndex,
        
        /// <remarks/>
        UDDISubscriptionStatusSimpleIndex,
        
        /// <remarks/>
        UDDISubscriptionKeyStatusSimpleIndex,
        
        /// <remarks/>
        UDDISubscriptionServiceStatusSimpleIndex,
        
        /// <remarks/>
        SLMSummaryStatus,
        
        /// <remarks/>
        WSMAgentStatus,
        
        /// <remarks/>
        WSMAgentSpoolers,
        
        /// <remarks/>
        SSHTrustedHostStatus,
        
        /// <remarks/>
        SLMPeeringStatus,
        
        /// <remarks/>
        NFSMountStatus,
        
        /// <remarks/>
        SNMPStatus,
        
        /// <remarks/>
        WebAppFwAccepted,
        
        /// <remarks/>
        WebAppFwRejected,
        
        /// <remarks/>
        DNSCacheHostStatus,
        
        /// <remarks/>
        EnvironmentalFanSensors,
        
        /// <remarks/>
        TibcoEMSStatus,
        
        /// <remarks/>
        WebSphereJMSStatus,
        
        /// <remarks/>
        FirmwareStatus,
        
        /// <remarks/>
        FilePollerStatus,
        
        /// <remarks/>
        ServicesStatus,
        
        /// <remarks/>
        WSOperationMetrics,
        
        /// <remarks/>
        WSOperationMetricsSimpleIndex,
        
        /// <remarks/>
        SQLStatus,
        
        /// <remarks/>
        WSRRSubscriptionStatus,
        
        /// <remarks/>
        WSRRSubscriptionServiceStatus,
        
        /// <remarks/>
        DomainCheckpointStatus,
        
        /// <remarks/>
        IMSConnectstatus,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class requestSetfile {
        
        private string nameField;
        
        private byte[] valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="base64Binary")]
        public byte[] Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class response {
        
        private System.DateTime timestampField;
        
        private bool timestampFieldSpecified;
        
        private object itemField;
        
        /// <remarks/>
        public System.DateTime timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timestampSpecified {
            get {
                return this.timestampFieldSpecified;
            }
            set {
                this.timestampFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("config", typeof(AnyConfigElement))]
        [System.Xml.Serialization.XmlElementAttribute("conformance-report", typeof(responseConformancereport))]
        [System.Xml.Serialization.XmlElementAttribute("diff", typeof(responseDiff))]
        [System.Xml.Serialization.XmlElementAttribute("file", typeof(file))]
        [System.Xml.Serialization.XmlElementAttribute("filestore", typeof(responseFilestore))]
        [System.Xml.Serialization.XmlElementAttribute("import", typeof(responseImport))]
        [System.Xml.Serialization.XmlElementAttribute("log", typeof(responseLog))]
        [System.Xml.Serialization.XmlElementAttribute("result", typeof(responseResult))]
        [System.Xml.Serialization.XmlElementAttribute("status", typeof(AnyStatusElement))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class responseConformancereport {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class responseDiff {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class responseFilestore {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class responseImport {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class responseLog {
        
        private logentry[] logentryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("log-entry")]
        public logentry[] logentry {
            get {
                return this.logentryField;
            }
            set {
                this.logentryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/management")]
    public partial class responseResult {
        
        private System.Xml.XmlNode[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlNode[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void operationCompletedEventHandler(object sender, operationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class operationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal operationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public response Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((response)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591